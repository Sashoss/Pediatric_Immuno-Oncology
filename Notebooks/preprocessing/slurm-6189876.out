Processing file: ../create_seurat_objects/out//SCPCS000002.rds
Reading Seurat object from: ../create_seurat_objects/out//SCPCS000002.rds 
Running DoubletFinder on: ../create_seurat_objects/out//SCPCS000002.rds 
Normalizing layer: counts
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Finding variable features for layer counts
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Centering and scaling data matrix
  |                                                                              |                                                                      |   0%  |                                                                              |===================================                                   |  50%  |                                                                              |======================================================================| 100%
PC_ 1 
Positive:  ENSG00000169760, ENSG00000168702, ENSG00000169306, ENSG00000178568, ENSG00000185737, ENSG00000151322, ENSG00000185565, ENSG00000187391, ENSG00000134532, ENSG00000148948 
	   ENSG00000169862, ENSG00000154654, ENSG00000184408, ENSG00000169946, ENSG00000175161, ENSG00000239268, ENSG00000135298, ENSG00000150275, ENSG00000066032, ENSG00000130226 
	   ENSG00000176204, ENSG00000164796, ENSG00000152208, ENSG00000184226, ENSG00000170579, ENSG00000152578, ENSG00000139915, ENSG00000156103, ENSG00000150471, ENSG00000189337 
Negative:  ENSG00000087086, ENSG00000204287, ENSG00000118785, ENSG00000132965, ENSG00000130203, ENSG00000234906, ENSG00000223865, ENSG00000170458, ENSG00000275395, ENSG00000006747 
	   ENSG00000087253, ENSG00000175899, ENSG00000196154, ENSG00000163563, ENSG00000275302, ENSG00000277632, ENSG00000173391, ENSG00000142583, ENSG00000168329, ENSG00000114013 
	   ENSG00000074706, ENSG00000137331, ENSG00000170542, ENSG00000038945, ENSG00000100292, ENSG00000115956, ENSG00000177575, ENSG00000105697, ENSG00000163220, ENSG00000186417 
PC_ 2 
Positive:  ENSG00000125462, ENSG00000131094, ENSG00000164434, ENSG00000147588, ENSG00000184221, ENSG00000105894, ENSG00000132692, ENSG00000114115, ENSG00000160307, ENSG00000166165 
	   ENSG00000125148, ENSG00000164106, ENSG00000134853, ENSG00000131095, ENSG00000258947, ENSG00000205927, ENSG00000130600, ENSG00000115457, ENSG00000288695, ENSG00000174521 
	   ENSG00000005513, ENSG00000172020, ENSG00000114646, ENSG00000242265, ENSG00000115461, ENSG00000158164, ENSG00000248184, ENSG00000132688, ENSG00000168309, ENSG00000135919 
Negative:  ENSG00000163694, ENSG00000139132, ENSG00000118985, ENSG00000245532, ENSG00000172243, ENSG00000248905, ENSG00000231131, ENSG00000042980, ENSG00000151726, ENSG00000153208 
	   ENSG00000112149, ENSG00000100644, ENSG00000140044, ENSG00000285162, ENSG00000286618, ENSG00000173391, ENSG00000127507, ENSG00000137393, ENSG00000115919, ENSG00000187098 
	   ENSG00000177575, ENSG00000114013, ENSG00000176597, ENSG00000168405, ENSG00000038945, ENSG00000184005, ENSG00000147454, ENSG00000086062, ENSG00000198814, ENSG00000166068 
PC_ 3 
Positive:  ENSG00000169436, ENSG00000041982, ENSG00000134531, ENSG00000134668, ENSG00000018408, ENSG00000091136, ENSG00000173077, ENSG00000182256, ENSG00000131459, ENSG00000212719 
	   ENSG00000180801, ENSG00000172020, ENSG00000163618, ENSG00000145147, ENSG00000106714, ENSG00000249853, ENSG00000102024, ENSG00000149948, ENSG00000146674, ENSG00000075213 
	   ENSG00000285939, ENSG00000091129, ENSG00000205683, ENSG00000148935, ENSG00000122641, ENSG00000095637, ENSG00000163638, ENSG00000188643, ENSG00000100003, ENSG00000101955 
Negative:  ENSG00000116147, ENSG00000198732, ENSG00000183117, ENSG00000148123, ENSG00000136205, ENSG00000087495, ENSG00000169181, ENSG00000248184, ENSG00000185053, ENSG00000177103 
	   ENSG00000122584, ENSG00000154975, ENSG00000078725, ENSG00000018236, ENSG00000114279, ENSG00000111249, ENSG00000287151, ENSG00000170624, ENSG00000171587, ENSG00000185920 
	   ENSG00000282278, ENSG00000091428, ENSG00000227757, ENSG00000231918, ENSG00000102290, ENSG00000244128, ENSG00000172995, ENSG00000065361, ENSG00000156395, ENSG00000175497 
PC_ 4 
Positive:  ENSG00000118785, ENSG00000130203, ENSG00000087086, ENSG00000234906, ENSG00000204287, ENSG00000170458, ENSG00000175899, ENSG00000273749, ENSG00000006747, ENSG00000168329 
	   ENSG00000087253, ENSG00000172020, ENSG00000275395, ENSG00000142583, ENSG00000186417, ENSG00000162493, ENSG00000169436, ENSG00000100979, ENSG00000131095, ENSG00000100292 
	   ENSG00000173391, ENSG00000223865, ENSG00000100600, ENSG00000142089, ENSG00000041982, ENSG00000091129, ENSG00000166068, ENSG00000117115, ENSG00000114013, ENSG00000231131 
Negative:  ENSG00000145649, ENSG00000271503, ENSG00000185885, ENSG00000127824, ENSG00000213145, ENSG00000134242, ENSG00000164104, ENSG00000148773, ENSG00000137812, ENSG00000140563 
	   ENSG00000198901, ENSG00000113810, ENSG00000138778, ENSG00000066279, ENSG00000118193, ENSG00000113088, ENSG00000131747, ENSG00000080986, ENSG00000088325, ENSG00000213949 
	   ENSG00000169679, ENSG00000137804, ENSG00000184661, ENSG00000105374, ENSG00000284879, ENSG00000075218, ENSG00000134690, ENSG00000173762, ENSG00000118503, ENSG00000004468 
PC_ 5 
Positive:  ENSG00000123560, ENSG00000091513, ENSG00000285218, ENSG00000174607, ENSG00000105695, ENSG00000207955, ENSG00000117266, ENSG00000253807, ENSG00000147488, ENSG00000136960 
	   ENSG00000107317, ENSG00000170775, ENSG00000184144, ENSG00000173786, ENSG00000164303, ENSG00000250722, ENSG00000158352, ENSG00000064787, ENSG00000124920, ENSG00000155886 
	   ENSG00000164741, ENSG00000166173, ENSG00000165566, ENSG00000204655, ENSG00000114757, ENSG00000188580, ENSG00000103089, ENSG00000100399, ENSG00000105290, ENSG00000257585 
Negative:  ENSG00000214548, ENSG00000258399, ENSG00000225746, ENSG00000170776, ENSG00000225649, ENSG00000196090, ENSG00000182132, ENSG00000147481, ENSG00000273674, ENSG00000145934 
	   ENSG00000231918, ENSG00000259361, ENSG00000092439, ENSG00000185052, ENSG00000165995, ENSG00000244128, ENSG00000181234, ENSG00000231424, ENSG00000151067, ENSG00000259773 
	   ENSG00000247809, ENSG00000259417, ENSG00000156140, ENSG00000186185, ENSG00000282278, ENSG00000260691, ENSG00000103489, ENSG00000288546, ENSG00000133019, ENSG00000020577 
Warning: The default method for RunUMAP has changed from calling Python UMAP via reticulate to the R-native UWOT using the cosine metric
To use Python UMAP via reticulate, set umap.method to 'umap-learn' and metric to 'correlation'
This message will be shown once per session
18:12:17 UMAP embedding parameters a = 0.9922 b = 1.112
18:12:17 Read 1572 rows and found 14 numeric columns
18:12:17 Using Annoy for neighbor search, n_neighbors = 30
18:12:17 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
18:12:17 Writing NN index file to temp file /gpfs0/scratch/6189876/RtmpSNN5nR/file195e857e3ba1dd
18:12:17 Searching Annoy index using 1 thread, search_k = 3000
18:12:18 Annoy recall = 100%
18:12:18 Commencing smooth kNN distance calibration using 1 thread with target n_neighbors = 30
18:12:18 Initializing from normalized Laplacian + noise (using RSpectra)
18:12:18 Commencing optimization for 500 epochs, with 61782 positive edges
Using method 'umap'
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
18:12:20 Optimization finished
Computing nearest neighbor graph
Computing SNN
Modularity Optimizer version 1.3.0 by Ludo Waltman and Nees Jan van Eck

Number of nodes: 1572
Number of edges: 48762

Running Louvain algorithm...
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Maximum modularity in 10 random starts: 0.9651
Number of communities: 5
Elapsed time: 0 seconds
Loading required package: fields
Loading required package: spam
Spam version 2.11-0 (2024-10-03) is loaded.
Type 'help( Spam)' or 'demo( spam)' for a short introduction 
and overview of this package.
Help for individual functions is also obtained by adding the
suffix '.spam' to the function name, e.g. 'help( chol.spam)'.

Attaching package: ‘spam’

The following objects are masked from ‘package:base’:

    backsolve, forwardsolve

Loading required package: viridisLite

Try help(fields) to get started.
Loading required package: parallel
[1] "Creating artificial doublets for pN = 5%"
[1] "Creating artificial doublets for pN = 10%"
[1] "Creating artificial doublets for pN = 15%"
[1] "Creating artificial doublets for pN = 20%"
[1] "Creating artificial doublets for pN = 25%"
[1] "Creating artificial doublets for pN = 30%"
[1] "Creating Seurat object..."
[1] "Creating Seurat object..."
[1] "Creating Seurat object..."
[1] "Creating Seurat object..."
[1] "Creating Seurat object..."
[1] "Creating Seurat object..."
[1] "Normalizing Seurat object..."
Normalizing layer: counts
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
[1] "Normalizing Seurat object..."
Normalizing layer: counts
Performing log-normalization
[1] "Normalizing Seurat object..."
Normalizing layer: counts
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**Performing log-normalization
**[1] "Normalizing Seurat object..."*
Normalizing layer: counts
*****0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
******Performing log-normalization
************************************[1]* "Normalizing Seurat object..."
0%   10   20   30   40   50   60   70   80   90   100%
Normalizing layer: counts
[----|----|----|----|----|----|----|----|----|----|
**********|
***************Performing log-normalization
************************************0%   10   20   30   40   50   60   70   80   90   100%
**[----|----|----|----|----|----|----|----|----|----|
***|
*****************************************|
****************************************|
[1] "Normalizing Seurat object..."
Normalizing layer: counts
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**[1] "Finding variable genes..."
Finding variable features for layer counts
***********************************Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
*********************************************************|
******|
[1] "Finding variable genes..."
Finding variable features for layer counts
[1] "Finding variable genes..."
Finding variable features for layer counts
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
[1] "Finding variable genes..."
Finding variable features for layer counts
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
[1] "Finding variable genes..."
Finding variable features for layer counts
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
[1] "Finding variable genes..."
Finding variable features for layer counts
[1] "Scaling data..."
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************Centering and scaling data matrix
***  |                                                                            *  |                                                                      |   0%********************  |                                                                            *  |===================================                                   |  50%***********|
  |                                                                              |======================================================================| 100%
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
********************************************[1]* "Running PCA..."
*****|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
[1] "Scaling data..."
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
****************************Centering and scaling data matrix
*****  |                                                                            *  |                                                                      |   0%****************|
  |                                                                              |===================================                                   |  50%  |                                                                              |======================================================================| 100%
Calculating feature variances of standardized and clipped values
[1] "Scaling data..."
Centering and scaling data matrix
  |                                                                              |                                                                      |   0%[1] "Running PCA..."
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
************  |                                                                            *  |===================================                                   |  50%****************************  |                                                                            *  |======================================================================| 100%
********|
[1] "Scaling data..."
Centering and scaling data matrix
[1] "Running PCA..."
  |                                                                              |                                                                      |   0%  |                                                                              |===================================                                   |  50%  |                                                                              |======================================================================| 100%
[1] "Scaling data..."
[1] "Calculating PC distance matrix..."
[1] "Running PCA..."
Centering and scaling data matrix
  |                                                                              |                                                                      |   0%  |                                                                              |===================================                                   |  50%Calculating feature variances of standardized and clipped values
  |                                                                              |======================================================================| 100%
[1] "Calculating PC distance matrix..."
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**********************************[1]* "Running PCA..."
***************|
[1] "Calculating PC distance matrix..."
[1] "Defining neighborhoods..."
[1] "Scaling data..."
[1] "Calculating PC distance matrix..."
Centering and scaling data matrix
  |                                                                              |                                                                      |   0%[1] "Defining neighborhoods..."
  |                                                                              |===================================                                   |  50%  |                                                                              |======================================================================| 100%
[1] "Computing pANN across all pK..."
[1] "pK = 0.01..."
[1] "pK = 0.02..."
[1] "pK = 0.03..."
[1] "Defining neighborhoods..."
[1][1] "Running PCA..."
 "pK = 0.04..."
[1] "Calculating PC distance matrix..."
[1] "pK = 0.05..."
[1] "Computing pANN across all pK..."
[1] "pK = 0.01..."
[1] "pK = 0.06..."
[1] "pK = 0.02..."
[1] "pK = 0.07..."
[1] "pK = 0.03..."
[1] "pK = 0.04..."
[1] "pK = 0.08..."
[1] "pK = 0.05..."
[1] "pK = 0.09..."
[1] "pK = 0.06..."
[1] "Defining neighborhoods..."
[1] "pK = 0.1..."
[1] "pK = 0.07..."
[1] "Computing pANN across all pK..."
[1] "pK = 0.01..."
[1] "pK = 0.11..."
[1] "pK = 0.02..."
[1] "pK = 0.08..."
[1] "pK = 0.12..."
[1] "pK = 0.03..."
[1] "pK = 0.09..."
[1] "pK = 0.13..."
[1] "pK = 0.04..."
[1] "pK = 0.1..."
[1] "pK = 0.14..."
[1] "pK = 0.05..."
[1] "pK = 0.11..."
[1] "pK = 0.15..."
[1] "pK = 0.06..."
[1] "pK = 0.12..."
[1][1] "pK = 0.16..."
 "pK = 0.07..."
[1] "pK = 0.13..."
[1] "Defining neighborhoods..."
[1][1] "pK = 0.08..."
 "pK = 0.14..."
[1] "pK = 0.17..."
[1] "Computing pANN across all pK..."
[1] "pK = 0.01..."
[1] "pK = 0.09..."
[1] "pK = 0.15..."
[1] "pK = 0.18..."
[1] "pK = 0.02..."
[1] "pK = 0.1..."
[1] "pK = 0.16..."
[1] "pK = 0.19..."
[1] "pK = 0.03..."
[1] "pK = 0.11..."
[1] "Calculating PC distance matrix..."
[1] "pK = 0.2..."
[1] "pK = 0.04..."
[1] "pK = 0.17..."
[1] "pK = 0.12..."
[1] "pK = 0.21..."
[1] "pK = 0.05..."
[1] "pK = 0.18..."[1]
 "pK = 0.13..."
[1] "pK = 0.06..."
[1] "pK = 0.22..."
[1][1] "pK = 0.14..."
 "pK = 0.19..."
[1] "pK = 0.07..."
[1] "pK = 0.23..."
[1] "pK = 0.15..."
[1] "pK = 0.2..."
[1] "pK = 0.24..."
[1] "pK = 0.08..."
[1] "pK = 0.16..."
[1] "pK = 0.21..."
[1] "pK = 0.25..."
[1] "Computing pANN across all pK..."
[1][1] "pK = 0.09..."
 "pK = 0.01..."
[1] "pK = 0.22..."
[1] "pK = 0.17..."
[1] "pK = 0.02..."
[1] "pK = 0.1..."
[1] "pK = 0.23..."
[1] "pK = 0.26..."
[1] "pK = 0.03..."
[1] "pK = 0.18..."
[1] "pK = 0.11..."
[1] "pK = 0.24..."
[1] "pK = 0.27..."
[1] "pK = 0.04..."
[1] "pK = 0.12..."[1]
 "pK = 0.19..."
[1][1] "pK = 0.25..."
 "pK = 0.05..."
[1] "pK = 0.28..."
[1] "pK = 0.13..."
[1] "pK = 0.2..."
[1] "pK = 0.06..."
[1] "pK = 0.29..."
[1] "pK = 0.14..."
[1] "pK = 0.21..."
[1] "pK = 0.26..."
[1] "pK = 0.07..."
[1] "pK = 0.3..."
[1] "pK = 0.15..."
[1] "pK = 0.22..."
[1] "pK = 0.27..."
[1] "pK = 0.08..."[1]
 "pK = 0.16..."
[1] "pK = 0.23..."
[1] "pK = 0.28..."
[1] "Defining neighborhoods..."
[1] "pK = 0.09..."
[1] "pK = 0.24..."
[1] "pK = 0.29..."
[1] "pK = 0.17..."
[1] "pK = 0.1..."
[1] "pK = 0.25..."
[1] "pK = 0.3..."
[1] "pK = 0.18..."
[1] "pK = 0.11..."
[1] "pK = 0.19..."
[1] "pK = 0.12..."
[1] "pK = 0.26..."
[1] "pK = 0.13..."[1]
 "pK = 0.2..."
[1] "pK = 0.27..."
[1] "pK = 0.14..."
[1] "pK = 0.21..."
[1] "pK = 0.28..."
[1] "pK = 0.15..."
[1] "pK = 0.22..."
[1] "pK = 0.29..."
[1] "pK = 0.16..."
[1] "pK = 0.23..."
[1] "pK = 0.3..."
[1] "pK = 0.24..."
[1] "pK = 0.17..."
[1] "Computing pANN across all pK..."
[1] "pK = 0.01..."
[1] "pK = 0.25..."
[1] "pK = 0.18..."
[1] "pK = 0.02..."
[1] "pK = 0.03..."
[1] "pK = 0.19..."
[1][1] "pK = 0.04..."
 "pK = 0.26..."
[1] "pK = 0.2..."
[1] "pK = 0.05..."
[1] "pK = 0.27..."
[1] "pK = 0.21..."
[1] "pK = 0.06..."
[1] "pK = 0.28..."
[1] "pK = 0.22..."
[1] "pK = 0.07..."
[1] "pK = 0.29..."
[1] "pK = 0.23..."
[1] "pK = 0.08..."
[1] "pK = 0.3..."
[1] "pK = 0.24..."
[1] "pK = 0.09..."
[1] "pK = 0.25..."
[1] "pK = 0.1..."
[1] "pK = 0.11..."
[1] "pK = 0.26..."
[1] "pK = 0.12..."
[1] "pK = 0.27..."
[1] "pK = 0.13..."
[1] "pK = 0.14..."
[1] "pK = 0.28..."
[1] "pK = 0.15..."
[1] "pK = 0.29..."
[1] "pK = 0.16..."
[1] "pK = 0.3..."
[1] "pK = 0.17..."
[1] "pK = 0.18..."
[1] "pK = 0.19..."
[1] "pK = 0.2..."
[1] "pK = 0.21..."
[1] "pK = 0.22..."
[1] "pK = 0.23..."
[1] "pK = 0.24..."
[1] "pK = 0.25..."
[1] "pK = 0.26..."
[1] "pK = 0.27..."
[1] "pK = 0.28..."
[1] "pK = 0.29..."
[1] "pK = 0.3..."
Loading required package: KernSmooth
KernSmooth 2.23 loaded
Copyright M. P. Wand 1997-2009
Loading required package: ROCR
NULL
[1] "Creating 524 artificial doublets..."
[1] "Creating Seurat object..."
[1] "Normalizing Seurat object..."
Normalizing layer: counts
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
[1] "Finding variable genes..."
Finding variable features for layer counts
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
[1] "Scaling data..."
Centering and scaling data matrix
  |                                                                              |                                                                      |   0%  |                                                                              |===================================                                   |  50%  |                                                                              |======================================================================| 100%
[1] "Running PCA..."
[1] "Calculating PC distance matrix..."
[1] "Computing pANN..."
[1] "Classifying doublets.."
Saving processed Seurat object to: ./out//SCPCS000002_doubletfinder.rds 
          used  (Mb) gc trigger  (Mb) max used  (Mb)
Ncells 3348585 178.9    4975404 265.8  4975404 265.8
Vcells 5848707  44.7   71824841 548.0 89779589 685.0
Processing complete for: ../create_seurat_objects/out//SCPCS000002.rds 
Finished processing file: ../create_seurat_objects/out//SCPCS000002.rds
Processing file: ../create_seurat_objects/out//SCPCS000003.rds
Reading Seurat object from: ../create_seurat_objects/out//SCPCS000003.rds 
Running DoubletFinder on: ../create_seurat_objects/out//SCPCS000003.rds 
Normalizing layer: counts
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Finding variable features for layer counts
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Centering and scaling data matrix
  |                                                                              |                                                                      |   0%  |                                                                              |===================================                                   |  50%  |                                                                              |======================================================================| 100%
PC_ 1 
Positive:  ENSG00000198886, ENSG00000198804, ENSG00000278996, ENSG00000280441, ENSG00000107317, ENSG00000205542, ENSG00000083807, ENSG00000179796, ENSG00000117724, ENSG00000288565 
	   ENSG00000258986, ENSG00000234915, ENSG00000198934, ENSG00000197106, ENSG00000225914, ENSG00000182712, ENSG00000271122, ENSG00000124523, ENSG00000141026, ENSG00000106327 
	   ENSG00000272523, ENSG00000100105, ENSG00000279082, ENSG00000256124, ENSG00000259146, ENSG00000259120, ENSG00000178162, ENSG00000236333, ENSG00000255153, ENSG00000234688 
Negative:  ENSG00000285106, ENSG00000288632, ENSG00000120071, ENSG00000184384, ENSG00000130449, ENSG00000118007, ENSG00000230590, ENSG00000171310, ENSG00000182185, ENSG00000152270 
	   ENSG00000052841, ENSG00000185305, ENSG00000008083, ENSG00000142347, ENSG00000288630, ENSG00000154822, ENSG00000072786, ENSG00000065413, ENSG00000135905, ENSG00000171132 
	   ENSG00000110075, ENSG00000160584, ENSG00000143207, ENSG00000114861, ENSG00000196312, ENSG00000136250, ENSG00000164808, ENSG00000158987, ENSG00000107643, ENSG00000082805 
PC_ 2 
Positive:  ENSG00000109686, ENSG00000269821, ENSG00000139915, ENSG00000060718, ENSG00000169946, ENSG00000250251, ENSG00000162337, ENSG00000226179, ENSG00000168702, ENSG00000088538 
	   ENSG00000138193, ENSG00000263327, ENSG00000103319, ENSG00000227110, ENSG00000152578, ENSG00000170579, ENSG00000100014, ENSG00000156103, ENSG00000134376, ENSG00000148948 
	   ENSG00000110693, ENSG00000144724, ENSG00000182771, ENSG00000180611, ENSG00000255145, ENSG00000150471, ENSG00000101542, ENSG00000122584, ENSG00000151322, ENSG00000162687 
Negative:  ENSG00000075884, ENSG00000081237, ENSG00000027075, ENSG00000122862, ENSG00000198879, ENSG00000168918, ENSG00000141506, ENSG00000185989, ENSG00000100345, ENSG00000171488 
	   ENSG00000136250, ENSG00000188511, ENSG00000151702, ENSG00000151883, ENSG00000107099, ENSG00000141293, ENSG00000155307, ENSG00000145703, ENSG00000112576, ENSG00000164674 
	   ENSG00000264031, ENSG00000108669, ENSG00000145819, ENSG00000096060, ENSG00000123146, ENSG00000026508, ENSG00000008513, ENSG00000105329, ENSG00000053254, ENSG00000153234 
PC_ 3 
Positive:  ENSG00000019582, ENSG00000182578, ENSG00000159189, ENSG00000059377, ENSG00000125730, ENSG00000026297, ENSG00000120594, ENSG00000168329, ENSG00000170345, ENSG00000106034 
	   ENSG00000145569, ENSG00000027697, ENSG00000075651, ENSG00000109066, ENSG00000120889, ENSG00000148908, ENSG00000119535, ENSG00000169313, ENSG00000051523, ENSG00000172216 
	   ENSG00000166428, ENSG00000173369, ENSG00000103811, ENSG00000118785, ENSG00000177606, ENSG00000171659, ENSG00000183160, ENSG00000104774, ENSG00000125089, ENSG00000198276 
Negative:  ENSG00000141293, ENSG00000034053, ENSG00000164674, ENSG00000185344, ENSG00000183878, ENSG00000188511, ENSG00000127152, ENSG00000113263, ENSG00000151883, ENSG00000163947 
	   ENSG00000135048, ENSG00000155926, ENSG00000123146, ENSG00000100393, ENSG00000112297, ENSG00000173200, ENSG00000253980, ENSG00000100425, ENSG00000065675, ENSG00000164300 
	   ENSG00000100207, ENSG00000078177, ENSG00000146143, ENSG00000100523, ENSG00000069493, ENSG00000170525, ENSG00000146285, ENSG00000106415, ENSG00000174485, ENSG00000127311 
PC_ 4 
Positive:  ENSG00000259628, ENSG00000171587, ENSG00000136731, ENSG00000120519, ENSG00000115183, ENSG00000151474, ENSG00000185864, ENSG00000159086, ENSG00000165675, ENSG00000007545 
	   ENSG00000119778, ENSG00000154309, ENSG00000164603, ENSG00000119772, ENSG00000079134, ENSG00000048471, ENSG00000077063, ENSG00000175048, ENSG00000183570, ENSG00000159189 
	   ENSG00000118515, ENSG00000125730, ENSG00000072786, ENSG00000163590, ENSG00000026297, ENSG00000168329, ENSG00000156299, ENSG00000204152, ENSG00000184588, ENSG00000185305 
Negative:  ENSG00000228315, ENSG00000132274, ENSG00000150907, ENSG00000141458, ENSG00000117643, ENSG00000100266, ENSG00000148356, ENSG00000087589, ENSG00000143891, ENSG00000198673 
	   ENSG00000221968, ENSG00000148842, ENSG00000069702, ENSG00000075420, ENSG00000059804, ENSG00000187736, ENSG00000144802, ENSG00000102572, ENSG00000071205, ENSG00000109906 
	   ENSG00000090924, ENSG00000111364, ENSG00000162641, ENSG00000169744, ENSG00000241684, ENSG00000182022, ENSG00000231205, ENSG00000198467, ENSG00000141644, ENSG00000144366 
PC_ 5 
Positive:  ENSG00000198089, ENSG00000198887, ENSG00000083097, ENSG00000171456, ENSG00000267179, ENSG00000130714, ENSG00000172071, ENSG00000135317, ENSG00000080815, ENSG00000138802 
	   ENSG00000111860, ENSG00000205659, ENSG00000159459, ENSG00000151746, ENSG00000015568, ENSG00000196453, ENSG00000286239, ENSG00000166016, ENSG00000189136, ENSG00000175764 
	   ENSG00000123908, ENSG00000196511, ENSG00000284879, ENSG00000169519, ENSG00000275778, ENSG00000189079, ENSG00000100425, ENSG00000103365, ENSG00000168904, ENSG00000196275 
Negative:  ENSG00000197081, ENSG00000135655, ENSG00000112941, ENSG00000105778, ENSG00000140443, ENSG00000072818, ENSG00000162601, ENSG00000172292, ENSG00000171608, ENSG00000141568 
	   ENSG00000245532, ENSG00000231721, ENSG00000065883, ENSG00000172728, ENSG00000104880, ENSG00000198821, ENSG00000267618, ENSG00000108219, ENSG00000054611, ENSG00000123146 
	   ENSG00000183826, ENSG00000113916, ENSG00000101493, ENSG00000162402, ENSG00000187764, ENSG00000170873, ENSG00000153250, ENSG00000141298, ENSG00000134516, ENSG00000174501 
Warning: The default method for RunUMAP has changed from calling Python UMAP via reticulate to the R-native UWOT using the cosine metric
To use Python UMAP via reticulate, set umap.method to 'umap-learn' and metric to 'correlation'
This message will be shown once per session
18:12:41 UMAP embedding parameters a = 0.9922 b = 1.112
18:12:41 Read 1004 rows and found 16 numeric columns
18:12:41 Using Annoy for neighbor search, n_neighbors = 30
18:12:41 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
18:12:42 Writing NN index file to temp file /gpfs0/scratch/6189876/RtmpDQkjZs/file195fc940aeb8c
18:12:42 Searching Annoy index using 1 thread, search_k = 3000
18:12:42 Annoy recall = 100%
18:12:42 Commencing smooth kNN distance calibration using 1 thread with target n_neighbors = 30
18:12:43 Initializing from normalized Laplacian + noise (using RSpectra)
18:12:43 Commencing optimization for 500 epochs, with 47442 positive edges
Using method 'umap'
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
18:12:44 Optimization finished
Computing nearest neighbor graph
Computing SNN
Modularity Optimizer version 1.3.0 by Ludo Waltman and Nees Jan van Eck

Number of nodes: 1004
Number of edges: 40884

Running Louvain algorithm...
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Maximum modularity in 10 random starts: 0.9000
Number of communities: 1
Elapsed time: 0 seconds
Loading required package: fields
Loading required package: spam
Spam version 2.11-0 (2024-10-03) is loaded.
Type 'help( Spam)' or 'demo( spam)' for a short introduction 
and overview of this package.
Help for individual functions is also obtained by adding the
suffix '.spam' to the function name, e.g. 'help( chol.spam)'.

Attaching package: ‘spam’

The following objects are masked from ‘package:base’:

    backsolve, forwardsolve

Loading required package: viridisLite

Try help(fields) to get started.
Loading required package: parallel
[1] "Creating artificial doublets for pN = 5%"
[1] "Creating artificial doublets for pN = 10%"
[1] "Creating artificial doublets for pN = 15%"
[1] "Creating artificial doublets for pN = 20%"
[1] "Creating artificial doublets for pN = 25%"
[1] "Creating artificial doublets for pN = 30%"
[1] "Creating Seurat object..."
[1] "Creating Seurat object..."
[1] "Creating Seurat object..."
[1] "Creating Seurat object..."
[1] "Creating Seurat object..."
[1] "Creating Seurat object..."
[1] "Normalizing Seurat object..."
Normalizing layer: counts
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
*[1]* "Normalizing Seurat object..."
*Normalizing layer: counts
**************Performing log-normalization
*************0%   10   20   30   40   50   60   70   80   90   100%
*[----|----|----|----|----|----|----|----|----|----|
********[1]* "Normalizing Seurat object..."*
**Normalizing layer: counts
*******************|
*****Performing log-normalization
**************[1]0%   10   20   30   40   50   60   70   80   90   100%
 "Normalizing Seurat object..."*
[----|----|----|----|----|----|----|----|----|----|
**Normalizing layer: counts
***************************|
****************Performing log-normalization
*************0%   10   20   30   40   50   60   70   80   90   100%
*[----|----|----|----|----|----|----|----|----|----|
*[1]* "Normalizing Seurat object..."
**Normalizing layer: counts
***********|
******Performing log-normalization
***************[1]* "Normalizing Seurat object..."*
0%   10   20   30   40   50   60   70   80   90   100%
*[----|----|----|----|----|----|----|----|----|----|
Normalizing layer: counts
**************************Performing log-normalization
*********|
*********0%   10   20   30   40   50   60   70   80   90   100%
*[----|----|----|----|----|----|----|----|----|----|
*********************************************|
******************************|
[1] "Finding variable genes..."
Finding variable features for layer counts
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************[1]* "Finding variable genes..."*
***Finding variable features for layer counts
*******************************|
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
*********************************[1]* "Finding variable genes..."*
***Finding variable features for layer counts
************|
[1] "Finding variable genes..."
Calculating gene variances
Finding variable features for layer counts
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************[1]* "Finding variable genes..."*
***Finding variable features for layer counts
*******************************|
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************[1]* "Finding variable genes..."*
***Finding variable features for layer counts
*******************************|
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
***********************************************Calculating feature variances of standardized and clipped values*
**|
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
***********[1]* "Scaling data..."*
****************************Centering and scaling data matrix
*********|
  |                                                                              |                                                                      |   0%[1] "Scaling data..."
  |                                                                              |===================================                                   |  50%Centering and scaling data matrix
  |                                                                              |                                                                      |   0%  |                                                                              |======================================================================| 100%
[1] "Scaling data..."
  |                                                                              |===================================                                   |  50%Centering and scaling data matrix
  |                                                                              |======================================================================| 100%
  |                                                                              |                                                                      |   0%[1] "Scaling data..."
  |                                                                              |===================================                                   |  50%Centering and scaling data matrix
  |                                                                              |                                                                      |   0%  |                                                                              |======================================================================| 100%[1]
 "Running PCA..."
[1] "Scaling data..."
  |                                                                              |===================================                                   |  50%Centering and scaling data matrix
  |                                                                              |======================================================================| 100%
  |                                                                              |                                                                      |   0%[1] "Running PCA..."
[1] "Scaling data..."
  |                                                                              |===================================                                   |  50%Centering and scaling data matrix
  |                                                                              |======================================================================| 100%
  |                                                                              |                                                                      |   0%[1] "Running PCA..."
  |                                                                              |===================================                                   |  50%[1] "Running PCA..."
  |                                                                              |======================================================================| 100%
[1] "Calculating PC distance matrix..."
[1] "Running PCA..."
[1] "Running PCA..."
[1] "Defining neighborhoods..."
[1] "Calculating PC distance matrix..."
[1] "Calculating PC distance matrix..."
[1] "Computing pANN across all pK..."
[1] "pK = 0.01..."
[1] "pK = 0.02..."
[1] "Calculating PC distance matrix..."
[1] "pK = 0.03..."
[1] "pK = 0.04..."
[1] "pK = 0.05..."
[1] "pK = 0.06..."
[1] "pK = 0.07..."
[1] "pK = 0.08..."
[1] "pK = 0.09..."
[1] "pK = 0.1..."
[1] "pK = 0.11..."
[1] "pK = 0.12..."
[1] "pK = 0.13..."
[1] "pK = 0.14..."
[1] "Defining neighborhoods..."
[1] "pK = 0.15..."
[1] "pK = 0.16..."
[1] "pK = 0.17..."
[1] "pK = 0.18..."[1]
 "Defining neighborhoods..."
[1] "pK = 0.19..."
[1] "pK = 0.2..."
[1] "Computing pANN across all pK..."
[1][1] "Calculating PC distance matrix..."
 "pK = 0.01..."
[1] "Defining neighborhoods..."
[1] "pK = 0.21..."
[1] "pK = 0.02..."
[1] "pK = 0.22..."
[1] "pK = 0.03..."
[1] "pK = 0.04..."
[1][1] "pK = 0.23..."
 "pK = 0.05..."
[1] "Computing pANN across all pK..."
[1] "pK = 0.01..."
[1] "pK = 0.06..."
[1][1] "pK = 0.02..."
 "pK = 0.24..."
[1] "pK = 0.07..."
[1] "pK = 0.03..."
[1] "pK = 0.25..."
[1][1] "pK = 0.04..."[1] "pK = 0.08..."

 "Calculating PC distance matrix..."
[1] "Computing pANN across all pK..."
[1] "pK = 0.01..."
[1] "pK = 0.26..."
[1] "pK = 0.05..."[1]
 "pK = 0.09..."
[1] "pK = 0.02..."
[1] "pK = 0.27..."
[1] "pK = 0.06..."
[1] "pK = 0.03..."
[1] "pK = 0.1..."
[1] "pK = 0.28..."
[1][1] "pK = 0.07..."
 "pK = 0.04..."
[1] "pK = 0.11..."
[1] "pK = 0.29..."
[1] "pK = 0.08..."[1]
 "pK = 0.05..."
[1] "pK = 0.12..."
[1] "pK = 0.3..."
[1] "pK = 0.06..."
[1] "pK = 0.09..."
[1] "pK = 0.07..."
[1] "pK = 0.1..."
[1] "pK = 0.13..."
[1] "pK = 0.08..."
[1] "pK = 0.11..."
[1] "pK = 0.14..."
[1] "pK = 0.09..."
[1][1] "pK = 0.12..."
 "pK = 0.15..."
[1] "pK = 0.1..."
[1] "pK = 0.16..."
[1] "pK = 0.11..."
[1] "pK = 0.17..."
[1] "pK = 0.13..."
[1] "pK = 0.12..."
[1] "Defining neighborhoods..."
[1] "pK = 0.18..."
[1] "pK = 0.14..."
[1] "pK = 0.19..."
[1] "pK = 0.15..."
[1] "pK = 0.13..."
[1][1] "pK = 0.2..."
 "pK = 0.16..."
[1] "pK = 0.14..."
[1][1] "pK = 0.21..."
 "pK = 0.17..."
[1] "pK = 0.15..."
[1][1] "pK = 0.22..."
 "pK = 0.18..."
[1] "pK = 0.16..."
[1][1] "pK = 0.23..."
 "pK = 0.19..."
[1] "pK = 0.17..."
[1][1] "pK = 0.24..."
 "pK = 0.2..."
[1] "Computing pANN across all pK..."
[1] "pK = 0.01..."
[1] "pK = 0.18..."
[1] "Defining neighborhoods..."
[1] "pK = 0.25..."[1]
 "pK = 0.21..."
[1] "pK = 0.02..."
[1] "pK = 0.19..."
[1][1] "pK = 0.22..."
 "pK = 0.03..."
[1] "pK = 0.26..."
[1] "pK = 0.2..."
[1] "pK = 0.04..."
[1] "pK = 0.23..."
[1] "pK = 0.05..."[1]
 "pK = 0.21..."
[1] "pK = 0.24..."
[1] "pK = 0.27..."
[1] "pK = 0.06..."
[1] "pK = 0.22..."
[1] "pK = 0.25..."
[1] "pK = 0.28..."
[1] "pK = 0.07..."
[1] "pK = 0.23..."
[1][1] "pK = 0.26..."
 "pK = 0.29..."
[1] "pK = 0.08..."
[1] "pK = 0.24..."
[1] "pK = 0.3..."
[1] "pK = 0.09..."[1]
 "Computing pANN across all pK..."
[1] "pK = 0.01..."
[1] "pK = 0.25..."
[1] "pK = 0.02..."[1]
 "pK = 0.27..."
[1] "pK = 0.1..."
[1] "pK = 0.26..."
[1] "pK = 0.03..."
[1] "pK = 0.28..."
[1] "pK = 0.11..."
[1] "pK = 0.04..."
[1] "pK = 0.29..."
[1] "pK = 0.12..."
[1] "pK = 0.05..."
[1] "pK = 0.27..."
[1] "pK = 0.3..."
[1] "pK = 0.06..."
[1] "pK = 0.28..."
[1] "pK = 0.07..."
[1] "pK = 0.13..."
[1] "pK = 0.29..."
[1] "pK = 0.08..."
[1] "pK = 0.14..."
[1] "pK = 0.3..."
[1] "pK = 0.09..."
[1] "pK = 0.15..."
[1] "pK = 0.1..."
[1] "pK = 0.16..."
[1] "pK = 0.17..."
[1] "pK = 0.11..."
[1] "pK = 0.18..."
[1] "pK = 0.12..."
[1] "pK = 0.19..."
[1] "pK = 0.2..."
[1] "pK = 0.13..."
[1] "pK = 0.21..."
[1] "pK = 0.14..."
[1] "pK = 0.22..."
[1] "pK = 0.15..."
[1] "pK = 0.23..."
[1] "pK = 0.16..."
[1] "pK = 0.24..."
[1] "pK = 0.17..."
[1] "pK = 0.25..."
[1] "pK = 0.18..."
[1] "pK = 0.26..."
[1] "pK = 0.19..."
[1] "pK = 0.2..."
[1] "pK = 0.21..."
[1] "pK = 0.27..."
[1] "pK = 0.22..."
[1] "pK = 0.28..."
[1] "pK = 0.23..."
[1] "pK = 0.29..."
[1] "pK = 0.24..."
[1] "pK = 0.3..."
[1] "pK = 0.25..."
[1] "pK = 0.26..."
[1] "pK = 0.27..."
[1] "pK = 0.28..."
[1] "pK = 0.29..."
[1] "pK = 0.3..."
Loading required package: KernSmooth
KernSmooth 2.23 loaded
Copyright M. P. Wand 1997-2009
Loading required package: ROCR
NULL
[1] "Creating 335 artificial doublets..."
[1] "Creating Seurat object..."
[1] "Normalizing Seurat object..."
Normalizing layer: counts
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
[1] "Finding variable genes..."
Finding variable features for layer counts
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
[1] "Scaling data..."
Centering and scaling data matrix
  |                                                                              |                                                                      |   0%  |                                                                              |===================================                                   |  50%  |                                                                              |======================================================================| 100%
[1] "Running PCA..."
[1] "Calculating PC distance matrix..."
[1] "Computing pANN..."
[1] "Classifying doublets.."
Saving processed Seurat object to: ./out//SCPCS000003_doubletfinder.rds 
          used  (Mb) gc trigger  (Mb) max used  (Mb)
Ncells 3348381 178.9    4975401 265.8  4975401 265.8
Vcells 5848432  44.7   26128764 199.4 30211939 230.5
Processing complete for: ../create_seurat_objects/out//SCPCS000003.rds 
Finished processing file: ../create_seurat_objects/out//SCPCS000003.rds
Processing file: ../create_seurat_objects/out//SCPCS000006.rds
Reading Seurat object from: ../create_seurat_objects/out//SCPCS000006.rds 
Running DoubletFinder on: ../create_seurat_objects/out//SCPCS000006.rds 
Normalizing layer: counts
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Finding variable features for layer counts
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Centering and scaling data matrix
  |                                                                              |                                                                      |   0%  |                                                                              |===================================                                   |  50%  |                                                                              |======================================================================| 100%
PC_ 1 
Positive:  ENSG00000170579, ENSG00000242808, ENSG00000110693, ENSG00000175161, ENSG00000183715, ENSG00000185760, ENSG00000102290, ENSG00000176406, ENSG00000278903, ENSG00000206120 
	   ENSG00000165379, ENSG00000261008, ENSG00000231918, ENSG00000224905, ENSG00000144278, ENSG00000079482, ENSG00000237238, ENSG00000186185, ENSG00000144868, ENSG00000171587 
	   ENSG00000188312, ENSG00000066279, ENSG00000118193, ENSG00000136267, ENSG00000114279, ENSG00000184178, ENSG00000227598, ENSG00000136492, ENSG00000204837, ENSG00000131747 
Negative:  ENSG00000278996, ENSG00000188641, ENSG00000122862, ENSG00000011600, ENSG00000051523, ENSG00000196154, ENSG00000204592, ENSG00000087086, ENSG00000081237, ENSG00000111913 
	   ENSG00000162511, ENSG00000204472, ENSG00000118785, ENSG00000075884, ENSG00000142347, ENSG00000204287, ENSG00000136167, ENSG00000107099, ENSG00000082074, ENSG00000130755 
	   ENSG00000185811, ENSG00000077420, ENSG00000163191, ENSG00000026025, ENSG00000141506, ENSG00000158869, ENSG00000155926, ENSG00000163220, ENSG00000167996, ENSG00000147459 
PC_ 2 
Positive:  ENSG00000147488, ENSG00000135525, ENSG00000250722, ENSG00000147459, ENSG00000164741, ENSG00000150656, ENSG00000148826, ENSG00000167755, ENSG00000129422, ENSG00000187147 
	   ENSG00000204655, ENSG00000198597, ENSG00000196104, ENSG00000105695, ENSG00000155886, ENSG00000091513, ENSG00000164124, ENSG00000188641, ENSG00000197971, ENSG00000117266 
	   ENSG00000188580, ENSG00000164176, ENSG00000136960, ENSG00000148180, ENSG00000136541, ENSG00000154493, ENSG00000152910, ENSG00000107317, ENSG00000075651, ENSG00000158859 
Negative:  ENSG00000124766, ENSG00000278996, ENSG00000155368, ENSG00000144485, ENSG00000110092, ENSG00000122585, ENSG00000183036, ENSG00000115758, ENSG00000136205, ENSG00000139352 
	   ENSG00000285854, ENSG00000236552, ENSG00000144230, ENSG00000101311, ENSG00000251357, ENSG00000029993, ENSG00000287151, ENSG00000077152, ENSG00000154975, ENSG00000245648 
	   ENSG00000260372, ENSG00000163041, ENSG00000117724, ENSG00000171587, ENSG00000143545, ENSG00000197061, ENSG00000183715, ENSG00000175063, ENSG00000053438, ENSG00000123975 
PC_ 3 
Positive:  ENSG00000185774, ENSG00000183715, ENSG00000204837, ENSG00000110693, ENSG00000170579, ENSG00000171587, ENSG00000175161, ENSG00000113448, ENSG00000269821, ENSG00000183117 
	   ENSG00000181234, ENSG00000133019, ENSG00000170624, ENSG00000169306, ENSG00000020577, ENSG00000143786, ENSG00000176204, ENSG00000247199, ENSG00000225649, ENSG00000137266 
	   ENSG00000237238, ENSG00000225689, ENSG00000112715, ENSG00000153707, ENSG00000244694, ENSG00000248049, ENSG00000172264, ENSG00000145362, ENSG00000156475, ENSG00000185053 
Negative:  ENSG00000131747, ENSG00000175063, ENSG00000066279, ENSG00000077152, ENSG00000117724, ENSG00000100526, ENSG00000148773, ENSG00000164104, ENSG00000134057, ENSG00000080986 
	   ENSG00000088325, ENSG00000138778, ENSG00000089685, ENSG00000126787, ENSG00000163535, ENSG00000170312, ENSG00000164109, ENSG00000178999, ENSG00000072571, ENSG00000118193 
	   ENSG00000129810, ENSG00000117650, ENSG00000137804, ENSG00000168078, ENSG00000169607, ENSG00000188229, ENSG00000123416, ENSG00000075218, ENSG00000182481, ENSG00000113810 
PC_ 4 
Positive:  ENSG00000148826, ENSG00000150656, ENSG00000135525, ENSG00000167755, ENSG00000204655, ENSG00000147488, ENSG00000155886, ENSG00000105695, ENSG00000091513, ENSG00000250722 
	   ENSG00000198597, ENSG00000136960, ENSG00000196104, ENSG00000164741, ENSG00000064787, ENSG00000123560, ENSG00000188580, ENSG00000187147, ENSG00000136541, ENSG00000129422 
	   ENSG00000164176, ENSG00000117266, ENSG00000158859, ENSG00000115468, ENSG00000106236, ENSG00000286749, ENSG00000166173, ENSG00000170775, ENSG00000071991, ENSG00000126803 
Negative:  ENSG00000196154, ENSG00000081237, ENSG00000051523, ENSG00000142347, ENSG00000111913, ENSG00000075884, ENSG00000204592, ENSG00000107099, ENSG00000136167, ENSG00000155926 
	   ENSG00000160255, ENSG00000082074, ENSG00000141506, ENSG00000122862, ENSG00000248905, ENSG00000163131, ENSG00000112343, ENSG00000077420, ENSG00000145819, ENSG00000165025 
	   ENSG00000185811, ENSG00000180353, ENSG00000135046, ENSG00000163694, ENSG00000145703, ENSG00000067066, ENSG00000204287, ENSG00000120594, ENSG00000152818, ENSG00000106066 
PC_ 5 
Positive:  ENSG00000128564, ENSG00000111640, ENSG00000115461, ENSG00000115457, ENSG00000026025, ENSG00000172020, ENSG00000087250, ENSG00000112715, ENSG00000163638, ENSG00000188042 
	   ENSG00000130558, ENSG00000148926, ENSG00000124785, ENSG00000131981, ENSG00000102265, ENSG00000112773, ENSG00000221869, ENSG00000182732, ENSG00000146674, ENSG00000128245 
	   ENSG00000125148, ENSG00000166681, ENSG00000256235, ENSG00000150991, ENSG00000131016, ENSG00000225649, ENSG00000196083, ENSG00000163618, ENSG00000185633, ENSG00000221866 
Negative:  ENSG00000136205, ENSG00000287151, ENSG00000175161, ENSG00000118515, ENSG00000156475, ENSG00000154975, ENSG00000171587, ENSG00000113805, ENSG00000114279, ENSG00000231918 
	   ENSG00000183715, ENSG00000079482, ENSG00000169306, ENSG00000226994, ENSG00000177103, ENSG00000081237, ENSG00000051523, ENSG00000111913, ENSG00000196154, ENSG00000122584 
	   ENSG00000188641, ENSG00000101542, ENSG00000169554, ENSG00000262223, ENSG00000207955, ENSG00000018236, ENSG00000154080, ENSG00000075884, ENSG00000110693, ENSG00000169891 
Warning: The default method for RunUMAP has changed from calling Python UMAP via reticulate to the R-native UWOT using the cosine metric
To use Python UMAP via reticulate, set umap.method to 'umap-learn' and metric to 'correlation'
This message will be shown once per session
18:13:00 UMAP embedding parameters a = 0.9922 b = 1.112
18:13:00 Read 2454 rows and found 14 numeric columns
18:13:00 Using Annoy for neighbor search, n_neighbors = 30
18:13:00 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
18:13:01 Writing NN index file to temp file /gpfs0/scratch/6189876/RtmpqJwtFb/file1960f86e8aca9e
18:13:01 Searching Annoy index using 1 thread, search_k = 3000
18:13:01 Annoy recall = 100%
18:13:02 Commencing smooth kNN distance calibration using 1 thread with target n_neighbors = 30
18:13:02 Initializing from normalized Laplacian + noise (using RSpectra)
18:13:02 Commencing optimization for 500 epochs, with 95850 positive edges
Using method 'umap'
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
18:13:05 Optimization finished
Computing nearest neighbor graph
Computing SNN
Modularity Optimizer version 1.3.0 by Ludo Waltman and Nees Jan van Eck

Number of nodes: 2454
Number of edges: 78489

Running Louvain algorithm...
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Maximum modularity in 10 random starts: 0.9406
Number of communities: 6
Elapsed time: 0 seconds
Loading required package: fields
Loading required package: spam
Spam version 2.11-0 (2024-10-03) is loaded.
Type 'help( Spam)' or 'demo( spam)' for a short introduction 
and overview of this package.
Help for individual functions is also obtained by adding the
suffix '.spam' to the function name, e.g. 'help( chol.spam)'.

Attaching package: ‘spam’

The following objects are masked from ‘package:base’:

    backsolve, forwardsolve

Loading required package: viridisLite

Try help(fields) to get started.
Loading required package: parallel
[1] "Creating artificial doublets for pN = 5%"
[1] "Creating artificial doublets for pN = 10%"
[1] "Creating artificial doublets for pN = 15%"
[1] "Creating artificial doublets for pN = 20%"
[1] "Creating artificial doublets for pN = 25%"
[1] "Creating artificial doublets for pN = 30%"
[1] "Creating Seurat object..."
[1] "Creating Seurat object..."
[1] "Creating Seurat object..."
[1] "Creating Seurat object..."
[1] "Creating Seurat object..."
[1] "Creating Seurat object..."
[1] "Normalizing Seurat object..."
Normalizing layer: counts
[1] "Normalizing Seurat object..."
Normalizing layer: counts
Performing log-normalization
[1] "Normalizing Seurat object..."
Normalizing layer: counts
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
Performing log-normalization
****Performing log-normalization
********0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
*0%   10   20   30   40   50   60   70   80   90   100%
*[----|----|----|----|----|----|----|----|----|----|
****************************************************************************|
************[1] "Normalizing Seurat object..."
*Normalizing layer: counts
*******************************************|
****|
Performing log-normalization
[1] "Normalizing Seurat object..."
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
Normalizing layer: counts
********Performing log-normalization
************0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
********************************************|
******[1] "Normalizing Seurat object..."
Normalizing layer: counts
******[1] "Finding variable genes..."
*Finding variable features for layer counts
**************Performing log-normalization
*********|
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
[1] "Finding variable genes..."
Finding variable features for layer counts
******Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
*********************************************************|
*[1] "Finding variable genes..."
Finding variable features for layer counts
*************************Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
*********************************************************|
****|
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
[1] "Finding variable genes..."
Finding variable features for layer counts
Calculating feature variances of standardized and clipped values
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
*********************************0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**********************************|
*********************************|
[1] "Finding variable genes..."
Finding variable features for layer counts
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
*******[1] "Scaling data..."
************************************Calculating feature variances of standardized and clipped values*
******|
Centering and scaling data matrix
  |                                                                              |                                                                      |   0%  |                                                                              |===================================                                   |  50%  |                                                                              |======================================================================| 100%
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
******************Calculating gene variances*
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
*************************[1] "Running PCA..."
***[1]* "Scaling data..."*
****************************|
***********************|
Centering and scaling data matrix
  |                                                                              |                                                                      |   0%[1] "Finding variable genes..."
Finding variable features for layer counts
  |                                                                              |===================================                                   |  50%  |                                                                              |======================================================================| 100%
[1] "Scaling data..."
[1] "Running PCA..."
Centering and scaling data matrix
  |                                                                              |                                                                      |   0%  |                                                                              |===================================                                   |  50%Calculating feature variances of standardized and clipped values
  |                                                                              |======================================================================| 100%
[1] "Calculating PC distance matrix..."
[1] "Running PCA..."
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
*********Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
*********************************************************************************|
**********|
[1] "Calculating PC distance matrix..."
[1] "Scaling data..."
[1] "Defining neighborhoods..."
Centering and scaling data matrix
  |                                                                              |                                                                      |   0%Calculating feature variances of standardized and clipped values
  |                                                                              |===================================                                   |  50%  |                                                                              |======================================================================| 100%
[1] "Calculating PC distance matrix..."
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
****[1] "Running PCA..."
**[1]* "Defining neighborhoods..."
*******************************************|
[1] "Computing pANN across all pK..."
[1] "pK = 0.005..."
[1] "pK = 0.01..."
[1] "pK = 0.02..."
[1] "Scaling data..."
[1] "pK = 0.03..."
[1] "Defining neighborhoods..."
[1] "pK = 0.04..."
[1] "pK = 0.05..."
Centering and scaling data matrix
Calculating feature variances of standardized and clipped values
  |                                                                              |                                                                      |   0%[1] "pK = 0.06..."
[1] "pK = 0.07..."
  |                                                                              |===================================                                   |  50%[1] "Computing pANN across all pK..."
[1] "pK = 0.005..."
[1] "pK = 0.08..."
[1] "pK = 0.01..."
  |                                                                              |======================================================================| 100%
[1] "Calculating PC distance matrix..."
[1] "pK = 0.09..."
[1] "pK = 0.02..."
[1] "pK = 0.03..."
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
*[1] "pK = 0.1..."
***********[1] "Running PCA..."
*******[1] "pK = 0.11..."
****[1]* "pK = 0.04..."
*************[1]* "pK = 0.12..."
***[1] "pK = 0.05..."
*********|
[1] "pK = 0.13..."
[1] "pK = 0.06..."
[1] "pK = 0.07..."
[1] "pK = 0.14..."
[1] "pK = 0.08..."
[1] "Computing pANN across all pK..."
[1] "pK = 0.005..."
[1] "pK = 0.15..."
[1] "pK = 0.09..."
[1] "pK = 0.01..."
[1] "pK = 0.16..."
[1] "pK = 0.02..."
[1] "pK = 0.1..."
[1] "pK = 0.17..."
[1] "pK = 0.03..."[1]
 "Scaling data..."
[1] "pK = 0.11..."
[1] "pK = 0.18..."
[1] "Defining neighborhoods..."
[1] "pK = 0.12..."
[1] "pK = 0.04..."
[1] "pK = 0.19..."
[1] "pK = 0.13..."
[1] "pK = 0.05..."
[1] "pK = 0.2..."
Centering and scaling data matrix
  |                                                                              |                                                                      |   0%[1] "pK = 0.14..."
[1] "pK = 0.06..."
[1] "pK = 0.07..."
[1] "pK = 0.21..."
[1]  |                                                                             "pK = 0.15..."  |===================================                                   |  50%
[1] "pK = 0.08..."
[1] "pK = 0.22..."
[1] "pK = 0.16..."
[1] "pK = 0.09..."
  |                                                                              |======================================================================| 100%
[1] "pK = 0.23..."
[1] "pK = 0.17..."
[1] "Calculating PC distance matrix..."
[1] "pK = 0.1..."
[1] "pK = 0.24..."
[1] "pK = 0.18..."
[1] "pK = 0.11..."
[1] "Running PCA..."
[1] "pK = 0.25..."
[1] "pK = 0.19..."
[1] "pK = 0.12..."
[1] "pK = 0.2..."
[1] "pK = 0.26..."
[1] "pK = 0.13..."
[1] "pK = 0.14..."
[1] "pK = 0.21..."
[1] "pK = 0.27..."
[1] "pK = 0.22..."
[1] "pK = 0.15..."
[1] "pK = 0.28..."
[1] "pK = 0.23..."
[1][1] "pK = 0.16..."
 "Computing pANN across all pK..."
[1] "pK = 0.005..."
[1] "pK = 0.29..."
[1] "pK = 0.01..."
[1] "pK = 0.24..."
[1] "pK = 0.17..."
[1] "pK = 0.3..."
[1] "pK = 0.02..."
[1] "pK = 0.18..."
[1] "pK = 0.25..."
[1] "pK = 0.03..."
[1] "pK = 0.19..."
[1] "pK = 0.26..."
[1] "Defining neighborhoods..."
[1] "pK = 0.04..."
[1] "pK = 0.2..."
[1] "pK = 0.05..."
[1] "pK = 0.27..."
[1] "pK = 0.21..."
[1] "pK = 0.06..."
[1] "pK = 0.28..."
[1] "pK = 0.07..."
[1] "pK = 0.22..."
[1] "pK = 0.29..."
[1] "pK = 0.08..."
[1] "pK = 0.23..."
[1] "pK = 0.09..."
[1] "pK = 0.3..."
[1] "Calculating PC distance matrix..."
[1] "pK = 0.24..."
[1] "pK = 0.1..."
[1] "pK = 0.25..."
[1] "pK = 0.11..."
[1] "pK = 0.26..."
[1] "pK = 0.12..."
[1] "pK = 0.13..."
[1] "pK = 0.27..."
[1] "pK = 0.14..."
[1] "pK = 0.28..."
[1] "pK = 0.15..."
[1] "pK = 0.29..."
[1] "pK = 0.16..."
[1] "Computing pANN across all pK..."
[1] "pK = 0.005..."
[1] "pK = 0.3..."
[1] "pK = 0.17..."
[1] "pK = 0.01..."
[1] "pK = 0.18..."
[1] "pK = 0.02..."
[1] "pK = 0.19..."
[1] "pK = 0.03..."
[1] "Defining neighborhoods..."
[1] "pK = 0.2..."
[1] "pK = 0.04..."
[1] "pK = 0.05..."
[1] "pK = 0.21..."
[1] "pK = 0.06..."
[1] "pK = 0.07..."
[1] "pK = 0.22..."
[1] "pK = 0.08..."
[1] "pK = 0.23..."
[1] "pK = 0.09..."
[1] "pK = 0.24..."
[1] "pK = 0.1..."
[1] "pK = 0.25..."
[1] "pK = 0.11..."
[1][1] "pK = 0.26..."
 "pK = 0.12..."
[1] "pK = 0.13..."
[1] "pK = 0.27..."
[1] "pK = 0.14..."
[1] "pK = 0.28..."
[1] "pK = 0.15..."
[1] "pK = 0.29..."
[1] "pK = 0.16..."
[1] "Computing pANN across all pK..."
[1] "pK = 0.005..."
[1] "pK = 0.3..."
[1] "pK = 0.01..."
[1] "pK = 0.17..."
[1] "pK = 0.02..."
[1] "pK = 0.18..."
[1] "pK = 0.03..."
[1] "pK = 0.19..."
[1] "pK = 0.04..."
[1] "pK = 0.2..."
[1] "pK = 0.05..."
[1] "pK = 0.06..."
[1] "pK = 0.21..."
[1] "pK = 0.07..."
[1] "pK = 0.22..."
[1] "pK = 0.08..."
[1] "pK = 0.23..."
[1] "pK = 0.09..."
[1] "pK = 0.24..."
[1] "pK = 0.1..."
[1] "pK = 0.25..."
[1] "pK = 0.11..."
[1] "pK = 0.26..."
[1] "pK = 0.12..."
[1] "pK = 0.13..."
[1] "pK = 0.27..."
[1] "pK = 0.14..."
[1] "pK = 0.28..."
[1] "pK = 0.15..."
[1] "pK = 0.29..."
[1] "pK = 0.16..."
[1] "pK = 0.3..."
[1] "pK = 0.17..."
[1] "pK = 0.18..."
[1] "pK = 0.19..."
[1] "pK = 0.2..."
[1] "pK = 0.21..."
[1] "pK = 0.22..."
[1] "pK = 0.23..."
[1] "pK = 0.24..."
[1] "pK = 0.25..."
[1] "pK = 0.26..."
[1] "pK = 0.27..."
[1] "pK = 0.28..."
[1] "pK = 0.29..."
[1] "pK = 0.3..."
Loading required package: KernSmooth
KernSmooth 2.23 loaded
Copyright M. P. Wand 1997-2009
Loading required package: ROCR
NULL
[1] "Creating 818 artificial doublets..."
[1] "Creating Seurat object..."
[1] "Normalizing Seurat object..."
Normalizing layer: counts
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
[1] "Finding variable genes..."
Finding variable features for layer counts
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
[1] "Scaling data..."
Centering and scaling data matrix
  |                                                                              |                                                                      |   0%  |                                                                              |===================================                                   |  50%  |                                                                              |======================================================================| 100%
[1] "Running PCA..."
[1] "Calculating PC distance matrix..."
[1] "Computing pANN..."
[1] "Classifying doublets.."
Saving processed Seurat object to: ./out//SCPCS000006_doubletfinder.rds 
          used  (Mb) gc trigger   (Mb)  max used   (Mb)
Ncells 3348540 178.9    4975401  265.8   4975401  265.8
Vcells 5848612  44.7  194768971 1486.0 243195488 1855.5
Processing complete for: ../create_seurat_objects/out//SCPCS000006.rds 
Finished processing file: ../create_seurat_objects/out//SCPCS000006.rds
Processing file: ../create_seurat_objects/out//SCPCS000007.rds
Reading Seurat object from: ../create_seurat_objects/out//SCPCS000007.rds 
Running DoubletFinder on: ../create_seurat_objects/out//SCPCS000007.rds 
Normalizing layer: counts
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Finding variable features for layer counts
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Centering and scaling data matrix
  |                                                                              |                                                                      |   0%  |                                                                              |===================================                                   |  50%  |                                                                              |======================================================================| 100%
PC_ 1 
Positive:  ENSG00000185565, ENSG00000070214, ENSG00000184226, ENSG00000175161, ENSG00000187391, ENSG00000156475, ENSG00000150867, ENSG00000154654, ENSG00000179104, ENSG00000155886 
	   ENSG00000150672, ENSG00000196104, ENSG00000115896, ENSG00000091513, ENSG00000187147, ENSG00000135905, ENSG00000164741, ENSG00000188580, ENSG00000164176, ENSG00000145416 
	   ENSG00000176463, ENSG00000114541, ENSG00000135525, ENSG00000147488, ENSG00000147459, ENSG00000285218, ENSG00000078269, ENSG00000124406, ENSG00000154493, ENSG00000144283 
Negative:  ENSG00000231500, ENSG00000167526, ENSG00000142676, ENSG00000198034, ENSG00000162244, ENSG00000164587, ENSG00000156482, ENSG00000186468, ENSG00000147403, ENSG00000197958 
	   ENSG00000161016, ENSG00000251357, ENSG00000142937, ENSG00000026025, ENSG00000148303, ENSG00000111640, ENSG00000220842, ENSG00000085276, ENSG00000124614, ENSG00000115457 
	   ENSG00000241343, ENSG00000123349, ENSG00000100097, ENSG00000087250, ENSG00000167815, ENSG00000125462, ENSG00000115461, ENSG00000226950, ENSG00000240972, ENSG00000258344 
PC_ 2 
Positive:  ENSG00000164032, ENSG00000135446, ENSG00000124593, ENSG00000189159, ENSG00000175768, ENSG00000183336, ENSG00000236449, ENSG00000239672, ENSG00000163463, ENSG00000143977 
	   ENSG00000137267, ENSG00000196230, ENSG00000164687, ENSG00000285589, ENSG00000198830, ENSG00000099901, ENSG00000155368, ENSG00000189403, ENSG00000128951, ENSG00000259964 
	   ENSG00000173436, ENSG00000101084, ENSG00000143543, ENSG00000255526, ENSG00000111716, ENSG00000188612, ENSG00000155366, ENSG00000256100, ENSG00000117632, ENSG00000111775 
Negative:  ENSG00000115896, ENSG00000147459, ENSG00000196104, ENSG00000147488, ENSG00000176463, ENSG00000155886, ENSG00000188580, ENSG00000135525, ENSG00000164741, ENSG00000179104 
	   ENSG00000078269, ENSG00000164176, ENSG00000135643, ENSG00000105695, ENSG00000124406, ENSG00000154493, ENSG00000091513, ENSG00000150656, ENSG00000152910, ENSG00000249853 
	   ENSG00000114757, ENSG00000184005, ENSG00000164124, ENSG00000188641, ENSG00000075223, ENSG00000182168, ENSG00000111110, ENSG00000154027, ENSG00000167755, ENSG00000143772 
PC_ 3 
Positive:  ENSG00000167526, ENSG00000231500, ENSG00000164587, ENSG00000147403, ENSG00000162244, ENSG00000142937, ENSG00000186468, ENSG00000198034, ENSG00000156482, ENSG00000161016 
	   ENSG00000142676, ENSG00000240972, ENSG00000148303, ENSG00000197958, ENSG00000124614, ENSG00000111640, ENSG00000197956, ENSG00000087250, ENSG00000187514, ENSG00000026025 
	   ENSG00000125148, ENSG00000155368, ENSG00000288663, ENSG00000100097, ENSG00000149925, ENSG00000170296, ENSG00000088986, ENSG00000109846, ENSG00000099977, ENSG00000164687 
Negative:  ENSG00000183117, ENSG00000174469, ENSG00000152208, ENSG00000175161, ENSG00000206579, ENSG00000179915, ENSG00000185565, ENSG00000114279, ENSG00000188312, ENSG00000018236 
	   ENSG00000261008, ENSG00000157890, ENSG00000267374, ENSG00000102466, ENSG00000164796, ENSG00000206120, ENSG00000155052, ENSG00000148737, ENSG00000269821, ENSG00000051341 
	   ENSG00000259692, ENSG00000154654, ENSG00000171132, ENSG00000183850, ENSG00000148123, ENSG00000139734, ENSG00000185774, ENSG00000231918, ENSG00000170624, ENSG00000198732 
PC_ 4 
Positive:  ENSG00000066279, ENSG00000148773, ENSG00000131747, ENSG00000117724, ENSG00000198901, ENSG00000118193, ENSG00000137812, ENSG00000137804, ENSG00000075218, ENSG00000080986 
	   ENSG00000090889, ENSG00000089685, ENSG00000138778, ENSG00000139734, ENSG00000171848, ENSG00000163808, ENSG00000114346, ENSG00000138180, ENSG00000088325, ENSG00000072571 
	   ENSG00000168078, ENSG00000156970, ENSG00000143228, ENSG00000142945, ENSG00000165304, ENSG00000134057, ENSG00000175063, ENSG00000011426, ENSG00000237649, ENSG00000051341 
Negative:  ENSG00000241684, ENSG00000196090, ENSG00000091129, ENSG00000134531, ENSG00000143669, ENSG00000018408, ENSG00000197321, ENSG00000245532, ENSG00000078114, ENSG00000275830 
	   ENSG00000171094, ENSG00000258458, ENSG00000069667, ENSG00000164830, ENSG00000185274, ENSG00000108846, ENSG00000175899, ENSG00000188859, ENSG00000164199, ENSG00000147883 
	   ENSG00000145819, ENSG00000133110, ENSG00000154127, ENSG00000160145, ENSG00000115461, ENSG00000111859, ENSG00000182732, ENSG00000156113, ENSG00000243927, ENSG00000165995 
PC_ 5 
Positive:  ENSG00000136267, ENSG00000171587, ENSG00000169129, ENSG00000114279, ENSG00000170153, ENSG00000146090, ENSG00000082684, ENSG00000144230, ENSG00000164619, ENSG00000262223 
	   ENSG00000187764, ENSG00000165443, ENSG00000116117, ENSG00000198732, ENSG00000285218, ENSG00000101311, ENSG00000068903, ENSG00000171533, ENSG00000087495, ENSG00000134376 
	   ENSG00000136205, ENSG00000187950, ENSG00000177103, ENSG00000175161, ENSG00000157890, ENSG00000038427, ENSG00000181938, ENSG00000156475, ENSG00000144642, ENSG00000114948 
Negative:  ENSG00000241684, ENSG00000245532, ENSG00000154127, ENSG00000196090, ENSG00000169855, ENSG00000134531, ENSG00000182732, ENSG00000018408, ENSG00000134871, ENSG00000078114 
	   ENSG00000133110, ENSG00000145819, ENSG00000152527, ENSG00000197321, ENSG00000147883, ENSG00000135540, ENSG00000131016, ENSG00000185950, ENSG00000185274, ENSG00000118193 
	   ENSG00000187498, ENSG00000091129, ENSG00000108846, ENSG00000155897, ENSG00000171951, ENSG00000116132, ENSG00000111859, ENSG00000066279, ENSG00000196639, ENSG00000143669 
Warning: The default method for RunUMAP has changed from calling Python UMAP via reticulate to the R-native UWOT using the cosine metric
To use Python UMAP via reticulate, set umap.method to 'umap-learn' and metric to 'correlation'
This message will be shown once per session
18:13:45 UMAP embedding parameters a = 0.9922 b = 1.112
18:13:45 Read 1962 rows and found 14 numeric columns
18:13:45 Using Annoy for neighbor search, n_neighbors = 30
18:13:45 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
18:13:45 Writing NN index file to temp file /gpfs0/scratch/6189876/RtmpUGSflj/file19625f15fd4755
18:13:45 Searching Annoy index using 1 thread, search_k = 3000
18:13:46 Annoy recall = 100%
18:13:46 Commencing smooth kNN distance calibration using 1 thread with target n_neighbors = 30
18:13:46 Initializing from normalized Laplacian + noise (using RSpectra)
18:13:46 Commencing optimization for 500 epochs, with 75646 positive edges
Using method 'umap'
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
18:13:48 Optimization finished
Computing nearest neighbor graph
Computing SNN
Modularity Optimizer version 1.3.0 by Ludo Waltman and Nees Jan van Eck

Number of nodes: 1962
Number of edges: 61736

Running Louvain algorithm...
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Maximum modularity in 10 random starts: 0.9556
Number of communities: 4
Elapsed time: 0 seconds
Loading required package: fields
Loading required package: spam
Spam version 2.11-0 (2024-10-03) is loaded.
Type 'help( Spam)' or 'demo( spam)' for a short introduction 
and overview of this package.
Help for individual functions is also obtained by adding the
suffix '.spam' to the function name, e.g. 'help( chol.spam)'.

Attaching package: ‘spam’

The following objects are masked from ‘package:base’:

    backsolve, forwardsolve

Loading required package: viridisLite

Try help(fields) to get started.
Loading required package: parallel
[1] "Creating artificial doublets for pN = 5%"
[1] "Creating artificial doublets for pN = 10%"
[1] "Creating artificial doublets for pN = 15%"
[1] "Creating artificial doublets for pN = 20%"
[1] "Creating artificial doublets for pN = 25%"
[1] "Creating artificial doublets for pN = 30%"
[1] "Creating Seurat object..."
[1] "Creating Seurat object..."
[1] "Creating Seurat object..."
[1] "Creating Seurat object..."
[1] "Creating Seurat object..."
[1] "Creating Seurat object..."
[1] "Normalizing Seurat object..."
Normalizing layer: counts
Performing log-normalization
[1] "Normalizing Seurat object..."
Normalizing layer: counts
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
*Performing log-normalization
*********[1] "Normalizing Seurat object..."
Normalizing layer: counts
***0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
*******************Performing log-normalization
**********[1] "Normalizing Seurat object..."
Normalizing layer: counts
************************0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**********|
***Performing log-normalization
*****************************************0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
*|
***************************************************|
***********************[1] "Normalizing Seurat object..."
Normalizing layer: counts
*****|
Performing log-normalization
[1] "Normalizing Seurat object..."
Normalizing layer: counts
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
Performing log-normalization
******************0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************[1]* "Finding variable genes..."*
*Finding variable features for layer counts
******************************************|
*********[1] "Finding variable genes..."
Finding variable features for layer counts
*******Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**********************************************|
***********|
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
***[1]* "Finding variable genes..."
*Finding variable features for layer counts
*********************************************|
[1] "Finding variable genes..."
Finding variable features for layer counts
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
[1] "Finding variable genes..."
Finding variable features for layer counts
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
*********************************************Calculating gene variances
*0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
******|
****Calculating feature variances of standardized and clipped values
********************************************|
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
[1] "Scaling data..."
[1] "Finding variable genes..."
Finding variable features for layer counts
Calculating feature variances of standardized and clipped values
Centering and scaling data matrix
  |                                                                              |                                                                      |   0%  |                                                                              |===================================                                   |  50%0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
****  |                                                                            *  |======================================================================| 100%
********************[1]* "Scaling data..."
************************|
[1] "Running PCA..."
Centering and scaling data matrix
  |                                                                              |                                                                      |   0%  |                                                                              |===================================                                   |  50%  |                                                                              |======================================================================| 100%
Calculating feature variances of standardized and clipped values
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
*******************************[1]* "Running PCA..."
***********[1]* "Scaling data..."
******|
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
******************************Centering and scaling data matrix
****  |                                                                              |                                                                      |   0%****************|
  |                                                                              |===================================                                   |  50%  |                                                                              |======================================================================| 100%
[1] "Running PCA..."
[1] "Calculating PC distance matrix..."
[1] "Scaling data..."
Calculating feature variances of standardized and clipped values
Centering and scaling data matrix
  |                                                                              |                                                                      |   0%  |                                                                              |===================================                                   |  50%[1] "Calculating PC distance matrix..."
  |                                                                              |======================================================================| 100%
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
[1] "Running PCA..."
[1] "Defining neighborhoods..."
[1] "Calculating PC distance matrix..."
[1] "Scaling data..."
[1] "Defining neighborhoods..."
Centering and scaling data matrix
  |                                                                              |                                                                      |   0%Calculating feature variances of standardized and clipped values
  |                                                                              |===================================                                   |  50%[1] "Computing pANN across all pK..."
[1] "pK = 0.005..."
  |                                                                              |======================================================================| 100%
[1] "pK = 0.01..."
[1] "pK = 0.02..."
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
*******[1]* "pK = 0.03..."
****[1] "Running PCA..."
****************[1]* "pK = 0.04..."
****************[1] "Calculating PC distance matrix..."
*****|
[1] "pK = 0.05..."
[1] "Defining neighborhoods..."
[1] "Computing pANN across all pK..."
[1] "pK = 0.005..."
[1] "pK = 0.06..."
[1] "pK = 0.01..."
[1] "pK = 0.07..."
[1] "pK = 0.02..."
[1] "pK = 0.08..."
[1] "pK = 0.03..."
[1] "pK = 0.09..."
[1] "pK = 0.04..."
[1] "pK = 0.1..."
[1] "pK = 0.05..."
[1] "pK = 0.11..."
[1] "Scaling data..."
[1] "pK = 0.12..."
[1] "pK = 0.06..."
[1] "pK = 0.07..."
[1] "pK = 0.13..."
Centering and scaling data matrix
  |                                                                              |                                                                      |   0%[1] "pK = 0.08..."
[1] "pK = 0.14..."
[1] "pK = 0.09..."
  |                                                                              |===================================                                   |  50%[1] "pK = 0.15..."
[1] "Computing pANN across all pK..."
[1] "pK = 0.005..."[1]
 "pK = 0.1..."
[1] "Defining neighborhoods..."
  |                                                                              |======================================================================| 100%
[1][1] "pK = 0.16..."
 "pK = 0.01..."
[1] "pK = 0.11..."
[1] "pK = 0.02..."
[1] "pK = 0.17..."
[1] "pK = 0.12..."
[1] "pK = 0.03..."
[1] "pK = 0.18..."
[1][1] "pK = 0.04..."
 "pK = 0.13..."
[1] "Running PCA..."
[1] "pK = 0.19..."
[1] "Calculating PC distance matrix..."
[1] "pK = 0.14..."
[1] "pK = 0.05..."
[1] "pK = 0.2..."
[1] "pK = 0.15..."
[1] "pK = 0.06..."
[1] "pK = 0.16..."[1]
 "pK = 0.21..."
[1] "pK = 0.07..."
[1] "pK = 0.17..."
[1] "pK = 0.22..."
[1] "pK = 0.08..."
[1] "pK = 0.18..."[1]
[1] "pK = 0.09..."
 "pK = 0.23..."
[1] "pK = 0.1..."
[1] "pK = 0.19..."
[1] "pK = 0.24..."
[1] "pK = 0.11..."
[1] "Computing pANN across all pK..."
[1][1] "pK = 0.005..." "pK = 0.25..."

[1] "pK = 0.2..."
[1] "pK = 0.12..."
[1] "pK = 0.01..."
[1] "pK = 0.26..."
[1] "pK = 0.21..."
[1] "pK = 0.02..."
[1] "pK = 0.13..."
[1] "pK = 0.03..."
[1] "pK = 0.22..."
[1] "pK = 0.27..."
[1] "pK = 0.14..."
[1] "pK = 0.04..."
[1] "pK = 0.23..."
[1] "pK = 0.28..."
[1] "pK = 0.15..."
[1] "pK = 0.05..."
[1] "pK = 0.24..."
[1] "pK = 0.29..."
[1] "Defining neighborhoods..."
[1] "pK = 0.16..."
[1] "pK = 0.06..."
[1] "pK = 0.25..."
[1] "pK = 0.3..."
[1] "pK = 0.17..."
[1] "pK = 0.07..."
[1] "pK = 0.18..."
[1] "pK = 0.26..."
[1] "pK = 0.08..."
[1] "pK = 0.09..."
[1] "pK = 0.19..."
[1] "Calculating PC distance matrix..."
[1] "pK = 0.27..."
[1] "pK = 0.1..."
[1] "pK = 0.28..."
[1] "pK = 0.2..."
[1] "pK = 0.11..."
[1] "pK = 0.21..."
[1] "pK = 0.29..."
[1] "pK = 0.12..."
[1] "pK = 0.3..."
[1] "pK = 0.22..."
[1] "pK = 0.13..."
[1] "pK = 0.23..."
[1] "pK = 0.14..."
[1] "pK = 0.24..."
[1] "pK = 0.15..."
[1] "Computing pANN across all pK..."
[1] "pK = 0.005..."
[1] "pK = 0.25..."
[1] "pK = 0.16..."
[1] "pK = 0.01..."
[1] "pK = 0.17..."
[1] "pK = 0.02..."
[1] "pK = 0.26..."
[1] "pK = 0.03..."
[1] "pK = 0.18..."
[1] "pK = 0.04..."
[1] "pK = 0.27..."
[1] "pK = 0.19..."
[1] "pK = 0.05..."
[1] "pK = 0.28..."
[1] "pK = 0.2..."
[1] "Defining neighborhoods..."
[1] "pK = 0.06..."
[1] "pK = 0.29..."
[1] "pK = 0.21..."
[1] "pK = 0.07..."
[1] "pK = 0.3..."
[1] "pK = 0.22..."
[1] "pK = 0.08..."
[1] "pK = 0.23..."
[1] "pK = 0.09..."
[1][1] "pK = 0.1..."
 "pK = 0.24..."
[1] "pK = 0.11..."
[1] "pK = 0.25..."
[1] "pK = 0.12..."
[1] "pK = 0.26..."
[1] "pK = 0.13..."
[1] "pK = 0.27..."
[1] "pK = 0.14..."
[1] "pK = 0.15..."
[1] "pK = 0.28..."
[1] "pK = 0.16..."
[1] "pK = 0.29..."
[1] "Computing pANN across all pK..."
[1] "pK = 0.005..."
[1] "pK = 0.17..."
[1] "pK = 0.01..."
[1] "pK = 0.3..."
[1][1] "pK = 0.18..."
 "pK = 0.02..."
[1] "pK = 0.03..."
[1] "pK = 0.19..."
[1] "pK = 0.04..."
[1] "pK = 0.2..."
[1] "pK = 0.05..."
[1] "pK = 0.21..."
[1] "pK = 0.06..."
[1] "pK = 0.22..."
[1] "pK = 0.07..."
[1] "pK = 0.23..."
[1] "pK = 0.08..."
[1][1] "pK = 0.09..."
 "pK = 0.24..."
[1] "pK = 0.1..."
[1] "pK = 0.25..."
[1] "pK = 0.11..."
[1] "pK = 0.26..."
[1] "pK = 0.12..."
[1] "pK = 0.13..."
[1] "pK = 0.27..."
[1] "pK = 0.14..."
[1] "pK = 0.28..."
[1] "pK = 0.15..."
[1] "pK = 0.29..."
[1] "pK = 0.16..."
[1] "pK = 0.3..."
[1] "pK = 0.17..."
[1] "pK = 0.18..."
[1] "pK = 0.19..."
[1] "pK = 0.2..."
[1] "pK = 0.21..."
[1] "pK = 0.22..."
[1] "pK = 0.23..."
[1] "pK = 0.24..."
[1] "pK = 0.25..."
[1] "pK = 0.26..."
[1] "pK = 0.27..."
[1] "pK = 0.28..."
[1] "pK = 0.29..."
[1] "pK = 0.3..."
Loading required package: KernSmooth
KernSmooth 2.23 loaded
Copyright M. P. Wand 1997-2009
Loading required package: ROCR
NULL
[1] "Creating 654 artificial doublets..."
[1] "Creating Seurat object..."
[1] "Normalizing Seurat object..."
Normalizing layer: counts
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
[1] "Finding variable genes..."
Finding variable features for layer counts
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
[1] "Scaling data..."
Centering and scaling data matrix
  |                                                                              |                                                                      |   0%  |                                                                              |===================================                                   |  50%  |                                                                              |======================================================================| 100%
[1] "Running PCA..."
[1] "Calculating PC distance matrix..."
[1] "Computing pANN..."
[1] "Classifying doublets.."
Saving processed Seurat object to: ./out//SCPCS000007_doubletfinder.rds 
          used  (Mb) gc trigger  (Mb)  max used   (Mb)
Ncells 3348585 178.9    4975401 265.8   4975401  265.8
Vcells 5848707  44.7  111676292 852.1 139595338 1065.1
Processing complete for: ../create_seurat_objects/out//SCPCS000007.rds 
Finished processing file: ../create_seurat_objects/out//SCPCS000007.rds
Processing file: ../create_seurat_objects/out//SCPCS000008.rds
Reading Seurat object from: ../create_seurat_objects/out//SCPCS000008.rds 
Running DoubletFinder on: ../create_seurat_objects/out//SCPCS000008.rds 
Normalizing layer: counts
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Finding variable features for layer counts
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Centering and scaling data matrix
  |                                                                              |                                                                      |   0%  |                                                                              |===================================                                   |  50%  |                                                                              |======================================================================| 100%
PC_ 1 
Positive:  ENSG00000184178, ENSG00000081237, ENSG00000198879, ENSG00000172673, ENSG00000107099, ENSG00000075884, ENSG00000027075, ENSG00000141293, ENSG00000109452, ENSG00000155307 
	   ENSG00000164674, ENSG00000082074, ENSG00000161405, ENSG00000166501, ENSG00000136250, ENSG00000077420, ENSG00000080493, ENSG00000153283, ENSG00000271503, ENSG00000127152 
	   ENSG00000205045, ENSG00000282890, ENSG00000138378, ENSG00000111913, ENSG00000198821, ENSG00000283117, ENSG00000113263, ENSG00000168421, ENSG00000143119, ENSG00000110848 
Negative:  ENSG00000124614, ENSG00000145425, ENSG00000011052, ENSG00000243678, ENSG00000288663, ENSG00000240972, ENSG00000229117, ENSG00000161970, ENSG00000162244, ENSG00000108298 
	   ENSG00000174748, ENSG00000155368, ENSG00000100316, ENSG00000089009, ENSG00000189043, ENSG00000147403, ENSG00000231500, ENSG00000112306, ENSG00000122026, ENSG00000143947 
	   ENSG00000236449, ENSG00000148303, ENSG00000135404, ENSG00000167996, ENSG00000198034, ENSG00000144713, ENSG00000137818, ENSG00000063177, ENSG00000164587, ENSG00000186468 
PC_ 2 
Positive:  ENSG00000066279, ENSG00000178878, ENSG00000148773, ENSG00000187951, ENSG00000117724, ENSG00000131747, ENSG00000139734, ENSG00000138778, ENSG00000137804, ENSG00000137812 
	   ENSG00000088325, ENSG00000171848, ENSG00000186185, ENSG00000198901, ENSG00000118193, ENSG00000163535, ENSG00000075218, ENSG00000163808, ENSG00000158402, ENSG00000237649 
	   ENSG00000138182, ENSG00000113810, ENSG00000143228, ENSG00000184661, ENSG00000138160, ENSG00000133119, ENSG00000114346, ENSG00000126787, ENSG00000165304, ENSG00000168078 
Negative:  ENSG00000147403, ENSG00000167526, ENSG00000112306, ENSG00000111640, ENSG00000164587, ENSG00000109475, ENSG00000231500, ENSG00000144713, ENSG00000087086, ENSG00000138326 
	   ENSG00000186468, ENSG00000137818, ENSG00000143947, ENSG00000162244, ENSG00000198034, ENSG00000229117, ENSG00000174748, ENSG00000196531, ENSG00000156508, ENSG00000063177 
	   ENSG00000105372, ENSG00000156482, ENSG00000161970, ENSG00000108107, ENSG00000108298, ENSG00000148303, ENSG00000182899, ENSG00000122406, ENSG00000167996, ENSG00000110700 
PC_ 3 
Positive:  ENSG00000184178, ENSG00000172915, ENSG00000204837, ENSG00000275778, ENSG00000116147, ENSG00000253819, ENSG00000155052, ENSG00000154975, ENSG00000279168, ENSG00000153976 
	   ENSG00000127124, ENSG00000204956, ENSG00000275163, ENSG00000197584, ENSG00000288546, ENSG00000228696, ENSG00000204442, ENSG00000170485, ENSG00000185736, ENSG00000285547 
	   ENSG00000254303, ENSG00000245532, ENSG00000157890, ENSG00000278254, ENSG00000186094, ENSG00000185774, ENSG00000266846, ENSG00000258081, ENSG00000284461, ENSG00000182667 
Negative:  ENSG00000175063, ENSG00000117724, ENSG00000131747, ENSG00000134057, ENSG00000137804, ENSG00000164611, ENSG00000089685, ENSG00000148773, ENSG00000129195, ENSG00000100526 
	   ENSG00000226950, ENSG00000066279, ENSG00000138778, ENSG00000164104, ENSG00000088325, ENSG00000137818, ENSG00000198901, ENSG00000126787, ENSG00000123975, ENSG00000163535 
	   ENSG00000168078, ENSG00000111640, ENSG00000087586, ENSG00000077152, ENSG00000164109, ENSG00000157456, ENSG00000188486, ENSG00000182481, ENSG00000075218, ENSG00000166851 
PC_ 4 
Positive:  ENSG00000116147, ENSG00000160307, ENSG00000131094, ENSG00000184178, ENSG00000103260, ENSG00000134853, ENSG00000105894, ENSG00000154975, ENSG00000102804, ENSG00000155052 
	   ENSG00000155368, ENSG00000261857, ENSG00000102316, ENSG00000159335, ENSG00000133169, ENSG00000197584, ENSG00000275163, ENSG00000172915, ENSG00000167552, ENSG00000166681 
	   ENSG00000173457, ENSG00000253819, ENSG00000278254, ENSG00000188643, ENSG00000250302, ENSG00000102109, ENSG00000257727, ENSG00000135919, ENSG00000187608, ENSG00000115457 
Negative:  ENSG00000075884, ENSG00000081237, ENSG00000107099, ENSG00000077420, ENSG00000019582, ENSG00000081320, ENSG00000204287, ENSG00000155307, ENSG00000122862, ENSG00000027075 
	   ENSG00000166501, ENSG00000136250, ENSG00000168918, ENSG00000188641, ENSG00000120594, ENSG00000051523, ENSG00000231389, ENSG00000164674, ENSG00000245532, ENSG00000254087 
	   ENSG00000138639, ENSG00000198879, ENSG00000082074, ENSG00000141293, ENSG00000162511, ENSG00000152818, ENSG00000152270, ENSG00000121966, ENSG00000145819, ENSG00000111913 
PC_ 5 
Positive:  ENSG00000075884, ENSG00000081237, ENSG00000107099, ENSG00000077420, ENSG00000019582, ENSG00000116147, ENSG00000204287, ENSG00000155307, ENSG00000122862, ENSG00000081320 
	   ENSG00000027075, ENSG00000168918, ENSG00000231389, ENSG00000131094, ENSG00000261857, ENSG00000120594, ENSG00000136250, ENSG00000141293, ENSG00000051523, ENSG00000254087 
	   ENSG00000082074, ENSG00000164674, ENSG00000160307, ENSG00000152270, ENSG00000103260, ENSG00000152818, ENSG00000102316, ENSG00000187608, ENSG00000134853, ENSG00000166501 
Negative:  ENSG00000112715, ENSG00000124785, ENSG00000130558, ENSG00000169071, ENSG00000183454, ENSG00000185633, ENSG00000198879, ENSG00000221869, ENSG00000186918, ENSG00000026025 
	   ENSG00000171246, ENSG00000162496, ENSG00000171951, ENSG00000253882, ENSG00000273217, ENSG00000176171, ENSG00000245532, ENSG00000131981, ENSG00000102144, ENSG00000182240 
	   ENSG00000148926, ENSG00000188042, ENSG00000167772, ENSG00000157404, ENSG00000059804, ENSG00000240758, ENSG00000135363, ENSG00000248323, ENSG00000064655, ENSG00000175197 
Warning: The default method for RunUMAP has changed from calling Python UMAP via reticulate to the R-native UWOT using the cosine metric
To use Python UMAP via reticulate, set umap.method to 'umap-learn' and metric to 'correlation'
This message will be shown once per session
18:14:25 UMAP embedding parameters a = 0.9922 b = 1.112
18:14:25 Read 7913 rows and found 11 numeric columns
18:14:25 Using Annoy for neighbor search, n_neighbors = 30
18:14:25 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
18:14:25 Writing NN index file to temp file /gpfs0/scratch/6189876/RtmpY98KU7/file1963b03a416f92
18:14:25 Searching Annoy index using 1 thread, search_k = 3000
18:14:28 Annoy recall = 100%
18:14:29 Commencing smooth kNN distance calibration using 1 thread with target n_neighbors = 30
18:14:29 Initializing from normalized Laplacian + noise (using RSpectra)
18:14:29 Commencing optimization for 500 epochs, with 334214 positive edges
Using method 'umap'
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
18:14:37 Optimization finished
Computing nearest neighbor graph
Computing SNN
Modularity Optimizer version 1.3.0 by Ludo Waltman and Nees Jan van Eck

Number of nodes: 7913
Number of edges: 259516

Running Louvain algorithm...
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Maximum modularity in 10 random starts: 0.9501
Number of communities: 5
Elapsed time: 0 seconds
Loading required package: fields
Loading required package: spam
Spam version 2.11-0 (2024-10-03) is loaded.
Type 'help( Spam)' or 'demo( spam)' for a short introduction 
and overview of this package.
Help for individual functions is also obtained by adding the
suffix '.spam' to the function name, e.g. 'help( chol.spam)'.

Attaching package: ‘spam’

The following objects are masked from ‘package:base’:

    backsolve, forwardsolve

Loading required package: viridisLite

Try help(fields) to get started.
Loading required package: parallel
[1] "Creating artificial doublets for pN = 5%"
[1] "Creating artificial doublets for pN = 10%"
[1] "Creating artificial doublets for pN = 15%"
[1] "Creating artificial doublets for pN = 20%"
[1] "Creating artificial doublets for pN = 25%"
[1] "Creating artificial doublets for pN = 30%"
[1] "Creating Seurat object..."
[1] "Creating Seurat object..."
[1] "Creating Seurat object..."
[1] "Creating Seurat object..."
[1] "Creating Seurat object..."
[1] "Creating Seurat object..."
[1] "Normalizing Seurat object..."
Normalizing layer: counts
Performing log-normalization
[1] "Normalizing Seurat object..."
Normalizing layer: counts
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
*Performing log-normalization
******[1] "Normalizing Seurat object..."
Normalizing layer: counts
***************0%   10   20   30   40   50   60   70   80   90   100%
*[----|----|----|----|----|----|----|----|----|----|
***Performing log-normalization
*****************************************[1]* "Normalizing Seurat object..."
*|
Normalizing layer: counts
****0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
*********************Performing log-normalization
***************************|
*****0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
[1] "Normalizing Seurat object..."*
Normalizing layer: counts
***********************************|
*Performing log-normalization
***************************0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
****************|
****************[1] "Normalizing Seurat object..."*
Normalizing layer: counts
***************************|
Performing log-normalization
[1] "Finding variable genes..."
Finding variable features for layer counts
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
***************[1] "Finding variable genes..."
Finding variable features for layer counts
********************Calculating gene variances*
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
********************************************************|
****[1] "Finding variable genes..."
Finding variable features for layer counts
****|
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
[1] "Finding variable genes..."
Finding variable features for layer counts
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
[1] "Finding variable genes..."
Finding variable features for layer counts
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
*****************************Calculating feature variances of standardized and clipped values*
********************|
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**0%   10   20   30   40   50   60   70   80   90   100%
*[----|----|----|----|----|----|----|----|----|----|
******************************************************[1]* "Scaling data..."
*************************************|
*****|
[1] "Finding variable genes..."
Finding variable features for layer counts
Centering and scaling data matrix
Calculating feature variances of standardized and clipped values
  |                                                                              |                                                                      |   0%[1] "Scaling data..."
  |                                                                              |===================================                                   |  50%0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
*********************************************Centering and scaling data matrix
*****|
  |                                                                              |======================================================================| 100%
  |                                                                              |                                                                      |   0%Calculating feature variances of standardized and clipped values
  |                                                                              |===================================                                   |  50%[1] "Running PCA..."
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**[1] "Scaling data..."
********  |                                                                              |======================================================================| 100%
*****************0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
************************************************|
****************Centering and scaling data matrix
*********|
  |                                                                              |                                                                      |   0%[1] "Running PCA..."
  |                                                                              |===================================                                   |  50%Calculating feature variances of standardized and clipped values
[1] "Scaling data..."
  |                                                                              |======================================================================| 100%
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
Centering and scaling data matrix
***********  |                                                                            *  |                                                                      |   0%**************************************|
[1] "Running PCA..."
  |                                                                              |===================================                                   |  50%  |                                                                              |======================================================================| 100%
[1] "Scaling data..."
Centering and scaling data matrix
Calculating feature variances of standardized and clipped values
  |                                                                              |                                                                      |   0%[1] "Running PCA..."
  |                                                                              |===================================                                   |  50%0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
***************************[1] "Calculating PC distance matrix..."
****************  |                                                                              |======================================================================| 100%
*******|
[1] "Scaling data..."
[1] "Running PCA..."
Centering and scaling data matrix
  |                                                                              |                                                                      |   0%[1] "Calculating PC distance matrix..."
  |                                                                              |===================================                                   |  50%  |                                                                              |======================================================================| 100%
[1] "Calculating PC distance matrix..."
[1] "Running PCA..."
[1] "Defining neighborhoods..."
[1] "Calculating PC distance matrix..."
[1] "Defining neighborhoods..."
[1] "Calculating PC distance matrix..."
[1] "Defining neighborhoods..."
[1] "Calculating PC distance matrix..."
[1] "Defining neighborhoods..."
[1] "Defining neighborhoods..."
[1] "Defining neighborhoods..."
[1] "Computing pANN across all pK..."
[1] "pK = 0.005..."
[1] "pK = 0.01..."
[1] "pK = 0.02..."
[1] "pK = 0.03..."
[1] "pK = 0.04..."
[1] "pK = 0.05..."
[1] "pK = 0.06..."
[1] "Computing pANN across all pK..."
[1] "pK = 0.005..."
[1] "pK = 0.01..."
[1] "pK = 0.07..."
[1] "pK = 0.02..."
[1] "pK = 0.08..."
[1] "pK = 0.03..."
[1] "pK = 0.04..."
[1] "pK = 0.05..."
[1] "pK = 0.09..."
[1] "pK = 0.06..."
[1] "pK = 0.1..."
[1] "pK = 0.07..."
[1] "Computing pANN across all pK..."
[1] "pK = 0.005..."
[1] "pK = 0.11..."
[1] "pK = 0.08..."
[1] "pK = 0.01..."
[1] "pK = 0.12..."
[1] "pK = 0.02..."
[1] "pK = 0.13..."
[1] "pK = 0.03..."
[1] "pK = 0.09..."
[1] "pK = 0.14..."
[1] "pK = 0.04..."
[1] "pK = 0.1..."
[1] "pK = 0.05..."
[1] "pK = 0.15..."
[1] "Computing pANN across all pK..."
[1] "pK = 0.005..."
[1] "pK = 0.11..."
[1] "pK = 0.06..."
[1] "pK = 0.01..."
[1] "pK = 0.16..."
[1] "pK = 0.12..."
[1] "pK = 0.07..."
[1] "pK = 0.17..."
[1] "pK = 0.13..."
[1] "pK = 0.08..."
[1] "pK = 0.02..."
[1] "pK = 0.18..."
[1] "pK = 0.03..."
[1] "pK = 0.09..."
[1] "pK = 0.14..."
[1] "pK = 0.19..."
[1] "pK = 0.04..."
[1] "pK = 0.1..."
[1] "pK = 0.15..."
[1] "pK = 0.05..."
[1] "pK = 0.2..."
[1] "pK = 0.11..."
[1] "pK = 0.16..."
[1] "pK = 0.06..."
[1] "pK = 0.12..."
[1] "pK = 0.21..."
[1] "pK = 0.17..."
[1] "pK = 0.07..."
[1] "pK = 0.13..."
[1] "pK = 0.22..."
[1] "pK = 0.08..."
[1] "pK = 0.18..."
[1] "Computing pANN across all pK..."
[1] "pK = 0.005..."
[1] "pK = 0.14..."
[1] "pK = 0.09..."
[1] "pK = 0.01..."
[1] "pK = 0.23..."
[1] "pK = 0.19..."
[1] "pK = 0.02..."
[1] "pK = 0.15..."
[1] "pK = 0.1..."
[1] "pK = 0.24..."
[1] "pK = 0.2..."
[1] "pK = 0.03..."
[1] "pK = 0.11..."
[1] "pK = 0.16..."
[1] "pK = 0.04..."
[1] "pK = 0.25..."
[1] "pK = 0.21..."
[1] "Computing pANN across all pK..."
[1] "pK = 0.005..."
[1] "pK = 0.12..."
[1] "pK = 0.05..."
[1] "pK = 0.17..."
[1] "pK = 0.01..."
[1] "pK = 0.26..."
[1] "pK = 0.22..."
[1] "pK = 0.06..."
[1] "pK = 0.13..."
[1] "pK = 0.02..."
[1] "pK = 0.18..."
[1] "pK = 0.07..."
[1] "pK = 0.03..."
[1] "pK = 0.27..."
[1] "pK = 0.23..."
[1] "pK = 0.14..."
[1] "pK = 0.19..."
[1] "pK = 0.04..."
[1] "pK = 0.08..."
[1] "pK = 0.24..."
[1] "pK = 0.28..."
[1] "pK = 0.15..."
[1] "pK = 0.09..."
[1] "pK = 0.2..."
[1] "pK = 0.29..."
[1] "pK = 0.16..."
[1] "pK = 0.1..."
[1] "pK = 0.25..."
[1] "pK = 0.05..."
[1] "pK = 0.21..."
[1] "pK = 0.06..."
[1] "pK = 0.11..."
[1] "pK = 0.17..."
[1] "pK = 0.26..."
[1] "pK = 0.3..."
[1] "pK = 0.22..."
[1] "pK = 0.07..."
[1] "pK = 0.12..."
[1] "pK = 0.18..."
[1] "pK = 0.08..."
[1] "pK = 0.27..."
[1] "pK = 0.13..."
[1] "pK = 0.23..."
[1] "pK = 0.19..."
[1] "pK = 0.09..."
[1] "pK = 0.28..."
[1] "pK = 0.14..."
[1] "pK = 0.24..."
[1] "pK = 0.1..."
[1] "pK = 0.2..."
[1] "pK = 0.15..."
[1] "pK = 0.29..."
[1] "pK = 0.11..."
[1] "pK = 0.25..."
[1] "pK = 0.21..."
[1] "pK = 0.16..."
[1] "pK = 0.12..."
[1] "pK = 0.3..."
[1] "pK = 0.26..."
[1] "pK = 0.22..."
[1] "pK = 0.13..."
[1] "pK = 0.17..."
[1] "pK = 0.27..."
[1] "pK = 0.23..."
[1] "pK = 0.14..."
[1] "pK = 0.18..."
[1] "pK = 0.28..."
[1] "pK = 0.15..."
[1] "pK = 0.24..."
[1] "pK = 0.19..."
[1] "pK = 0.29..."
[1] "pK = 0.16..."
[1] "pK = 0.2..."
[1] "pK = 0.25..."
[1] "pK = 0.3..."
[1] "pK = 0.17..."
[1][1] "pK = 0.21..."
 "pK = 0.26..."
[1] "pK = 0.18..."
[1] "pK = 0.22..."
[1] "pK = 0.27..."
[1] "pK = 0.19..."
[1] "pK = 0.23..."
[1] "pK = 0.28..."
[1] "pK = 0.2..."
[1] "pK = 0.24..."
[1] "pK = 0.29..."
[1] "pK = 0.21..."
[1] "pK = 0.25..."
[1] "pK = 0.3..."
[1] "pK = 0.22..."
[1] "pK = 0.26..."
[1] "pK = 0.23..."
[1] "pK = 0.27..."
[1] "pK = 0.24..."
[1] "pK = 0.28..."
[1] "pK = 0.25..."
[1] "pK = 0.29..."
[1] "pK = 0.26..."
[1] "pK = 0.3..."
[1] "pK = 0.27..."
[1] "pK = 0.28..."
[1] "pK = 0.29..."
[1] "pK = 0.3..."
Loading required package: KernSmooth
KernSmooth 2.23 loaded
Copyright M. P. Wand 1997-2009
Loading required package: ROCR
NULL
[1] "Creating 2638 artificial doublets..."
[1] "Creating Seurat object..."
[1] "Normalizing Seurat object..."
Normalizing layer: counts
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
[1] "Finding variable genes..."
Finding variable features for layer counts
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
[1] "Scaling data..."
Centering and scaling data matrix
  |                                                                              |                                                                      |   0%  |                                                                              |===================================                                   |  50%  |                                                                              |======================================================================| 100%
[1] "Running PCA..."
[1] "Calculating PC distance matrix..."
[1] "Computing pANN..."
[1] "Classifying doublets.."
Saving processed Seurat object to: ./out//SCPCS000008_doubletfinder.rds 
          used  (Mb) gc trigger   (Mb)  max used   (Mb)
Ncells 3348585 178.9    4975401  265.8   4975401  265.8
Vcells 5848711  44.7  262123209 1999.9 327649488 2499.8
Processing complete for: ../create_seurat_objects/out//SCPCS000008.rds 
Finished processing file: ../create_seurat_objects/out//SCPCS000008.rds
Processing file: ../create_seurat_objects/out//SCPCS000009.rds
Reading Seurat object from: ../create_seurat_objects/out//SCPCS000009.rds 
Running DoubletFinder on: ../create_seurat_objects/out//SCPCS000009.rds 
Normalizing layer: counts
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Finding variable features for layer counts
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Centering and scaling data matrix
  |                                                                              |                                                                      |   0%  |                                                                              |===================================                                   |  50%  |                                                                              |======================================================================| 100%
PC_ 1 
Positive:  ENSG00000087086, ENSG00000109846, ENSG00000123560, ENSG00000164687, ENSG00000197061, ENSG00000131095, ENSG00000120885, ENSG00000175063, ENSG00000130203, ENSG00000152583 
	   ENSG00000164611, ENSG00000089685, ENSG00000117399, ENSG00000188643, ENSG00000130208, ENSG00000170312, ENSG00000164104, ENSG00000184357, ENSG00000244734, ENSG00000100097 
	   ENSG00000123080, ENSG00000188536, ENSG00000129195, ENSG00000166851, ENSG00000206172, ENSG00000164109, ENSG00000197747, ENSG00000163624, ENSG00000183036, ENSG00000168078 
Negative:  ENSG00000137872, ENSG00000171587, ENSG00000183117, ENSG00000184611, ENSG00000187672, ENSG00000253108, ENSG00000129682, ENSG00000182901, ENSG00000214548, ENSG00000182667 
	   ENSG00000255145, ENSG00000168959, ENSG00000196090, ENSG00000225746, ENSG00000145416, ENSG00000185052, ENSG00000148123, ENSG00000144278, ENSG00000187323, ENSG00000137968 
	   ENSG00000251600, ENSG00000155511, ENSG00000136231, ENSG00000153956, ENSG00000178053, ENSG00000287720, ENSG00000149256, ENSG00000154928, ENSG00000284989, ENSG00000100095 
PC_ 2 
Positive:  ENSG00000242808, ENSG00000185565, ENSG00000183715, ENSG00000187416, ENSG00000170579, ENSG00000182667, ENSG00000179915, ENSG00000169760, ENSG00000148948, ENSG00000130226 
	   ENSG00000184408, ENSG00000150471, ENSG00000151322, ENSG00000147481, ENSG00000175161, ENSG00000129682, ENSG00000168702, ENSG00000183117, ENSG00000156103, ENSG00000066032 
	   ENSG00000187323, ENSG00000112902, ENSG00000100095, ENSG00000148123, ENSG00000139915, ENSG00000110693, ENSG00000196090, ENSG00000184611, ENSG00000150625, ENSG00000187398 
Negative:  ENSG00000122862, ENSG00000107099, ENSG00000198223, ENSG00000019582, ENSG00000170542, ENSG00000277632, ENSG00000118985, ENSG00000090104, ENSG00000168918, ENSG00000090376 
	   ENSG00000141506, ENSG00000081237, ENSG00000162924, ENSG00000155307, ENSG00000129667, ENSG00000027075, ENSG00000042980, ENSG00000075884, ENSG00000196782, ENSG00000138639 
	   ENSG00000173391, ENSG00000162511, ENSG00000051523, ENSG00000018280, ENSG00000185811, ENSG00000081320, ENSG00000077420, ENSG00000121895, ENSG00000086062, ENSG00000143119 
PC_ 3 
Positive:  ENSG00000141293, ENSG00000153283, ENSG00000172673, ENSG00000271503, ENSG00000138378, ENSG00000020633, ENSG00000116824, ENSG00000134242, ENSG00000167286, ENSG00000101445 
	   ENSG00000145649, ENSG00000118503, ENSG00000026508, ENSG00000113263, ENSG00000165929, ENSG00000008517, ENSG00000160654, ENSG00000101695, ENSG00000109452, ENSG00000105374 
	   ENSG00000135842, ENSG00000113088, ENSG00000112297, ENSG00000164674, ENSG00000164483, ENSG00000169442, ENSG00000234663, ENSG00000135048, ENSG00000163564, ENSG00000198846 
Negative:  ENSG00000173391, ENSG00000198223, ENSG00000120594, ENSG00000125730, ENSG00000118785, ENSG00000018280, ENSG00000172243, ENSG00000116711, ENSG00000173369, ENSG00000087253 
	   ENSG00000182578, ENSG00000169313, ENSG00000173372, ENSG00000155659, ENSG00000090376, ENSG00000114013, ENSG00000159189, ENSG00000171860, ENSG00000038945, ENSG00000100600 
	   ENSG00000119535, ENSG00000121933, ENSG00000196782, ENSG00000166928, ENSG00000171051, ENSG00000166926, ENSG00000286618, ENSG00000011600, ENSG00000095970, ENSG00000186417 
PC_ 4 
Positive:  ENSG00000087086, ENSG00000173369, ENSG00000130208, ENSG00000173372, ENSG00000158869, ENSG00000159189, ENSG00000224916, ENSG00000204472, ENSG00000234906, ENSG00000130203 
	   ENSG00000164687, ENSG00000119655, ENSG00000011600, ENSG00000132965, ENSG00000204287, ENSG00000163191, ENSG00000231389, ENSG00000118785, ENSG00000051523, ENSG00000095970 
	   ENSG00000042493, ENSG00000187398, ENSG00000183117, ENSG00000026297, ENSG00000129682, ENSG00000160255, ENSG00000187672, ENSG00000121933, ENSG00000203747, ENSG00000233276 
Negative:  ENSG00000251562, ENSG00000184226, ENSG00000184408, ENSG00000165323, ENSG00000185565, ENSG00000169760, ENSG00000154654, ENSG00000176204, ENSG00000242808, ENSG00000133019 
	   ENSG00000168702, ENSG00000175161, ENSG00000128512, ENSG00000182463, ENSG00000239268, ENSG00000156103, ENSG00000215386, ENSG00000103489, ENSG00000152208, ENSG00000179915 
	   ENSG00000169306, ENSG00000156113, ENSG00000155052, ENSG00000020577, ENSG00000150275, ENSG00000151322, ENSG00000187416, ENSG00000148948, ENSG00000170579, ENSG00000157985 
PC_ 5 
Positive:  ENSG00000182601, ENSG00000280560, ENSG00000138639, ENSG00000152270, ENSG00000196782, ENSG00000042980, ENSG00000249738, ENSG00000184005, ENSG00000158813, ENSG00000164687 
	   ENSG00000172578, ENSG00000162711, ENSG00000090376, ENSG00000120594, ENSG00000125089, ENSG00000134070, ENSG00000146555, ENSG00000119535, ENSG00000104043, ENSG00000151726 
	   ENSG00000198223, ENSG00000227082, ENSG00000153208, ENSG00000012779, ENSG00000248905, ENSG00000129667, ENSG00000197329, ENSG00000152315, ENSG00000109906, ENSG00000166926 
Negative:  ENSG00000173369, ENSG00000158869, ENSG00000173372, ENSG00000224916, ENSG00000159189, ENSG00000234906, ENSG00000204472, ENSG00000132965, ENSG00000011600, ENSG00000231389 
	   ENSG00000119655, ENSG00000163191, ENSG00000130208, ENSG00000051523, ENSG00000204287, ENSG00000095970, ENSG00000118785, ENSG00000223865, ENSG00000160255, ENSG00000026297 
	   ENSG00000104870, ENSG00000042493, ENSG00000171659, ENSG00000175899, ENSG00000203747, ENSG00000121933, ENSG00000155659, ENSG00000163131, ENSG00000184226, ENSG00000126264 
Warning: The default method for RunUMAP has changed from calling Python UMAP via reticulate to the R-native UWOT using the cosine metric
To use Python UMAP via reticulate, set umap.method to 'umap-learn' and metric to 'correlation'
This message will be shown once per session
18:15:41 UMAP embedding parameters a = 0.9922 b = 1.112
18:15:41 Read 2172 rows and found 12 numeric columns
18:15:41 Using Annoy for neighbor search, n_neighbors = 30
18:15:41 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
18:15:42 Writing NN index file to temp file /gpfs0/scratch/6189876/RtmpLjK2zr/file1965145b45887d
18:15:42 Searching Annoy index using 1 thread, search_k = 3000
18:15:42 Annoy recall = 100%
18:15:42 Commencing smooth kNN distance calibration using 1 thread with target n_neighbors = 30
18:15:43 Initializing from normalized Laplacian + noise (using RSpectra)
18:15:43 Commencing optimization for 500 epochs, with 92350 positive edges
Using method 'umap'
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
18:15:45 Optimization finished
Computing nearest neighbor graph
Computing SNN
Modularity Optimizer version 1.3.0 by Ludo Waltman and Nees Jan van Eck

Number of nodes: 2172
Number of edges: 73806

Running Louvain algorithm...
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Maximum modularity in 10 random starts: 0.9560
Number of communities: 5
Elapsed time: 0 seconds
Loading required package: fields
Loading required package: spam
Spam version 2.11-0 (2024-10-03) is loaded.
Type 'help( Spam)' or 'demo( spam)' for a short introduction 
and overview of this package.
Help for individual functions is also obtained by adding the
suffix '.spam' to the function name, e.g. 'help( chol.spam)'.

Attaching package: ‘spam’

The following objects are masked from ‘package:base’:

    backsolve, forwardsolve

Loading required package: viridisLite

Try help(fields) to get started.
Loading required package: parallel
[1] "Creating artificial doublets for pN = 5%"
[1] "Creating artificial doublets for pN = 10%"
[1] "Creating artificial doublets for pN = 15%"
[1] "Creating artificial doublets for pN = 20%"
[1] "Creating artificial doublets for pN = 25%"
[1] "Creating Seurat object..."
[1] "Creating artificial doublets for pN = 30%"
[1] "Creating Seurat object..."
[1] "Creating Seurat object..."
[1] "Creating Seurat object..."
[1] "Creating Seurat object..."
[1] "Creating Seurat object..."
[1] "Normalizing Seurat object..."
Normalizing layer: counts
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
[1] "Normalizing Seurat object..."
Normalizing layer: counts
*************[1]* "Normalizing Seurat object..."
*Normalizing layer: counts
*******Performing log-normalization
*********************0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
*******|
*Performing log-normalization
******************0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
*******************************|
[1] "Normalizing Seurat object..."
Normalizing layer: counts
Performing log-normalization
[1] "Normalizing Seurat object..."
Normalizing layer: counts
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
*Performing log-normalization
**********************0%   10   20   30   40   50   60   70   80   90   100%
*[----|----|----|----|----|----|----|----|----|----|
******[1]* "Normalizing Seurat object..."*
*Normalizing layer: counts
*******************************Performing log-normalization
*****[1]|
 "Finding variable genes..."*
**Finding variable features for layer counts
*****************0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
*********************|
****Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
*************************[1]* "Finding variable genes..."*
****Finding variable features for layer counts
****************************************|
***************|
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
[1] "Finding variable genes..."
Finding variable features for layer counts
Calculating gene variances
[1]0%   10   20   30   40   50   60   70   80   90   100%
 "Finding variable genes..."[----|----|----|----|----|----|----|----|----|----|

**Finding variable features for layer counts
************************************************|
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
***[1]* "Finding variable genes..."*
**Finding variable features for layer counts
*******************************************|
[1] "Finding variable genes..."
Finding variable features for layer counts
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
************************************************[1]* "Scaling data..."
*|
Centering and scaling data matrix
  |                                                                              |                                                                      |   0%Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
*******  |                                                                            *  |===================================                                   |  50%*****************************[1]* "Scaling data..."*
***********|
  |                                                                              |======================================================================| 100%
Centering and scaling data matrix
  |                                                                              |                                                                      |   0%  |                                                                              |===================================                                   |  50%Calculating feature variances of standardized and clipped values
  |                                                                              |======================================================================| 100%
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
[1] "Scaling data..."
Centering and scaling data matrix
[1] "Running PCA..."
  |                                                                              |                                                                      |   0%  |                                                                              |===================================                                   |  50%[1] "Scaling data..."
  |                                                                              |======================================================================| 100%
[1] "Running PCA..."
Centering and scaling data matrix
  |                                                                              |                                                                      |   0%  |                                                                              |===================================                                   |  50%Calculating feature variances of standardized and clipped values
  |                                                                              |======================================================================| 100%
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
[1] "Scaling data..."
Centering and scaling data matrix
[1] "Running PCA..."
  |                                                                              |                                                                      |   0%  |                                                                              |===================================                                   |  50%[1] "Calculating PC distance matrix..."
[1] "Scaling data..."
  |                                                                              |======================================================================| 100%
[1] "Running PCA..."
Centering and scaling data matrix
  |                                                                              |                                                                      |   0%  |                                                                              |===================================                                   |  50%  |                                                                              |======================================================================| 100%
[1] "Running PCA..."
[1] "Defining neighborhoods..."
[1] "Calculating PC distance matrix..."
[1] "Running PCA..."
[1] "Computing pANN across all pK..."
[1] "pK = 0.005..."
[1] "pK = 0.01..."
[1] "Defining neighborhoods..."
[1] "Calculating PC distance matrix..."
[1] "pK = 0.02..."
[1] "pK = 0.03..."
[1] "pK = 0.04..."
[1] "Calculating PC distance matrix..."
[1] "pK = 0.05..."
[1] "pK = 0.06..."
[1] "pK = 0.07..."
[1] "Calculating PC distance matrix..."
[1] "pK = 0.08..."
[1] "pK = 0.09..."
[1] "pK = 0.1..."
[1] "Computing pANN across all pK..."
[1] "pK = 0.005..."
[1] "pK = 0.11..."
[1] "pK = 0.01..."
[1] "pK = 0.12..."
[1] "Defining neighborhoods..."
[1] "Calculating PC distance matrix..."
[1] "pK = 0.02..."
[1] "pK = 0.13..."
[1] "pK = 0.03..."
[1] "pK = 0.14..."
[1] "pK = 0.04..."
[1] "pK = 0.15..."
[1] "Defining neighborhoods..."
[1] "pK = 0.05..."
[1] "pK = 0.16..."
[1] "pK = 0.06..."
[1] "pK = 0.17..."
[1] "Defining neighborhoods..."
[1] "pK = 0.07..."
[1] "pK = 0.18..."
[1] "pK = 0.08..."
[1][1] "pK = 0.09..."
 "pK = 0.19..."
[1] "pK = 0.1..."
[1] "pK = 0.2..."
[1] "pK = 0.21..."
[1] "pK = 0.11..."
[1] "Computing pANN across all pK..."
[1] "pK = 0.005..."
[1] "pK = 0.22..."
[1] "pK = 0.12..."
[1] "pK = 0.01..."
[1] "Defining neighborhoods..."
[1] "pK = 0.13..."
[1] "pK = 0.23..."
[1] "pK = 0.02..."
[1] "pK = 0.14..."
[1] "pK = 0.03..."
[1] "pK = 0.24..."
[1][1] "Computing pANN across all pK..."
 "pK = 0.15..."
[1] "pK = 0.005..."
[1] "pK = 0.04..."
[1] "pK = 0.01..."
[1] "pK = 0.25..."
[1] "pK = 0.16..."
[1] "pK = 0.05..."
[1] "pK = 0.02..."
[1] "pK = 0.26..."
[1] "pK = 0.17..."
[1] "pK = 0.06..."
[1] "pK = 0.03..."
[1] "Computing pANN across all pK..."
[1] "pK = 0.005..."
[1] "pK = 0.27..."
[1] "pK = 0.07..."
[1] "pK = 0.18..."
[1] "pK = 0.01..."
[1] "pK = 0.04..."
[1] "pK = 0.28..."
[1] "pK = 0.08..."
[1] "pK = 0.19..."[1]
 "pK = 0.02..."
[1] "pK = 0.05..."
[1] "pK = 0.09..."
[1] "pK = 0.29..."
[1] "pK = 0.03..."
[1] "pK = 0.2..."
[1] "pK = 0.06..."
[1] "pK = 0.1..."
[1] "pK = 0.04..."
[1] "pK = 0.21..."
[1] "pK = 0.07..."
[1] "pK = 0.3..."
[1] "pK = 0.11..."
[1] "pK = 0.22..."
[1] "pK = 0.08..."
[1] "pK = 0.05..."
[1] "pK = 0.12..."
[1][1] "pK = 0.06..."
 "pK = 0.09..."
[1] "pK = 0.23..."
[1] "Computing pANN across all pK..."
[1] "pK = 0.005..."
[1] "pK = 0.13..."
[1] "pK = 0.07..."
[1] "pK = 0.1..."
[1] "pK = 0.01..."
[1] "pK = 0.14..."
[1] "pK = 0.08..."
[1] "pK = 0.24..."
[1] "pK = 0.02..."
[1] "pK = 0.11..."
[1] "pK = 0.15..."
[1] "pK = 0.09..."
[1] "pK = 0.25..."
[1] "pK = 0.03..."
[1] "pK = 0.12..."
[1] "pK = 0.16..."
[1] "pK = 0.1..."
[1] "pK = 0.26..."
[1] "pK = 0.13..."
[1] "pK = 0.04..."
[1] "pK = 0.17..."
[1] "pK = 0.27..."[1]
 "pK = 0.14..."
[1] "pK = 0.11..."
[1] "pK = 0.05..."
[1][1][1] "pK = 0.06..."
[1] "pK = 0.15..."
 "pK = 0.12..."
 "pK = 0.18..."
[1] "pK = 0.28..."
[1] "pK = 0.07..."
[1] "pK = 0.13..."[1]
 "pK = 0.16..."
[1] "pK = 0.19..."
[1] "pK = 0.29..."
[1] "pK = 0.08..."
[1] "pK = 0.14..."
[1] "pK = 0.2..."
[1] "pK = 0.17..."
[1] "pK = 0.3..."
[1] "pK = 0.09..."
[1] "pK = 0.15..."
[1] "pK = 0.21..."
[1] "pK = 0.1..."
[1] "pK = 0.18..."
[1] "pK = 0.16..."
[1] "pK = 0.22..."
[1] "pK = 0.19..."
[1] "pK = 0.11..."
[1] "pK = 0.17..."
[1] "pK = 0.23..."
[1] "pK = 0.2..."
[1] "pK = 0.12..."
[1] "pK = 0.18..."
[1] "pK = 0.21..."
[1] "pK = 0.13..."
[1] "pK = 0.24..."
[1] "pK = 0.19..."
[1] "pK = 0.22..."
[1] "pK = 0.14..."
[1] "pK = 0.25..."
[1] "pK = 0.2..."
[1] "pK = 0.23..."
[1] "pK = 0.15..."
[1] "pK = 0.26..."
[1] "pK = 0.21..."
[1] "pK = 0.16..."
[1] "pK = 0.27..."
[1] "pK = 0.24..."
[1] "pK = 0.22..."
[1] "pK = 0.28..."
[1] "pK = 0.17..."
[1] "pK = 0.25..."
[1] "pK = 0.23..."
[1] "pK = 0.29..."
[1] "pK = 0.18..."
[1] "pK = 0.26..."
[1] "pK = 0.3..."
[1] "pK = 0.19..."
[1] "pK = 0.24..."
[1] "pK = 0.27..."
[1] "pK = 0.2..."
[1] "pK = 0.25..."
[1] "pK = 0.28..."
[1] "pK = 0.21..."
[1] "pK = 0.26..."
[1] "pK = 0.29..."
[1] "pK = 0.22..."
[1] "pK = 0.27..."
[1] "pK = 0.3..."
[1] "pK = 0.28..."
[1] "pK = 0.23..."
[1] "pK = 0.29..."
[1] "pK = 0.24..."
[1] "pK = 0.3..."
[1] "pK = 0.25..."
[1] "pK = 0.26..."
[1] "pK = 0.27..."
[1] "pK = 0.28..."
[1] "pK = 0.29..."
[1] "pK = 0.3..."
Loading required package: KernSmooth
KernSmooth 2.23 loaded
Copyright M. P. Wand 1997-2009
Loading required package: ROCR
NULL
[1] "Creating 724 artificial doublets..."
[1] "Creating Seurat object..."
[1] "Normalizing Seurat object..."
Normalizing layer: counts
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
[1] "Finding variable genes..."
Finding variable features for layer counts
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
[1] "Scaling data..."
Centering and scaling data matrix
  |                                                                              |                                                                      |   0%  |                                                                              |===================================                                   |  50%  |                                                                              |======================================================================| 100%
[1] "Running PCA..."
[1] "Calculating PC distance matrix..."
[1] "Computing pANN..."
[1] "Classifying doublets.."
Saving processed Seurat object to: ./out//SCPCS000009_doubletfinder.rds 
          used  (Mb) gc trigger  (Mb) max used  (Mb)
Ncells 3348585 178.9    4975401 265.8  4975401 265.8
Vcells 5848707  44.7   57616070 439.6 72017955 549.5
Processing complete for: ../create_seurat_objects/out//SCPCS000009.rds 
Finished processing file: ../create_seurat_objects/out//SCPCS000009.rds
Processing file: ../create_seurat_objects/out//SCPCS000010.rds
Reading Seurat object from: ../create_seurat_objects/out//SCPCS000010.rds 
Running DoubletFinder on: ../create_seurat_objects/out//SCPCS000010.rds 
Normalizing layer: counts
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Finding variable features for layer counts
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Centering and scaling data matrix
  |                                                                              |                                                                      |   0%  |                                                                              |===================================                                   |  50%  |                                                                              |======================================================================| 100%
PC_ 1 
Positive:  ENSG00000122862, ENSG00000196154, ENSG00000019582, ENSG00000198821, ENSG00000166501, ENSG00000155307, ENSG00000185885, ENSG00000008517, ENSG00000011600, ENSG00000223865 
	   ENSG00000168685, ENSG00000196126, ENSG00000227507, ENSG00000231389, ENSG00000210082, ENSG00000188641, ENSG00000158869, ENSG00000172673, ENSG00000180353, ENSG00000204472 
	   ENSG00000173369, ENSG00000130208, ENSG00000130203, ENSG00000101695, ENSG00000074966, ENSG00000173372, ENSG00000203747, ENSG00000160678, ENSG00000254838, ENSG00000163564 
Negative:  ENSG00000168702, ENSG00000237238, ENSG00000175497, ENSG00000135298, ENSG00000134532, ENSG00000169760, ENSG00000110693, ENSG00000150471, ENSG00000154654, ENSG00000156103 
	   ENSG00000185842, ENSG00000162670, ENSG00000276500, ENSG00000170579, ENSG00000179915, ENSG00000130226, ENSG00000108018, ENSG00000187391, ENSG00000151746, ENSG00000228566 
	   ENSG00000156011, ENSG00000176204, ENSG00000227036, ENSG00000185565, ENSG00000215386, ENSG00000151229, ENSG00000166833, ENSG00000179241, ENSG00000242808, ENSG00000184408 
PC_ 2 
Positive:  ENSG00000147588, ENSG00000026025, ENSG00000211459, ENSG00000210082, ENSG00000120885, ENSG00000115461, ENSG00000169715, ENSG00000139289, ENSG00000144485, ENSG00000114115 
	   ENSG00000135404, ENSG00000184110, ENSG00000152583, ENSG00000128564, ENSG00000029993, ENSG00000053438, ENSG00000205364, ENSG00000106278, ENSG00000131095, ENSG00000117519 
	   ENSG00000162545, ENSG00000172201, ENSG00000110092, ENSG00000131016, ENSG00000176171, ENSG00000145681, ENSG00000109846, ENSG00000189058, ENSG00000261857, ENSG00000249992 
Negative:  ENSG00000166501, ENSG00000153283, ENSG00000198821, ENSG00000134215, ENSG00000251562, ENSG00000140563, ENSG00000185885, ENSG00000188641, ENSG00000245532, ENSG00000074966 
	   ENSG00000136250, ENSG00000134539, ENSG00000122862, ENSG00000105374, ENSG00000254838, ENSG00000101695, ENSG00000107968, ENSG00000180644, ENSG00000172543, ENSG00000165025 
	   ENSG00000163564, ENSG00000145990, ENSG00000197943, ENSG00000155629, ENSG00000120129, ENSG00000145649, ENSG00000109321, ENSG00000271503, ENSG00000100453, ENSG00000275302 
PC_ 3 
Positive:  ENSG00000060709, ENSG00000112319, ENSG00000044524, ENSG00000106236, ENSG00000041982, ENSG00000083067, ENSG00000049759, ENSG00000007001, ENSG00000185666, ENSG00000138759 
	   ENSG00000118322, ENSG00000185634, ENSG00000123094, ENSG00000187498, ENSG00000152763, ENSG00000182732, ENSG00000075223, ENSG00000171729, ENSG00000075213, ENSG00000285367 
	   ENSG00000274893, ENSG00000156535, ENSG00000196872, ENSG00000111058, ENSG00000134871, ENSG00000170485, ENSG00000078114, ENSG00000235545, ENSG00000146555, ENSG00000245768 
Negative:  ENSG00000171587, ENSG00000258342, ENSG00000101311, ENSG00000249335, ENSG00000264151, ENSG00000287550, ENSG00000154080, ENSG00000074527, ENSG00000183715, ENSG00000133401 
	   ENSG00000187527, ENSG00000251680, ENSG00000248184, ENSG00000226994, ENSG00000114279, ENSG00000091428, ENSG00000072201, ENSG00000136267, ENSG00000089041, ENSG00000176771 
	   ENSG00000116711, ENSG00000257585, ENSG00000184672, ENSG00000232044, ENSG00000152208, ENSG00000144339, ENSG00000183032, ENSG00000118515, ENSG00000146147, ENSG00000116147 
PC_ 4 
Positive:  ENSG00000116117, ENSG00000137693, ENSG00000145623, ENSG00000245832, ENSG00000108846, ENSG00000137573, ENSG00000075223, ENSG00000183230, ENSG00000165105, ENSG00000003436 
	   ENSG00000155754, ENSG00000186952, ENSG00000189108, ENSG00000132470, ENSG00000164199, ENSG00000154080, ENSG00000154493, ENSG00000005108, ENSG00000171094, ENSG00000164879 
	   ENSG00000196872, ENSG00000114204, ENSG00000151617, ENSG00000136546, ENSG00000249352, ENSG00000224081, ENSG00000080493, ENSG00000260372, ENSG00000245213, ENSG00000235545 
Negative:  ENSG00000136492, ENSG00000197472, ENSG00000196584, ENSG00000139734, ENSG00000166250, ENSG00000183780, ENSG00000160949, ENSG00000144395, ENSG00000173157, ENSG00000187951 
	   ENSG00000213988, ENSG00000148123, ENSG00000267383, ENSG00000143476, ENSG00000146263, ENSG00000175175, ENSG00000165304, ENSG00000075429, ENSG00000119969, ENSG00000186185 
	   ENSG00000140525, ENSG00000051341, ENSG00000163507, ENSG00000197410, ENSG00000002746, ENSG00000168959, ENSG00000224905, ENSG00000198216, ENSG00000144554, ENSG00000154864 
PC_ 5 
Positive:  ENSG00000198821, ENSG00000105374, ENSG00000134539, ENSG00000180644, ENSG00000275302, ENSG00000077984, ENSG00000271503, ENSG00000100453, ENSG00000163564, ENSG00000172543 
	   ENSG00000145649, ENSG00000136250, ENSG00000169583, ENSG00000115523, ENSG00000150045, ENSG00000236790, ENSG00000185885, ENSG00000101096, ENSG00000100450, ENSG00000137441 
	   ENSG00000074966, ENSG00000101695, ENSG00000170962, ENSG00000111796, ENSG00000145990, ENSG00000158050, ENSG00000173068, ENSG00000211829, ENSG00000196154, ENSG00000182621 
Negative:  ENSG00000153064, ENSG00000211899, ENSG00000247982, ENSG00000136573, ENSG00000211898, ENSG00000156738, ENSG00000128815, ENSG00000082438, ENSG00000167483, ENSG00000163534 
	   ENSG00000164330, ENSG00000105369, ENSG00000100721, ENSG00000138639, ENSG00000179344, ENSG00000285947, ENSG00000112232, ENSG00000196735, ENSG00000095585, ENSG00000186265 
	   ENSG00000144218, ENSG00000211592, ENSG00000106034, ENSG00000253535, ENSG00000042980, ENSG00000204287, ENSG00000263961, ENSG00000257950, ENSG00000184005, ENSG00000146192 
Warning: The default method for RunUMAP has changed from calling Python UMAP via reticulate to the R-native UWOT using the cosine metric
To use Python UMAP via reticulate, set umap.method to 'umap-learn' and metric to 'correlation'
This message will be shown once per session
18:16:05 UMAP embedding parameters a = 0.9922 b = 1.112
18:16:05 Read 296 rows and found 10 numeric columns
18:16:05 Using Annoy for neighbor search, n_neighbors = 30
18:16:05 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
18:16:05 Writing NN index file to temp file /gpfs0/scratch/6189876/RtmpnBdbRh/file196652691851d6
18:16:05 Searching Annoy index using 1 thread, search_k = 3000
18:16:05 Annoy recall = 100%
18:16:05 Commencing smooth kNN distance calibration using 1 thread with target n_neighbors = 30
18:16:05 Initializing from normalized Laplacian + noise (using RSpectra)
18:16:05 Commencing optimization for 500 epochs, with 11378 positive edges
Using method 'umap'
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
18:16:06 Optimization finished
Computing nearest neighbor graph
Computing SNN
Modularity Optimizer version 1.3.0 by Ludo Waltman and Nees Jan van Eck

Number of nodes: 296
Number of edges: 8178

Running Louvain algorithm...
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Maximum modularity in 10 random starts: 0.9466
Number of communities: 3
Elapsed time: 0 seconds
Loading required package: fields
Loading required package: spam
Spam version 2.11-0 (2024-10-03) is loaded.
Type 'help( Spam)' or 'demo( spam)' for a short introduction 
and overview of this package.
Help for individual functions is also obtained by adding the
suffix '.spam' to the function name, e.g. 'help( chol.spam)'.

Attaching package: ‘spam’

The following objects are masked from ‘package:base’:

    backsolve, forwardsolve

Loading required package: viridisLite

Try help(fields) to get started.
Loading required package: parallel
[1][1] "Creating artificial doublets for pN = 5%"
 "Creating artificial doublets for pN = 10%"
[1] "Creating artificial doublets for pN = 15%"
[1] "Creating artificial doublets for pN = 20%"
[1] "Creating artificial doublets for pN = 25%"
[1] "Creating artificial doublets for pN = 30%"
[1] "Creating Seurat object..."
[1] "Creating Seurat object..."
[1] "Creating Seurat object..."
[1] "Creating Seurat object..."
[1] "Creating Seurat object..."
[1] "Creating Seurat object..."
[1] "Normalizing Seurat object..."
Normalizing layer: counts
[1] "Normalizing Seurat object..."
Performing log-normalization
Normalizing layer: counts
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
[1]* "Normalizing Seurat object..."
*Normalizing layer: counts
***********Performing log-normalization
*******0%   10   20   30   40   50   60   70   80   90   100%
*[----|----|----|----|----|----|----|----|----|----|
*********Performing log-normalization
****************************0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
***[1]|
 "Normalizing Seurat object..."*
*Normalizing layer: counts
************************************************************|
***************************|
[1] "Normalizing Seurat object..."
Normalizing layer: counts
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
Performing log-normalization
*****0%   10   20   30   40   50   60   70   80   90   100%
*[----|----|----|----|----|----|----|----|----|----|
***[1]* "Normalizing Seurat object..."*
**Normalizing layer: counts
**********************Performing log-normalization
*******************************0%   10   20   30   40   50   60   70   80   90   100%
**[----|----|----|----|----|----|----|----|----|----|
********************************|
************|
*******[1]* "Finding variable genes..."*
***Finding variable features for layer counts
*************[1]* "Finding variable genes..."
*Finding variable features for layer counts
*******Calculating gene variances*
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
*********|
**************[1]* "Finding variable genes..."*
*Calculating gene variances*Finding variable features for layer counts

*0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
*************************************************|
**************************|
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
[1] "Finding variable genes..."
Finding variable features for layer counts
[1] "Finding variable genes..."
Finding variable features for layer counts
Calculating gene variancesCalculating gene variances

0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
*************************************************[1]* "Finding variable genes..."*
****Finding variable features for layer counts
********************************************|
*|
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
********0%   10   20   30   40   50   60   70   80   90   100%
*[----|----|----|----|----|----|----|----|----|----|
**************************************************************Calculating feature variances of standardized and clipped values**
*****************|
**********|
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
[1][1] "Scaling data..."
 "Scaling data..."
Centering and scaling data matrix
  |                                                                              |                                                                      |   0%  |                                                                            Centering and scaling data matrix
  |===================================                                   |  50%  |                                                                            [1]  |                                                                      |   0% "Scaling data..."
  |                                                                              |===================================                                   |  50%  |                                                                              |======================================================================| 100%  |                                                                            
  |======================================================================| 100%
Centering and scaling data matrix
  |                                                                              |                                                                      |   0%  |                                                                              |===================================                                   |  50%  |                                                                              |======================================================================| 100%
[1] "Running PCA..."
[1] "Running PCA..."
[1] "Running PCA..."
Calculating feature variances of standardized and clipped valuesCalculating feature variances of standardized and clipped values

0%   10   20   30   40   50   60   70   80   90   100%
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
[----|----|----|----|----|----|----|----|----|----|
*****************************************************************[1]* "Calculating PC distance matrix..."*
********************************|
*|
[1] "Calculating PC distance matrix..."
Calculating feature variances of standardized and clipped values
[1] "Calculating PC distance matrix..."
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
[1] "Scaling data..."
[1] "Scaling data..."
Centering and scaling data matrix
  |                                                                              |                                                                      |   0%Centering and scaling data matrix
  |                                                                              |                                                                      |   0%  |                                                                              |===================================                                   |  50%  |                                                                              |===================================                                   |  50%  |                                                                              |======================================================================| 100%
  |                                                                              |======================================================================| 100%
[1] "Scaling data..."
Centering and scaling data matrix
  |                                                                              |                                                                      |   0%  |                                                                            [1]  |===================================                                   |  50% "Running PCA..."
[1]  |                                                                             "Running PCA..."  |======================================================================| 100%

[1] "Defining neighborhoods..."
[1] "Defining neighborhoods..."
[1][1] "Running PCA..."
 "Computing pANN across all pK..."
[1] "pK = 0.04..."
[1] "Computing pANN across all pK..."
[1][1] "pK = 0.04..." "pK = 0.05..."

[1] "pK = 0.06..."[1]
 "pK = 0.05..."
[1] "Defining neighborhoods..."
[1][1] "pK = 0.07..."
 "pK = 0.06..."
[1][1] "pK = 0.08..."
 "pK = 0.07..."
[1] "pK = 0.09..."[1] "pK = 0.08..."[1]

 "Computing pANN across all pK..."
[1] "pK = 0.04..."
[1] "pK = 0.1..."[1]
 "pK = 0.09..."
[1] "pK = 0.05..."
[1] "pK = 0.11..."[1]
[1] "pK = 0.1..."
 "pK = 0.06..."
[1] "pK = 0.12..."
[1] "pK = 0.11..."[1] "pK = 0.07..."

[1] "pK = 0.13..."
[1][1] "pK = 0.12..."
 "pK = 0.08..."
[1] "pK = 0.14..."
[1] "pK = 0.13..."
[1] "pK = 0.09..."
[1] "pK = 0.15..."
[1] "pK = 0.14..."
[1] "pK = 0.1..."
[1] "pK = 0.16..."
[1] "pK = 0.15..."[1][1] "pK = 0.11..."
 "Calculating PC distance matrix..."

[1] "pK = 0.17..."[1]
 "Calculating PC distance matrix..."
[1] "pK = 0.16..."
[1] "pK = 0.12..."
[1] "pK = 0.18..."
[1] "pK = 0.17..."
[1] "pK = 0.13..."
[1] "pK = 0.19..."
[1] "pK = 0.18..."
[1][1] "pK = 0.14..."
 "pK = 0.2..."
[1] "pK = 0.19..."
[1] "pK = 0.15..."
[1] "pK = 0.21..."
[1] "pK = 0.2..."[1] "pK = 0.16..."
[1]
 "pK = 0.22..."
[1] "pK = 0.21..."
[1] "pK = 0.17..."[1]
 "pK = 0.23..."
[1] "pK = 0.22..."
[1] "pK = 0.18..."
[1] "pK = 0.24..."
[1] "pK = 0.23..."
[1] "pK = 0.19..."
[1] "pK = 0.25..."
[1] "pK = 0.24..."
[1] "pK = 0.2..."
[1] "pK = 0.26..."
[1] "pK = 0.25..."
[1] "pK = 0.21..."
[1] "pK = 0.27..."
[1][1] "pK = 0.26..." "Calculating PC distance matrix..."
[1] "pK = 0.22..."
[1]
 "pK = 0.28..."
[1] "pK = 0.27..."[1] "pK = 0.23..."[1]

 "pK = 0.29..."
[1] "pK = 0.28..."[1][1] "pK = 0.3..."
 "pK = 0.24..."

[1][1] "pK = 0.29..."
 "pK = 0.25..."
[1] "pK = 0.3..."
[1] "pK = 0.26..."
[1] "pK = 0.27..."
[1] "pK = 0.28..."
[1] "pK = 0.29..."
[1] "pK = 0.3..."
[1] "Defining neighborhoods..."
[1] "Defining neighborhoods..."
[1] "Computing pANN across all pK..."
[1] "pK = 0.04..."
[1] "Computing pANN across all pK..."
[1] "pK = 0.04..."
[1] "pK = 0.05..."
[1] "pK = 0.05..."
[1] "pK = 0.06..."
[1] "pK = 0.06..."
[1] "pK = 0.07..."
[1] "pK = 0.07..."
[1] "pK = 0.08..."
[1] "pK = 0.08..."
[1] "pK = 0.09..."
[1] "pK = 0.09..."
[1] "pK = 0.1..."
[1] "Defining neighborhoods..."
[1] "pK = 0.1..."
[1] "pK = 0.11..."
[1] "pK = 0.11..."
[1] "pK = 0.12..."
[1] "pK = 0.12..."
[1] "pK = 0.13..."
[1] "Computing pANN across all pK..."
[1] "pK = 0.13..."[1] "pK = 0.14..."[1] "pK = 0.04..."


[1] "pK = 0.14..."[1] "pK = 0.15..."[1]

 "pK = 0.05..."
[1] "pK = 0.15..."[1] "pK = 0.16..."[1]

 "pK = 0.06..."
[1] "pK = 0.16..."[1] "pK = 0.17..."[1]

 "pK = 0.07..."
[1] "pK = 0.17..."[1] "pK = 0.18..."[1] "pK = 0.08..."


[1][1] "pK = 0.19..."[1] "pK = 0.18..."

 "pK = 0.09..."
[1] "pK = 0.19..."[1] "pK = 0.2..."[1] "pK = 0.1..."


[1] "pK = 0.2..."[1] "pK = 0.21..."[1]

 "pK = 0.11..."
[1] "pK = 0.21..."[1]
[1] "pK = 0.12..." "pK = 0.22..."

[1] "pK = 0.22..."
[1][1] "pK = 0.13..." "pK = 0.23..."

[1] "pK = 0.23..."
[1] "pK = 0.24..."[1]
 "pK = 0.14..."
[1] "pK = 0.24..."
[1] "pK = 0.25..."[1] "pK = 0.15..."

[1] "pK = 0.25..."
[1] "pK = 0.16..."[1] "pK = 0.26..."
[1] "pK = 0.26..."

[1] "pK = 0.17..."
[1] "pK = 0.27..."[1]
 "pK = 0.27..."
[1] "pK = 0.18..."
[1] "pK = 0.28..."
[1] "pK = 0.28..."
[1] "pK = 0.19..."
[1] "pK = 0.29..."
[1] "pK = 0.29..."
[1] "pK = 0.2..."
[1] "pK = 0.3..."
[1] "pK = 0.3..."
[1] "pK = 0.21..."
[1] "pK = 0.22..."
[1] "pK = 0.23..."
[1] "pK = 0.24..."
[1] "pK = 0.25..."
[1] "pK = 0.26..."
[1] "pK = 0.27..."
[1] "pK = 0.28..."
[1] "pK = 0.29..."
[1] "pK = 0.3..."
Loading required package: KernSmooth
KernSmooth 2.23 loaded
Copyright M. P. Wand 1997-2009
Loading required package: ROCR
NULL
[1] "Creating 99 artificial doublets..."
[1] "Creating Seurat object..."
[1] "Normalizing Seurat object..."
Normalizing layer: counts
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
[1] "Finding variable genes..."
Finding variable features for layer counts
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
[1] "Scaling data..."
Centering and scaling data matrix
  |                                                                              |                                                                      |   0%  |                                                                              |===================================                                   |  50%  |                                                                              |======================================================================| 100%
[1] "Running PCA..."
[1] "Calculating PC distance matrix..."
[1] "Computing pANN..."
[1] "Classifying doublets.."
Saving processed Seurat object to: ./out//SCPCS000010_doubletfinder.rds 
          used  (Mb) gc trigger  (Mb) max used  (Mb)
Ncells 3348155 178.9    4975401 265.8  4975401 265.8
Vcells 5848296  44.7   22913832 174.9 28638927 218.5
Processing complete for: ../create_seurat_objects/out//SCPCS000010.rds 
Finished processing file: ../create_seurat_objects/out//SCPCS000010.rds
Processing file: ../create_seurat_objects/out//SCPCS000013.rds
Reading Seurat object from: ../create_seurat_objects/out//SCPCS000013.rds 
Running DoubletFinder on: ../create_seurat_objects/out//SCPCS000013.rds 
Normalizing layer: counts
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Finding variable features for layer counts
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Centering and scaling data matrix
  |                                                                              |                                                                      |   0%  |                                                                              |===================================                                   |  50%  |                                                                              |======================================================================| 100%
PC_ 1 
Positive:  ENSG00000130203, ENSG00000048052, ENSG00000090382, ENSG00000224916, ENSG00000234906, ENSG00000275302, ENSG00000277632, ENSG00000141293, ENSG00000184005, ENSG00000286618 
	   ENSG00000176771, ENSG00000004799, ENSG00000188001, ENSG00000165312, ENSG00000105697, ENSG00000152495, ENSG00000109321, ENSG00000162711, ENSG00000287124, ENSG00000236383 
	   ENSG00000168685, ENSG00000172673, ENSG00000198821, ENSG00000169245, ENSG00000115896, ENSG00000249001, ENSG00000138378, ENSG00000179639, ENSG00000250771, ENSG00000057294 
Negative:  ENSG00000168702, ENSG00000091129, ENSG00000067715, ENSG00000120885, ENSG00000196569, ENSG00000106278, ENSG00000187391, ENSG00000145934, ENSG00000151322, ENSG00000105894 
	   ENSG00000139174, ENSG00000133048, ENSG00000101955, ENSG00000169760, ENSG00000176204, ENSG00000114115, ENSG00000172020, ENSG00000080493, ENSG00000184226, ENSG00000242808 
	   ENSG00000131711, ENSG00000163453, ENSG00000122786, ENSG00000115461, ENSG00000134531, ENSG00000112902, ENSG00000046653, ENSG00000113140, ENSG00000185774, ENSG00000018408 
PC_ 2 
Positive:  ENSG00000118922, ENSG00000141293, ENSG00000198821, ENSG00000069667, ENSG00000275778, ENSG00000172673, ENSG00000138378, ENSG00000234663, ENSG00000284879, ENSG00000116824 
	   ENSG00000198846, ENSG00000145730, ENSG00000152495, ENSG00000100351, ENSG00000279168, ENSG00000204956, ENSG00000204406, ENSG00000178662, ENSG00000168685, ENSG00000172575 
	   ENSG00000134215, ENSG00000277734, ENSG00000104490, ENSG00000078596, ENSG00000090975, ENSG00000138795, ENSG00000083720, ENSG00000169442, ENSG00000163564, ENSG00000153250 
Negative:  ENSG00000160307, ENSG00000087250, ENSG00000114115, ENSG00000115461, ENSG00000172020, ENSG00000155368, ENSG00000109846, ENSG00000113140, ENSG00000105894, ENSG00000120885 
	   ENSG00000132688, ENSG00000125148, ENSG00000103260, ENSG00000188643, ENSG00000189171, ENSG00000166681, ENSG00000131711, ENSG00000163453, ENSG00000161281, ENSG00000169715 
	   ENSG00000110492, ENSG00000133048, ENSG00000046653, ENSG00000111640, ENSG00000159335, ENSG00000089220, ENSG00000145824, ENSG00000175183, ENSG00000132329, ENSG00000135404 
PC_ 3 
Positive:  ENSG00000130203, ENSG00000176771, ENSG00000118985, ENSG00000048052, ENSG00000118785, ENSG00000138448, ENSG00000249001, ENSG00000148180, ENSG00000106366, ENSG00000132669 
	   ENSG00000277632, ENSG00000224916, ENSG00000188001, ENSG00000229140, ENSG00000234906, ENSG00000151914, ENSG00000146555, ENSG00000236383, ENSG00000286618, ENSG00000215386 
	   ENSG00000069849, ENSG00000170396, ENSG00000156011, ENSG00000166444, ENSG00000004799, ENSG00000038382, ENSG00000287124, ENSG00000253496, ENSG00000100154, ENSG00000198108 
Negative:  ENSG00000141293, ENSG00000198821, ENSG00000172673, ENSG00000116824, ENSG00000138378, ENSG00000234663, ENSG00000152495, ENSG00000277734, ENSG00000118922, ENSG00000169442 
	   ENSG00000100351, ENSG00000168685, ENSG00000104490, ENSG00000198846, ENSG00000078596, ENSG00000271503, ENSG00000069667, ENSG00000145649, ENSG00000008517, ENSG00000211772 
	   ENSG00000099204, ENSG00000172575, ENSG00000163564, ENSG00000211751, ENSG00000163600, ENSG00000145730, ENSG00000117090, ENSG00000034053, ENSG00000123146, ENSG00000185885 
PC_ 4 
Positive:  ENSG00000150471, ENSG00000171094, ENSG00000185774, ENSG00000168702, ENSG00000112902, ENSG00000170500, ENSG00000156687, ENSG00000107104, ENSG00000151322, ENSG00000145934 
	   ENSG00000169760, ENSG00000205683, ENSG00000091129, ENSG00000182732, ENSG00000102271, ENSG00000242265, ENSG00000080493, ENSG00000113448, ENSG00000104369, ENSG00000083067 
	   ENSG00000089169, ENSG00000176204, ENSG00000196482, ENSG00000187391, ENSG00000133048, ENSG00000139174, ENSG00000158528, ENSG00000144847, ENSG00000182463, ENSG00000079156 
Negative:  ENSG00000085063, ENSG00000106333, ENSG00000189058, ENSG00000137868, ENSG00000149633, ENSG00000144810, ENSG00000163359, ENSG00000106538, ENSG00000167779, ENSG00000135919 
	   ENSG00000164694, ENSG00000176046, ENSG00000123610, ENSG00000179772, ENSG00000140937, ENSG00000128606, ENSG00000115457, ENSG00000108821, ENSG00000172986, ENSG00000244731 
	   ENSG00000168938, ENSG00000163520, ENSG00000106483, ENSG00000271447, ENSG00000170955, ENSG00000142173, ENSG00000011465, ENSG00000273259, ENSG00000111341, ENSG00000105472 
PC_ 5 
Positive:  ENSG00000048052, ENSG00000279168, ENSG00000038382, ENSG00000275778, ENSG00000236383, ENSG00000105810, ENSG00000069849, ENSG00000118985, ENSG00000128585, ENSG00000181722 
	   ENSG00000283563, ENSG00000008083, ENSG00000273269, ENSG00000151914, ENSG00000285547, ENSG00000090924, ENSG00000127603, ENSG00000106546, ENSG00000229140, ENSG00000162711 
	   ENSG00000138448, ENSG00000084676, ENSG00000105835, ENSG00000132669, ENSG00000070961, ENSG00000134352, ENSG00000180530, ENSG00000271425, ENSG00000188001, ENSG00000159216 
Negative:  ENSG00000144810, ENSG00000284337, ENSG00000178662, ENSG00000257207, ENSG00000140937, ENSG00000162687, ENSG00000162670, ENSG00000102466, ENSG00000149633, ENSG00000079102 
	   ENSG00000261115, ENSG00000019144, ENSG00000144366, ENSG00000084636, ENSG00000142408, ENSG00000106333, ENSG00000148143, ENSG00000127249, ENSG00000187546, ENSG00000244694 
	   ENSG00000137868, ENSG00000102359, ENSG00000204956, ENSG00000286163, ENSG00000149090, ENSG00000204262, ENSG00000163637, ENSG00000279983, ENSG00000123610, ENSG00000172379 
Warning: The default method for RunUMAP has changed from calling Python UMAP via reticulate to the R-native UWOT using the cosine metric
To use Python UMAP via reticulate, set umap.method to 'umap-learn' and metric to 'correlation'
This message will be shown once per session
18:16:22 UMAP embedding parameters a = 0.9922 b = 1.112
18:16:22 Read 4791 rows and found 21 numeric columns
18:16:22 Using Annoy for neighbor search, n_neighbors = 30
18:16:22 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
18:16:22 Writing NN index file to temp file /gpfs0/scratch/6189876/Rtmp9xBnQD/file1967826ab7041e
18:16:22 Searching Annoy index using 1 thread, search_k = 3000
18:16:24 Annoy recall = 100%
18:16:24 Commencing smooth kNN distance calibration using 1 thread with target n_neighbors = 30
18:16:24 Initializing from normalized Laplacian + noise (using RSpectra)
18:16:24 Commencing optimization for 500 epochs, with 207980 positive edges
Using method 'umap'
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
18:16:30 Optimization finished
Computing nearest neighbor graph
Computing SNN
Modularity Optimizer version 1.3.0 by Ludo Waltman and Nees Jan van Eck

Number of nodes: 4791
Number of edges: 177654

Running Louvain algorithm...
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Maximum modularity in 10 random starts: 0.9413
Number of communities: 6
Elapsed time: 0 seconds
Loading required package: fields
Loading required package: spam
Spam version 2.11-0 (2024-10-03) is loaded.
Type 'help( Spam)' or 'demo( spam)' for a short introduction 
and overview of this package.
Help for individual functions is also obtained by adding the
suffix '.spam' to the function name, e.g. 'help( chol.spam)'.

Attaching package: ‘spam’

The following objects are masked from ‘package:base’:

    backsolve, forwardsolve

Loading required package: viridisLite

Try help(fields) to get started.
Loading required package: parallel
[1] "Creating artificial doublets for pN = 5%"
[1] "Creating artificial doublets for pN = 10%"
[1] "Creating artificial doublets for pN = 15%"
[1] "Creating artificial doublets for pN = 20%"
[1] "Creating artificial doublets for pN = 25%"
[1] "Creating artificial doublets for pN = 30%"
[1] "Creating Seurat object..."
[1] "Creating Seurat object..."
[1] "Creating Seurat object..."
[1] "Creating Seurat object..."
[1] "Creating Seurat object..."
[1] "Creating Seurat object..."
[1] "Normalizing Seurat object..."
Normalizing layer: counts
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
[1] "Normalizing Seurat object..."
Normalizing layer: counts
Performing log-normalization
[1] "Normalizing Seurat object..."
Normalizing layer: counts
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
Performing log-normalization
****[1] "Normalizing Seurat object..."
Normalizing layer: counts
**0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
********************Performing log-normalization
*********************************[1]* "Normalizing Seurat object..."
Normalizing layer: counts
***|
****0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
*****************************Performing log-normalization
**********|
************0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
****************************************|
**************************************[1] "Normalizing Seurat object..."
Normalizing layer: counts
****|
[1] "Finding variable genes..."
Finding variable features for layer counts
Performing log-normalization
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
***********************************[1] "Finding variable genes..."
Finding variable features for layer counts
**************[1] "Finding variable genes..."
Finding variable features for layer counts
*|
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
[1] "Finding variable genes..."
Finding variable features for layer counts
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
[1] "Finding variable genes..."
Finding variable features for layer counts
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
Calculating feature variances of standardized and clipped values[----|----|----|----|----|----|----|----|----|----|

**************************************************|
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
[1] "Scaling data..."
Centering and scaling data matrix
  |                                                                              |                                                                      |   0%[1] "Finding variable genes..."
Finding variable features for layer counts
Calculating feature variances of standardized and clipped values
  |                                                                              |===================================                                   |  50%  |                                                                              |======================================================================| 100%
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
*********************************************Calculating feature variances of standardized and clipped values*
****|
[1]0%   10   20   30   40   50   60   70   80   90   100%
 "Running PCA..."[----|----|----|----|----|----|----|----|----|----|

********************Calculating gene variances*
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
******************************************************|
*************************|
[1] "Scaling data..."
Calculating feature variances of standardized and clipped values
Centering and scaling data matrix
  |                                                                              |                                                                      |   0%  |                                                                              |===================================                                   |  50%0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
********[1]* "Scaling data..."
**************************  |                                                                            *  |======================================================================| 100%
*************Centering and scaling data matrix
*|
  |                                                                              |                                                                      |   0%  |                                                                              |===================================                                   |  50%Calculating feature variances of standardized and clipped values
  |                                                                              |======================================================================| 100%
[1] "Running PCA..."
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
************[1]* "Scaling data..."
*************************************|
Centering and scaling data matrix
[1]  |                                                                             "Running PCA..."  |                                                                      |   0%
  |                                                                              |===================================                                   |  50%  |                                                                              |======================================================================| 100%
[1] "Scaling data..."
Centering and scaling data matrix
Calculating feature variances of standardized and clipped values
  |                                                                              |                                                                      |   0%[1] "Running PCA..."
  |                                                                              |===================================                                   |  50%0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
*************************************  |                                                                              |======================================================================| 100%*
************|
[1] "Running PCA..."
[1] "Scaling data..."
Centering and scaling data matrix
  |                                                                              |                                                                      |   0%[1] "Calculating PC distance matrix..."
  |                                                                              |===================================                                   |  50%  |                                                                              |======================================================================| 100%
[1] "Running PCA..."
[1] "Calculating PC distance matrix..."
[1] "Calculating PC distance matrix..."
[1] "Defining neighborhoods..."
[1] "Calculating PC distance matrix..."
[1] "Defining neighborhoods..."
[1] "Defining neighborhoods..."
[1] "Calculating PC distance matrix..."
[1] "Calculating PC distance matrix..."
[1] "Defining neighborhoods..."
[1] "Computing pANN across all pK..."
[1] "pK = 0.005..."
[1] "pK = 0.01..."
[1] "pK = 0.02..."
[1] "pK = 0.03..."
[1] "pK = 0.04..."
[1] "Defining neighborhoods..."
[1] "pK = 0.05..."
[1] "pK = 0.06..."
[1] "pK = 0.07..."
[1] "Computing pANN across all pK..."
[1] "pK = 0.005..."
[1] "pK = 0.08..."
[1] "pK = 0.01..."
[1] "pK = 0.09..."
[1] "Computing pANN across all pK..."
[1] "pK = 0.005..."
[1] "pK = 0.02..."
[1] "pK = 0.1..."
[1] "pK = 0.01..."
[1] "pK = 0.03..."
[1] "pK = 0.02..."
[1] "pK = 0.11..."
[1] "Defining neighborhoods..."
[1] "pK = 0.04..."
[1] "pK = 0.03..."
[1] "pK = 0.12..."
[1] "pK = 0.05..."
[1] "pK = 0.04..."
[1] "pK = 0.13..."
[1] "pK = 0.06..."
[1] "pK = 0.05..."
[1] "pK = 0.07..."
[1] "pK = 0.14..."
[1] "pK = 0.08..."
[1] "pK = 0.15..."
[1] "pK = 0.09..."
[1] "pK = 0.16..."
[1] "pK = 0.06..."
[1] "pK = 0.1..."
[1] "pK = 0.17..."
[1] "pK = 0.07..."
[1] "pK = 0.11..."
[1] "pK = 0.18..."
[1] "pK = 0.08..."
[1] "pK = 0.12..."
[1] "Computing pANN across all pK..."
[1] "pK = 0.005..."
[1] "pK = 0.19..."
[1] "pK = 0.09..."
[1] "pK = 0.13..."
[1] "pK = 0.01..."
[1] "pK = 0.1..."
[1] "pK = 0.2..."
[1] "pK = 0.14..."
[1] "pK = 0.02..."
[1] "pK = 0.11..."
[1] "pK = 0.21..."
[1] "pK = 0.03..."
[1] "pK = 0.15..."
[1] "pK = 0.04..."
[1] "pK = 0.12..."
[1] "pK = 0.22..."
[1] "pK = 0.16..."
[1] "pK = 0.13..."
[1] "pK = 0.05..."
[1] "pK = 0.23..."
[1] "pK = 0.17..."
[1] "pK = 0.06..."
[1] "pK = 0.14..."
[1] "pK = 0.24..."
[1] "pK = 0.07..."
[1] "pK = 0.18..."
[1] "Computing pANN across all pK..."
[1] "pK = 0.005..."
[1] "pK = 0.15..."
[1] "pK = 0.08..."
[1] "pK = 0.19..."
[1] "pK = 0.25..."
[1] "pK = 0.01..."
[1] "pK = 0.16..."
[1] "pK = 0.09..."
[1] "pK = 0.26..."
[1] "pK = 0.02..."
[1] "pK = 0.2..."
[1] "pK = 0.1..."
[1] "pK = 0.17..."
[1] "pK = 0.03..."
[1] "pK = 0.21..."
[1] "pK = 0.27..."
[1] "pK = 0.04..."
[1] "pK = 0.18..."
[1] "pK = 0.11..."
[1] "pK = 0.22..."
[1] "pK = 0.28..."
[1] "pK = 0.05..."
[1] "pK = 0.12..."
[1] "pK = 0.19..."
[1] "pK = 0.06..."
[1] "pK = 0.29..."
[1] "pK = 0.13..."
[1] "pK = 0.23..."
[1] "pK = 0.2..."
[1] "pK = 0.07..."
[1] "Computing pANN across all pK..."
[1] "pK = 0.005..."
[1] "pK = 0.24..."
[1] "pK = 0.3..."
[1] "pK = 0.14..."
[1] "pK = 0.21..."
[1] "pK = 0.08..."
[1] "pK = 0.01..."
[1][1] "pK = 0.25..."
 "pK = 0.15..."
[1] "pK = 0.09..."
[1] "pK = 0.22..."
[1] "pK = 0.02..."
[1] "pK = 0.16..."
[1] "pK = 0.1..."
[1] "pK = 0.03..."
[1] "pK = 0.26..."
[1] "pK = 0.23..."
[1] "pK = 0.04..."
[1] "pK = 0.11..."
[1] "pK = 0.17..."
[1] "pK = 0.27..."
[1] "pK = 0.24..."
[1] "pK = 0.05..."
[1] "pK = 0.12..."
[1] "pK = 0.18..."
[1] "pK = 0.28..."
[1] "pK = 0.06..."
[1] "pK = 0.25..."
[1] "pK = 0.13..."
[1] "pK = 0.19..."
[1] "pK = 0.07..."
[1] "pK = 0.26..."
[1] "pK = 0.29..."
[1] "pK = 0.14..."
[1] "pK = 0.08..."
[1] "pK = 0.2..."
[1] "pK = 0.3..."
[1] "pK = 0.15..."
[1] "pK = 0.09..."
[1] "pK = 0.27..."
[1] "pK = 0.21..."
[1] "pK = 0.16..."
[1] "pK = 0.1..."
[1] "pK = 0.28..."
[1] "pK = 0.22..."
[1] "pK = 0.11..."
[1] "pK = 0.17..."
[1] "pK = 0.29..."
[1] "pK = 0.12..."
[1] "pK = 0.23..."
[1] "pK = 0.18..."
[1] "pK = 0.3..."
[1] "pK = 0.13..."
[1] "pK = 0.24..."
[1] "pK = 0.19..."
[1] "pK = 0.14..."
[1] "pK = 0.25..."
[1] "pK = 0.2..."
[1] "pK = 0.15..."
[1] "pK = 0.21..."
[1] "pK = 0.26..."
[1] "pK = 0.16..."
[1] "pK = 0.22..."
[1] "pK = 0.27..."
[1] "pK = 0.17..."
[1] "pK = 0.28..."
[1] "pK = 0.23..."
[1] "pK = 0.18..."
[1] "pK = 0.24..."
[1] "pK = 0.19..."
[1] "pK = 0.29..."
[1] "pK = 0.25..."
[1] "pK = 0.3..."
[1] "pK = 0.2..."
[1] "pK = 0.21..."
[1] "pK = 0.26..."
[1] "pK = 0.22..."
[1] "pK = 0.27..."
[1] "pK = 0.28..."
[1] "pK = 0.23..."
[1] "pK = 0.24..."
[1] "pK = 0.29..."
[1] "pK = 0.25..."
[1] "pK = 0.3..."
[1] "pK = 0.26..."
[1] "pK = 0.27..."
[1] "pK = 0.28..."
[1] "pK = 0.29..."
[1] "pK = 0.3..."
Loading required package: KernSmooth
KernSmooth 2.23 loaded
Copyright M. P. Wand 1997-2009
Loading required package: ROCR
NULL
[1] "Creating 1597 artificial doublets..."
[1] "Creating Seurat object..."
[1] "Normalizing Seurat object..."
Normalizing layer: counts
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
[1] "Finding variable genes..."
Finding variable features for layer counts
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
[1] "Scaling data..."
Centering and scaling data matrix
  |                                                                              |                                                                      |   0%  |                                                                              |===================================                                   |  50%  |                                                                              |======================================================================| 100%
[1] "Running PCA..."
[1] "Calculating PC distance matrix..."
[1] "Computing pANN..."
[1] "Classifying doublets.."
Saving processed Seurat object to: ./out//SCPCS000013_doubletfinder.rds 
          used  (Mb) gc trigger   (Mb)  max used   (Mb)
Ncells 3348585 178.9    4975401  265.8   4975401  265.8
Vcells 5848707  44.7  145125355 1107.3 181406316 1384.1
Processing complete for: ../create_seurat_objects/out//SCPCS000013.rds 
Finished processing file: ../create_seurat_objects/out//SCPCS000013.rds
Processing file: ../create_seurat_objects/out//SCPCS000014.rds
Reading Seurat object from: ../create_seurat_objects/out//SCPCS000014.rds 
Running DoubletFinder on: ../create_seurat_objects/out//SCPCS000014.rds 
Normalizing layer: counts
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Finding variable features for layer counts
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Centering and scaling data matrix
  |                                                                              |                                                                      |   0%  |                                                                              |===================================                                   |  50%  |                                                                              |======================================================================| 100%
PC_ 1 
Positive:  ENSG00000091129, ENSG00000189337, ENSG00000227036, ENSG00000150471, ENSG00000276386, ENSG00000107186, ENSG00000112319, ENSG00000183580, ENSG00000151322, ENSG00000041982 
	   ENSG00000154529, ENSG00000187079, ENSG00000104067, ENSG00000137693, ENSG00000198929, ENSG00000155816, ENSG00000163697, ENSG00000140937, ENSG00000187391, ENSG00000188153 
	   ENSG00000133687, ENSG00000163531, ENSG00000165323, ENSG00000121440, ENSG00000135862, ENSG00000197261, ENSG00000168702, ENSG00000107249, ENSG00000105855, ENSG00000132470 
Negative:  ENSG00000234663, ENSG00000277734, ENSG00000145649, ENSG00000113088, ENSG00000078596, ENSG00000152495, ENSG00000211772, ENSG00000008517, ENSG00000232855, ENSG00000271503 
	   ENSG00000223865, ENSG00000151150, ENSG00000227507, ENSG00000105374, ENSG00000168685, ENSG00000211751, ENSG00000117090, ENSG00000185885, ENSG00000172543, ENSG00000100450 
	   ENSG00000163600, ENSG00000111728, ENSG00000121858, ENSG00000157601, ENSG00000099204, ENSG00000153898, ENSG00000004468, ENSG00000173762, ENSG00000178562, ENSG00000107742 
PC_ 2 
Positive:  ENSG00000277734, ENSG00000234663, ENSG00000145649, ENSG00000078596, ENSG00000008517, ENSG00000069667, ENSG00000099204, ENSG00000152495, ENSG00000211772, ENSG00000113088 
	   ENSG00000107742, ENSG00000148516, ENSG00000232855, ENSG00000271503, ENSG00000104490, ENSG00000211751, ENSG00000105374, ENSG00000227507, ENSG00000117090, ENSG00000145247 
	   ENSG00000172543, ENSG00000163600, ENSG00000173762, ENSG00000111728, ENSG00000185885, ENSG00000107485, ENSG00000175779, ENSG00000178562, ENSG00000100450, ENSG00000153563 
Negative:  ENSG00000128512, ENSG00000163694, ENSG00000079215, ENSG00000137491, ENSG00000273112, ENSG00000082397, ENSG00000153208, ENSG00000170458, ENSG00000204103, ENSG00000135678 
	   ENSG00000087253, ENSG00000231131, ENSG00000166068, ENSG00000110079, ENSG00000173372, ENSG00000170017, ENSG00000166927, ENSG00000018280, ENSG00000125730, ENSG00000196730 
	   ENSG00000173369, ENSG00000120708, ENSG00000137393, ENSG00000260314, ENSG00000157107, ENSG00000157827, ENSG00000159189, ENSG00000175471, ENSG00000170873, ENSG00000106066 
PC_ 3 
Positive:  ENSG00000168702, ENSG00000187391, ENSG00000041515, ENSG00000151322, ENSG00000179242, ENSG00000278996, ENSG00000112902, ENSG00000183580, ENSG00000078295, ENSG00000136002 
	   ENSG00000150625, ENSG00000095637, ENSG00000184226, ENSG00000276386, ENSG00000288546, ENSG00000107249, ENSG00000137872, ENSG00000110693, ENSG00000198929, ENSG00000164199 
	   ENSG00000106714, ENSG00000182667, ENSG00000155816, ENSG00000258631, ENSG00000118432, ENSG00000136928, ENSG00000155511, ENSG00000107186, ENSG00000196353, ENSG00000224897 
Negative:  ENSG00000131747, ENSG00000148773, ENSG00000066279, ENSG00000163808, ENSG00000075218, ENSG00000237649, ENSG00000088325, ENSG00000137804, ENSG00000139734, ENSG00000171848 
	   ENSG00000109805, ENSG00000118193, ENSG00000138160, ENSG00000178999, ENSG00000134690, ENSG00000137812, ENSG00000170312, ENSG00000112742, ENSG00000117724, ENSG00000198901 
	   ENSG00000090889, ENSG00000011426, ENSG00000186185, ENSG00000145386, ENSG00000126787, ENSG00000156970, ENSG00000138778, ENSG00000165304, ENSG00000122966, ENSG00000142945 
PC_ 4 
Positive:  ENSG00000008394, ENSG00000154096, ENSG00000133048, ENSG00000105974, ENSG00000057019, ENSG00000197956, ENSG00000147889, ENSG00000110492, ENSG00000006327, ENSG00000185567 
	   ENSG00000188643, ENSG00000256802, ENSG00000166741, ENSG00000197261, ENSG00000074410, ENSG00000135919, ENSG00000102359, ENSG00000106366, ENSG00000143545, ENSG00000122786 
	   ENSG00000165474, ENSG00000125266, ENSG00000114115, ENSG00000141837, ENSG00000115594, ENSG00000115380, ENSG00000101955, ENSG00000164932, ENSG00000078098, ENSG00000085733 
Negative:  ENSG00000110436, ENSG00000163873, ENSG00000185008, ENSG00000147588, ENSG00000106278, ENSG00000171885, ENSG00000125820, ENSG00000120251, ENSG00000155511, ENSG00000164197 
	   ENSG00000215018, ENSG00000140538, ENSG00000204442, ENSG00000287704, ENSG00000153902, ENSG00000165443, ENSG00000165379, ENSG00000184905, ENSG00000197977, ENSG00000164199 
	   ENSG00000150625, ENSG00000224957, ENSG00000125462, ENSG00000182175, ENSG00000176204, ENSG00000266964, ENSG00000187068, ENSG00000110693, ENSG00000118432, ENSG00000179915 
PC_ 5 
Positive:  ENSG00000105894, ENSG00000189171, ENSG00000114115, ENSG00000102109, ENSG00000110492, ENSG00000164434, ENSG00000166681, ENSG00000137285, ENSG00000103260, ENSG00000188643 
	   ENSG00000117519, ENSG00000132688, ENSG00000143545, ENSG00000120885, ENSG00000087250, ENSG00000164929, ENSG00000142089, ENSG00000125462, ENSG00000131981, ENSG00000174938 
	   ENSG00000100097, ENSG00000122786, ENSG00000106278, ENSG00000166165, ENSG00000172020, ENSG00000240972, ENSG00000113140, ENSG00000100427, ENSG00000131711, ENSG00000147889 
Negative:  ENSG00000159216, ENSG00000141449, ENSG00000133687, ENSG00000185420, ENSG00000197555, ENSG00000177425, ENSG00000158321, ENSG00000236816, ENSG00000078114, ENSG00000163697 
	   ENSG00000165323, ENSG00000158470, ENSG00000146555, ENSG00000286156, ENSG00000141837, ENSG00000140937, ENSG00000152936, ENSG00000134138, ENSG00000148090, ENSG00000143786 
	   ENSG00000197261, ENSG00000240498, ENSG00000248202, ENSG00000165995, ENSG00000112319, ENSG00000249740, ENSG00000187210, ENSG00000140443, ENSG00000105976, ENSG00000100629 
Warning: The default method for RunUMAP has changed from calling Python UMAP via reticulate to the R-native UWOT using the cosine metric
To use Python UMAP via reticulate, set umap.method to 'umap-learn' and metric to 'correlation'
This message will be shown once per session
18:17:09 UMAP embedding parameters a = 0.9922 b = 1.112
18:17:09 Read 989 rows and found 13 numeric columns
18:17:09 Using Annoy for neighbor search, n_neighbors = 30
18:17:09 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
18:17:09 Writing NN index file to temp file /gpfs0/scratch/6189876/RtmpB42v7U/file1968d03893fe6f
18:17:09 Searching Annoy index using 1 thread, search_k = 3000
18:17:10 Annoy recall = 100%
18:17:10 Commencing smooth kNN distance calibration using 1 thread with target n_neighbors = 30
18:17:10 Initializing from normalized Laplacian + noise (using RSpectra)
18:17:10 Commencing optimization for 500 epochs, with 36506 positive edges
Using method 'umap'
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
18:17:11 Optimization finished
Computing nearest neighbor graph
Computing SNN
Modularity Optimizer version 1.3.0 by Ludo Waltman and Nees Jan van Eck

Number of nodes: 989
Number of edges: 28604

Running Louvain algorithm...
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Maximum modularity in 10 random starts: 0.9551
Number of communities: 3
Elapsed time: 0 seconds
Loading required package: fields
Loading required package: spam
Spam version 2.11-0 (2024-10-03) is loaded.
Type 'help( Spam)' or 'demo( spam)' for a short introduction 
and overview of this package.
Help for individual functions is also obtained by adding the
suffix '.spam' to the function name, e.g. 'help( chol.spam)'.

Attaching package: ‘spam’

The following objects are masked from ‘package:base’:

    backsolve, forwardsolve

Loading required package: viridisLite

Try help(fields) to get started.
Loading required package: parallel
[1] "Creating artificial doublets for pN = 5%"
[1] "Creating artificial doublets for pN = 10%"
[1] "Creating artificial doublets for pN = 15%"
[1] "Creating artificial doublets for pN = 20%"
[1] "Creating artificial doublets for pN = 25%"
[1] "Creating artificial doublets for pN = 30%"
[1] "Creating Seurat object..."
[1] "Creating Seurat object..."
[1] "Creating Seurat object..."
[1] "Creating Seurat object..."
[1] "Creating Seurat object..."
[1] "Creating Seurat object..."
[1] "Normalizing Seurat object..."
Normalizing layer: counts
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
[1] "Normalizing Seurat object..."
Normalizing layer: counts
*******Performing log-normalization
***[1] "Normalizing Seurat object..."
Normalizing layer: counts
******0%   10   20   30   40   50   60   70   80   90   100%
*[----|----|----|----|----|----|----|----|----|----|
*******Performing log-normalization
********************************0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
*****|
****************************************************************|
*************************|
[1] "Normalizing Seurat object..."
Normalizing layer: counts
Performing log-normalization
[1] "Normalizing Seurat object..."
Normalizing layer: counts
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
Performing log-normalization
********0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
*************************************************************************|
*******************|
[1] "Normalizing Seurat object..."
Normalizing layer: counts
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
*********[1] "Finding variable genes..."
Finding variable features for layer counts
**********************************[1] "Finding variable genes..."
*Finding variable features for layer counts
*Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
********************************|
***********************|
[1] "Finding variable genes..."
Finding variable features for layer counts
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
[1] "Finding variable genes..."
Finding variable features for layer counts
[1] "Finding variable genes..."
Finding variable features for layer counts
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************Calculating feature variances of standardized and clipped values*
***********|
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
*************************************[1]* "Finding variable genes..."
*Finding variable features for layer counts
***********|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
***[1]* "Scaling data..."
****************************************Centering and scaling data matrix
***  |                                                                              |                                                                      |   0%***|
  |                                                                              |===================================                                   |  50%  |                                                                              |======================================================================| 100%
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
***********[1]* "Scaling data..."
*********[1]* "Running PCA..."
********************Centering and scaling data matrix
***  |                                                                              |                                                                      |   0%*****|
  |                                                                              |===================================                                   |  50%  |                                                                              |======================================================================| 100%
[1] "Scaling data..."
Centering and scaling data matrix
  |                                                                            [1]  |                                                                      |   0% "Running PCA..."
  |                                                                              |===================================                                   |  50%  |                                                                              |======================================================================| 100%
Calculating feature variances of standardized and clipped values
[1] "Calculating PC distance matrix..."
[1] "Running PCA..."
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
*****************************Calculating feature variances of standardized and clipped values*
********************|
[1] "Calculating PC distance matrix..."
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
[1] "Calculating PC distance matrix..."
[1] "Defining neighborhoods..."
[1] "Scaling data..."
Centering and scaling data matrix
  |                                                                              |                                                                      |   0%  |                                                                              |===================================                                   |  50%  |                                                                              |======================================================================| 100%
[1] "Scaling data..."
[1] "Computing pANN across all pK..."
[1] "pK = 0.01..."
[1] "pK = 0.02..."
[1] "pK = 0.03..."
Centering and scaling data matrix
[1] "pK = 0.04..."  |                                                                            
  |                                                                      |   0%[1] "Running PCA..."
[1] "Defining neighborhoods..."
[1] "pK = 0.05..."
  |                                                                              |===================================                                   |  50%[1] "pK = 0.06..."
[1] "pK = 0.07..."
  |                                                                              |======================================================================| 100%
[1] "pK = 0.08..."
[1] "pK = 0.09..."
[1] "pK = 0.1..."
Calculating feature variances of standardized and clipped values
[1] "Computing pANN across all pK..."
[1] "pK = 0.01..."
[1] "pK = 0.11..."
[1] "Running PCA..."
[1] "pK = 0.02..."
[1] "pK = 0.12..."
[1] "Defining neighborhoods..."
[1] "pK = 0.03..."
[1] "pK = 0.13..."
[1] "pK = 0.04..."
[1] "pK = 0.05..."
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**[1] "pK = 0.14..."*
**[1]* "pK = 0.06..."
*********[1]* "pK = 0.15..."
**[1]* "pK = 0.07..."
**********[1] "pK = 0.16..."*
*[1] "pK = 0.08..."*
***********[1] "pK = 0.17..."*
[1]* "pK = 0.09..."
***[1] "Computing pANN across all pK..."*
[1]* "pK = 0.01..."|

[1][1] "pK = 0.18..."
 "pK = 0.1..."
[1] "pK = 0.02..."
[1][1] "pK = 0.11..."
 "pK = 0.19..."
[1] "pK = 0.03..."
[1] "pK = 0.04..."[1] "pK = 0.12..."[1]

 "pK = 0.2..."
[1] "Calculating PC distance matrix..."
[1] "pK = 0.05..."
[1] "pK = 0.13..."
[1] "pK = 0.21..."
[1] "pK = 0.06..."
[1] "pK = 0.22..."
[1] "pK = 0.07..."
[1] "pK = 0.14..."
[1] "pK = 0.23..."
[1] "pK = 0.08..."
[1] "pK = 0.15..."
[1] "pK = 0.24..."
[1] "pK = 0.09..."
[1] "pK = 0.16..."
[1] "pK = 0.25..."
[1] "pK = 0.1..."
[1] "pK = 0.17..."
[1] "pK = 0.26..."
[1] "pK = 0.11..."
[1] "pK = 0.18..."
[1] "pK = 0.27..."
[1][1] "pK = 0.12..."
 "Calculating PC distance matrix..."
[1] "pK = 0.19..."
[1] "pK = 0.13..."
[1] "pK = 0.2..."
[1] "pK = 0.28..."
[1] "Scaling data..."
[1] "pK = 0.21..."
[1] "pK = 0.14..."
[1] "pK = 0.29..."
[1] "pK = 0.22..."
[1] "pK = 0.15..."
[1] "pK = 0.3..."
[1] "pK = 0.23..."
[1]Centering and scaling data matrix
 "pK = 0.16..."
  |                                                                              |                                                                      |   0%[1] "pK = 0.24..."
[1] "pK = 0.17..."
  |                                                                              |===================================                                   |  50%[1] "pK = 0.25..."
[1] "pK = 0.18..."
  |                                                                            [1]  |======================================================================| 100% "pK = 0.26..."

[1] "pK = 0.19..."
[1] "pK = 0.27..."
[1] "pK = 0.2..."
[1] "pK = 0.21..."
[1][1] "pK = 0.28..."
 "Defining neighborhoods..."
[1] "pK = 0.22..."
[1] "Running PCA..."
[1] "pK = 0.29..."
[1] "pK = 0.23..."
[1][1] "pK = 0.3..."
 "pK = 0.24..."
[1] "pK = 0.25..."
[1] "pK = 0.26..."
[1] "pK = 0.27..."
[1] "Computing pANN across all pK..."
[1] "pK = 0.01..."
[1] "pK = 0.02..."
[1] "Defining neighborhoods..."
[1] "pK = 0.28..."
[1] "pK = 0.03..."
[1] "pK = 0.04..."
[1] "pK = 0.29..."
[1] "pK = 0.05..."
[1] "pK = 0.3..."
[1] "pK = 0.06..."
[1] "pK = 0.07..."
[1] "pK = 0.08..."
[1] "pK = 0.09..."
[1] "Computing pANN across all pK..."
[1] "pK = 0.01..."
[1] "pK = 0.1..."
[1] "pK = 0.02..."
[1] "pK = 0.11..."
[1] "pK = 0.03..."
[1] "pK = 0.04..."[1]
 "pK = 0.12..."
[1] "pK = 0.05..."
[1] "pK = 0.13..."
[1] "pK = 0.06..."
[1] "Calculating PC distance matrix..."
[1] "pK = 0.07..."
[1] "pK = 0.14..."
[1] "pK = 0.08..."
[1] "pK = 0.15..."
[1] "pK = 0.09..."
[1] "pK = 0.16..."
[1] "pK = 0.1..."
[1] "pK = 0.17..."
[1] "pK = 0.11..."
[1] "pK = 0.18..."
[1] "pK = 0.12..."
[1] "pK = 0.19..."
[1] "pK = 0.13..."
[1] "pK = 0.2..."
[1] "pK = 0.21..."
[1] "pK = 0.14..."
[1] "pK = 0.22..."
[1] "pK = 0.15..."
[1] "pK = 0.23..."
[1] "pK = 0.16..."
[1] "pK = 0.24..."
[1] "pK = 0.17..."
[1] "pK = 0.25..."
[1] "pK = 0.18..."
[1] "pK = 0.26..."
[1] "pK = 0.19..."
[1] "pK = 0.27..."
[1] "pK = 0.2..."
[1] "pK = 0.21..."
[1] "pK = 0.28..."
[1] "pK = 0.22..."
[1] "pK = 0.29..."
[1] "pK = 0.23..."
[1][1] "pK = 0.3..."
[1] "pK = 0.24..."
 "Defining neighborhoods..."
[1] "pK = 0.25..."
[1] "pK = 0.26..."
[1] "pK = 0.27..."
[1] "pK = 0.28..."
[1] "Computing pANN across all pK..."
[1] "pK = 0.01..."
[1] "pK = 0.29..."
[1] "pK = 0.02..."
[1] "pK = 0.3..."
[1] "pK = 0.03..."
[1] "pK = 0.04..."
[1] "pK = 0.05..."
[1] "pK = 0.06..."
[1] "pK = 0.07..."
[1] "pK = 0.08..."
[1] "pK = 0.09..."
[1] "pK = 0.1..."
[1] "pK = 0.11..."
[1] "pK = 0.12..."
[1] "pK = 0.13..."
[1] "pK = 0.14..."
[1] "pK = 0.15..."
[1] "pK = 0.16..."
[1] "pK = 0.17..."
[1] "pK = 0.18..."
[1] "pK = 0.19..."
[1] "pK = 0.2..."
[1] "pK = 0.21..."
[1] "pK = 0.22..."
[1] "pK = 0.23..."
[1] "pK = 0.24..."
[1] "pK = 0.25..."
[1] "pK = 0.26..."
[1] "pK = 0.27..."
[1] "pK = 0.28..."
[1] "pK = 0.29..."
[1] "pK = 0.3..."
Loading required package: KernSmooth
KernSmooth 2.23 loaded
Copyright M. P. Wand 1997-2009
Loading required package: ROCR
NULL
[1] "Creating 330 artificial doublets..."
[1] "Creating Seurat object..."
[1] "Normalizing Seurat object..."
Normalizing layer: counts
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
[1] "Finding variable genes..."
Finding variable features for layer counts
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
[1] "Scaling data..."
Centering and scaling data matrix
  |                                                                              |                                                                      |   0%  |                                                                              |===================================                                   |  50%  |                                                                              |======================================================================| 100%
[1] "Running PCA..."
[1] "Calculating PC distance matrix..."
[1] "Computing pANN..."
[1] "Classifying doublets.."
Saving processed Seurat object to: ./out//SCPCS000014_doubletfinder.rds 
          used  (Mb) gc trigger  (Mb) max used  (Mb)
Ncells 3348422 178.9    4975401 265.8  4975401 265.8
Vcells 5848540  44.7   69155583 527.7 86444286 659.6
Processing complete for: ../create_seurat_objects/out//SCPCS000014.rds 
Finished processing file: ../create_seurat_objects/out//SCPCS000014.rds
Processing file: ../create_seurat_objects/out//SCPCS000015.rds
Reading Seurat object from: ../create_seurat_objects/out//SCPCS000015.rds 
Running DoubletFinder on: ../create_seurat_objects/out//SCPCS000015.rds 
Normalizing layer: counts
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Finding variable features for layer counts
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Centering and scaling data matrix
  |                                                                              |                                                                      |   0%  |                                                                              |===================================                                   |  50%  |                                                                              |======================================================================| 100%
PC_ 1 
Positive:  ENSG00000176204, ENSG00000181722, ENSG00000283563, ENSG00000184672, ENSG00000067798, ENSG00000112232, ENSG00000120594, ENSG00000275778, ENSG00000185760, ENSG00000116117 
	   ENSG00000284762, ENSG00000245832, ENSG00000152894, ENSG00000170579, ENSG00000255794, ENSG00000178568, ENSG00000276418, ENSG00000185008, ENSG00000185565, ENSG00000144749 
	   ENSG00000197584, ENSG00000275163, ENSG00000271860, ENSG00000185774, ENSG00000204442, ENSG00000175161, ENSG00000249307, ENSG00000136267, ENSG00000284989, ENSG00000100234 
Negative:  ENSG00000211677, ENSG00000197971, ENSG00000231873, ENSG00000168314, ENSG00000169203, ENSG00000197061, ENSG00000182968, ENSG00000230852, ENSG00000258922, ENSG00000166862 
	   ENSG00000256977, ENSG00000243319, ENSG00000284652, ENSG00000187094, ENSG00000186891, ENSG00000260983, ENSG00000269837, ENSG00000234902, ENSG00000143184, ENSG00000133101 
	   ENSG00000258785, ENSG00000270055, ENSG00000230645, ENSG00000257470, ENSG00000253159, ENSG00000163673, ENSG00000260896, ENSG00000228127, ENSG00000042304, ENSG00000270240 
PC_ 2 
Positive:  ENSG00000175161, ENSG00000185565, ENSG00000178568, ENSG00000144278, ENSG00000169760, ENSG00000110693, ENSG00000176204, ENSG00000114279, ENSG00000242808, ENSG00000184672 
	   ENSG00000112232, ENSG00000197584, ENSG00000245832, ENSG00000275163, ENSG00000170579, ENSG00000111962, ENSG00000171587, ENSG00000185774, ENSG00000174469, ENSG00000078328 
	   ENSG00000152894, ENSG00000283154, ENSG00000258081, ENSG00000204442, ENSG00000258399, ENSG00000183098, ENSG00000136267, ENSG00000185760, ENSG00000196277, ENSG00000231934 
Negative:  ENSG00000107099, ENSG00000122862, ENSG00000077420, ENSG00000081237, ENSG00000082074, ENSG00000168918, ENSG00000141506, ENSG00000075884, ENSG00000027075, ENSG00000185811 
	   ENSG00000204592, ENSG00000198879, ENSG00000145819, ENSG00000163513, ENSG00000134516, ENSG00000143119, ENSG00000051523, ENSG00000155307, ENSG00000162511, ENSG00000067066 
	   ENSG00000019582, ENSG00000164674, ENSG00000111348, ENSG00000160255, ENSG00000142347, ENSG00000151702, ENSG00000129667, ENSG00000110848, ENSG00000043462, ENSG00000141293 
PC_ 3 
Positive:  ENSG00000171885, ENSG00000152661, ENSG00000163453, ENSG00000130203, ENSG00000249307, ENSG00000244731, ENSG00000136928, ENSG00000224389, ENSG00000131386, ENSG00000122547 
	   ENSG00000172201, ENSG00000143603, ENSG00000135744, ENSG00000185008, ENSG00000188596, ENSG00000146122, ENSG00000117318, ENSG00000183722, ENSG00000168843, ENSG00000107317 
	   ENSG00000234377, ENSG00000100979, ENSG00000120885, ENSG00000076716, ENSG00000183454, ENSG00000162692, ENSG00000068078, ENSG00000287704, ENSG00000026025, ENSG00000182050 
Negative:  ENSG00000283403, ENSG00000131747, ENSG00000121621, ENSG00000171848, ENSG00000109674, ENSG00000035499, ENSG00000165304, ENSG00000148773, ENSG00000139734, ENSG00000165244 
	   ENSG00000136492, ENSG00000137812, ENSG00000138778, ENSG00000183850, ENSG00000156802, ENSG00000066279, ENSG00000051341, ENSG00000184661, ENSG00000075218, ENSG00000088325 
	   ENSG00000182481, ENSG00000174469, ENSG00000123219, ENSG00000227598, ENSG00000178878, ENSG00000133119, ENSG00000114346, ENSG00000118193, ENSG00000254788, ENSG00000186185 
PC_ 4 
Positive:  ENSG00000146192, ENSG00000131401, ENSG00000042980, ENSG00000125730, ENSG00000137491, ENSG00000198223, ENSG00000137462, ENSG00000118785, ENSG00000151726, ENSG00000248905 
	   ENSG00000087253, ENSG00000154237, ENSG00000166428, ENSG00000018280, ENSG00000182578, ENSG00000171860, ENSG00000090376, ENSG00000163694, ENSG00000165025, ENSG00000119535 
	   ENSG00000167601, ENSG00000112149, ENSG00000150782, ENSG00000171051, ENSG00000059377, ENSG00000285162, ENSG00000140678, ENSG00000173391, ENSG00000095970, ENSG00000184156 
Negative:  ENSG00000141293, ENSG00000198821, ENSG00000165929, ENSG00000153283, ENSG00000113263, ENSG00000138378, ENSG00000020633, ENSG00000161405, ENSG00000026508, ENSG00000115165 
	   ENSG00000163564, ENSG00000135048, ENSG00000134242, ENSG00000124203, ENSG00000271503, ENSG00000162739, ENSG00000027075, ENSG00000101695, ENSG00000105374, ENSG00000110848 
	   ENSG00000179144, ENSG00000234663, ENSG00000118503, ENSG00000115232, ENSG00000008517, ENSG00000168421, ENSG00000117091, ENSG00000081237, ENSG00000112297, ENSG00000111913 
PC_ 5 
Positive:  ENSG00000131747, ENSG00000123416, ENSG00000175063, ENSG00000164104, ENSG00000129195, ENSG00000066279, ENSG00000117724, ENSG00000088325, ENSG00000170540, ENSG00000198830 
	   ENSG00000148773, ENSG00000143933, ENSG00000170312, ENSG00000137804, ENSG00000075218, ENSG00000197061, ENSG00000196230, ENSG00000164032, ENSG00000123975, ENSG00000138778 
	   ENSG00000166851, ENSG00000188486, ENSG00000240972, ENSG00000170296, ENSG00000111716, ENSG00000176340, ENSG00000113810, ENSG00000109255, ENSG00000184661, ENSG00000114346 
Negative:  ENSG00000171587, ENSG00000144278, ENSG00000111962, ENSG00000114279, ENSG00000275163, ENSG00000169760, ENSG00000197584, ENSG00000174469, ENSG00000185774, ENSG00000175161 
	   ENSG00000237238, ENSG00000231934, ENSG00000196277, ENSG00000110693, ENSG00000178568, ENSG00000185565, ENSG00000229425, ENSG00000170579, ENSG00000245832, ENSG00000283154 
	   ENSG00000229140, ENSG00000276128, ENSG00000258081, ENSG00000181722, ENSG00000204442, ENSG00000198838, ENSG00000258399, ENSG00000176204, ENSG00000184672, ENSG00000112232 
Warning: The default method for RunUMAP has changed from calling Python UMAP via reticulate to the R-native UWOT using the cosine metric
To use Python UMAP via reticulate, set umap.method to 'umap-learn' and metric to 'correlation'
This message will be shown once per session
18:17:35 UMAP embedding parameters a = 0.9922 b = 1.112
18:17:35 Read 2124 rows and found 12 numeric columns
18:17:35 Using Annoy for neighbor search, n_neighbors = 30
18:17:35 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
18:17:35 Writing NN index file to temp file /gpfs0/scratch/6189876/RtmpPTce0G/file196a0347a8cea1
18:17:35 Searching Annoy index using 1 thread, search_k = 3000
18:17:36 Annoy recall = 100%
18:17:36 Commencing smooth kNN distance calibration using 1 thread with target n_neighbors = 30
18:17:36 Initializing from normalized Laplacian + noise (using RSpectra)
18:17:36 Commencing optimization for 500 epochs, with 87480 positive edges
Using method 'umap'
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
18:17:39 Optimization finished
Computing nearest neighbor graph
Computing SNN
Modularity Optimizer version 1.3.0 by Ludo Waltman and Nees Jan van Eck

Number of nodes: 2124
Number of edges: 70301

Running Louvain algorithm...
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Maximum modularity in 10 random starts: 0.9379
Number of communities: 5
Elapsed time: 0 seconds
Loading required package: fields
Loading required package: spam
Spam version 2.11-0 (2024-10-03) is loaded.
Type 'help( Spam)' or 'demo( spam)' for a short introduction 
and overview of this package.
Help for individual functions is also obtained by adding the
suffix '.spam' to the function name, e.g. 'help( chol.spam)'.

Attaching package: ‘spam’

The following objects are masked from ‘package:base’:

    backsolve, forwardsolve

Loading required package: viridisLite

Try help(fields) to get started.
Loading required package: parallel
[1] "Creating artificial doublets for pN = 5%"
[1] "Creating artificial doublets for pN = 10%"
[1] "Creating artificial doublets for pN = 15%"
[1] "Creating artificial doublets for pN = 20%"
[1] "Creating artificial doublets for pN = 25%"
[1] "Creating artificial doublets for pN = 30%"
[1] "Creating Seurat object..."
[1] "Creating Seurat object..."
[1] "Creating Seurat object..."
[1] "Creating Seurat object..."
[1] "Creating Seurat object..."
[1] "Creating Seurat object..."
[1] "Normalizing Seurat object..."
Normalizing layer: counts
Performing log-normalization
[1] "Normalizing Seurat object..."
Normalizing layer: counts
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
***Performing log-normalization
***[1] "Normalizing Seurat object..."
Normalizing layer: counts
***0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
*****Performing log-normalization
*******************************************0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**|
****************************************************|
***************************************|
[1] "Normalizing Seurat object..."
Normalizing layer: counts
Performing log-normalization
[1] "Normalizing Seurat object..."
Normalizing layer: counts
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
*****Performing log-normalization
***********0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
******************************************|
***********************************[1]* "Normalizing Seurat object..."
Normalizing layer: counts
******|
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
*[1]* "Finding variable genes..."
Finding variable features for layer counts
****************************[1]* "Finding variable genes..."*
**Finding variable features for layer counts
*****Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**********************************************************|
***|
[1] "Finding variable genes..."
Finding variable features for layer counts
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
[1] "Finding variable genes..."
Finding variable features for layer counts
[1] "Finding variable genes..."
Finding variable features for layer counts
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**********************************************0%   10   20   30   40   50   60   70   80   90   100%
*[----|----|----|----|----|----|----|----|----|----|
******|
***********************************************|
Calculating feature variances of standardized and clipped values
[1] "Finding variable genes..."
Finding variable features for layer counts
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
[1] "Scaling data..."
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
*******************Centering and scaling data matrix
***  |                                                                            *  |                                                                      |   0%*******************  |                                                                              |===================================                                   |  50%********|
  |                                                                              |======================================================================| 100%
[1] "Scaling data..."
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
************************Centering and scaling data matrix
***  |                                                                              |                                                                      |   0%*****[1]* "Running PCA..."
*************  |                                                                              |===================================                                   |  50%****|
  |                                                                              |======================================================================| 100%
[1] "Scaling data..."
Centering and scaling data matrix
[1] "Running PCA..."
  |                                                                              |                                                                      |   0%  |                                                                              |===================================                                   |  50%  |                                                                              |======================================================================| 100%
Calculating feature variances of standardized and clipped values
[1] "Running PCA..."
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
[1] "Calculating PC distance matrix..."
Calculating feature variances of standardized and clipped values
[1] "Calculating PC distance matrix..."
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
*[1]* "Scaling data..."
*************************************Centering and scaling data matrix
***********|
  |                                                                              |                                                                      |   0%  |                                                                              |===================================                                   |  50%  |                                                                              |======================================================================| 100%
[1] "Defining neighborhoods..."
[1] "Calculating PC distance matrix..."
[1] "Running PCA..."
[1] "Scaling data..."
Calculating feature variances of standardized and clipped values
[1] "Defining neighborhoods..."
Centering and scaling data matrix
  |                                                                              |                                                                      |   0%  |                                                                              |===================================                                   |  50%  |                                                                              |======================================================================| 100%
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
*************[1]* "Computing pANN across all pK..."
[1] "pK = 0.005..."*
*****************[1]* "pK = 0.01..."
***********[1] "Defining neighborhoods..."
******|
[1] "pK = 0.02..."
[1] "Running PCA..."
[1] "pK = 0.03..."
[1] "pK = 0.04..."
[1] "pK = 0.05..."
[1] "Computing pANN across all pK..."
[1] "pK = 0.005..."
[1] "pK = 0.06..."
[1] "pK = 0.01..."
[1] "pK = 0.07..."
[1] "Calculating PC distance matrix..."
[1] "pK = 0.02..."
[1] "Scaling data..."
[1] "pK = 0.08..."
[1] "pK = 0.03..."
[1] "pK = 0.09..."
[1] "pK = 0.04..."Centering and scaling data matrix

[1] "pK = 0.1..."
  |                                                                              |                                                                      |   0%[1] "pK = 0.11..."
[1] "pK = 0.05..."
  |                                                                              |===================================                                   |  50%[1] "Computing pANN across all pK..."
[1] "pK = 0.005..."
[1] "pK = 0.06..."
  |                                                                              |======================================================================| 100%
[1] "pK = 0.12..."
[1] "pK = 0.01..."
[1] "pK = 0.07..."
[1][1] "pK = 0.02..." "pK = 0.13..."

[1] "pK = 0.08..."
[1] "pK = 0.03..."
[1] "pK = 0.14..."
[1] "pK = 0.09..."
[1] "Running PCA..."
[1] "pK = 0.04..."
[1] "pK = 0.15..."
[1] "pK = 0.1..."
[1] "pK = 0.05..."
[1] "pK = 0.16..."
[1] "pK = 0.11..."
[1] "pK = 0.06..."
[1] "pK = 0.17..."
[1] "Defining neighborhoods..."
[1] "Calculating PC distance matrix..."
[1][1] "pK = 0.12..." "pK = 0.07..."

[1] "pK = 0.08..."
[1][1] "pK = 0.18..." "pK = 0.13..."

[1] "pK = 0.09..."
[1] "pK = 0.14..."
[1] "pK = 0.19..."
[1] "pK = 0.1..."
[1] "pK = 0.15..."
[1] "pK = 0.2..."
[1] "pK = 0.11..."
[1] "pK = 0.16..."
[1] "pK = 0.21..."
[1] "pK = 0.17..."
[1] "pK = 0.22..."
[1] "pK = 0.12..."
[1] "pK = 0.23..."
[1] "pK = 0.13..."
[1] "pK = 0.18..."
[1] "pK = 0.14..."
[1] "pK = 0.24..."
[1] "pK = 0.19..."
[1] "pK = 0.15..."
[1] "pK = 0.2..."
[1] "pK = 0.25..."
[1] "pK = 0.16..."
[1] "pK = 0.21..."
[1] "Computing pANN across all pK..."
[1] "pK = 0.005..."
[1] "pK = 0.26..."
[1] "Defining neighborhoods..."
[1] "pK = 0.17..."
[1] "pK = 0.22..."
[1] "pK = 0.01..."
[1] "pK = 0.27..."
[1] "pK = 0.02..."
[1] "Calculating PC distance matrix..."
[1] "pK = 0.23..."
[1] "pK = 0.18..."
[1] "pK = 0.28..."
[1] "pK = 0.03..."
[1] "pK = 0.24..."
[1] "pK = 0.19..."
[1] "pK = 0.04..."
[1] "pK = 0.29..."
[1] "pK = 0.2..."
[1][1] "pK = 0.05..."
[1] "pK = 0.3..." "pK = 0.25..."

[1] "pK = 0.21..."
[1] "pK = 0.06..."
[1] "pK = 0.26..."
[1][1] "pK = 0.22..." "pK = 0.07..."

[1] "pK = 0.27..."
[1] "pK = 0.08..."
[1] "pK = 0.23..."
[1] "pK = 0.28..."
[1] "pK = 0.09..."
[1] "pK = 0.24..."
[1] "pK = 0.29..."
[1] "pK = 0.1..."
[1] "pK = 0.11..."
[1] "pK = 0.3..."
[1] "pK = 0.25..."
[1] "Computing pANN across all pK..."
[1] "pK = 0.005..."
[1] "pK = 0.12..."
[1] "pK = 0.26..."
[1] "pK = 0.01..."
[1] "pK = 0.13..."
[1][1] "pK = 0.27..."
[1] "pK = 0.02..." "Defining neighborhoods..."

[1] "pK = 0.14..."
[1] "pK = 0.03..."
[1] "pK = 0.28..."
[1] "pK = 0.15..."
[1] "pK = 0.04..."
[1] "pK = 0.29..."
[1] "pK = 0.16..."
[1] "pK = 0.05..."
[1] "pK = 0.3..."
[1] "pK = 0.17..."
[1] "pK = 0.06..."
[1] "pK = 0.07..."
[1] "pK = 0.18..."
[1] "pK = 0.08..."
[1] "pK = 0.19..."
[1] "pK = 0.09..."
[1] "pK = 0.2..."
[1] "pK = 0.1..."
[1] "pK = 0.21..."
[1] "pK = 0.11..."
[1] "pK = 0.22..."
[1] "pK = 0.12..."
[1] "pK = 0.23..."
[1] "pK = 0.13..."
[1] "Computing pANN across all pK..."
[1] "pK = 0.005..."
[1] "pK = 0.01..."
[1] "pK = 0.14..."
[1] "pK = 0.24..."
[1] "pK = 0.02..."
[1] "pK = 0.15..."
[1] "pK = 0.03..."
[1] "pK = 0.25..."
[1] "pK = 0.16..."
[1] "pK = 0.04..."
[1] "pK = 0.26..."
[1] "pK = 0.17..."
[1] "pK = 0.05..."
[1] "pK = 0.27..."
[1][1] "pK = 0.06..." "pK = 0.18..."

[1] "pK = 0.28..."
[1] "pK = 0.07..."
[1] "pK = 0.19..."
[1] "pK = 0.08..."
[1] "pK = 0.29..."
[1] "pK = 0.2..."
[1] "pK = 0.09..."
[1] "pK = 0.3..."
[1] "pK = 0.21..."
[1] "pK = 0.1..."
[1] "pK = 0.22..."
[1] "pK = 0.11..."
[1] "pK = 0.23..."
[1] "pK = 0.12..."
[1] "pK = 0.24..."
[1] "pK = 0.13..."
[1][1] "pK = 0.25..." "pK = 0.14..."

[1] "pK = 0.15..."
[1] "pK = 0.26..."
[1] "pK = 0.16..."
[1] "pK = 0.27..."
[1] "pK = 0.17..."
[1] "pK = 0.28..."
[1] "pK = 0.18..."
[1] "pK = 0.29..."
[1] "pK = 0.19..."
[1] "pK = 0.3..."
[1] "pK = 0.2..."
[1] "pK = 0.21..."
[1] "pK = 0.22..."
[1] "pK = 0.23..."
[1] "pK = 0.24..."
[1] "pK = 0.25..."
[1] "pK = 0.26..."
[1] "pK = 0.27..."
[1] "pK = 0.28..."
[1] "pK = 0.29..."
[1] "pK = 0.3..."
Loading required package: KernSmooth
KernSmooth 2.23 loaded
Copyright M. P. Wand 1997-2009
Loading required package: ROCR
NULL
[1] "Creating 708 artificial doublets..."
[1] "Creating Seurat object..."
[1] "Normalizing Seurat object..."
Normalizing layer: counts
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
[1] "Finding variable genes..."
Finding variable features for layer counts
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
[1] "Scaling data..."
Centering and scaling data matrix
  |                                                                              |                                                                      |   0%  |                                                                              |===================================                                   |  50%  |                                                                              |======================================================================| 100%
[1] "Running PCA..."
[1] "Calculating PC distance matrix..."
[1] "Computing pANN..."
[1] "Classifying doublets.."
Saving processed Seurat object to: ./out//SCPCS000015_doubletfinder.rds 
          used  (Mb) gc trigger  (Mb)  max used   (Mb)
Ncells 3348585 178.9    4975401 265.8   4975401  265.8
Vcells 5848711  44.7  130295128 994.1 160863551 1227.3
Processing complete for: ../create_seurat_objects/out//SCPCS000015.rds 
Finished processing file: ../create_seurat_objects/out//SCPCS000015.rds
Processing file: ../create_seurat_objects/out//SCPCS000017.rds
Reading Seurat object from: ../create_seurat_objects/out//SCPCS000017.rds 
Running DoubletFinder on: ../create_seurat_objects/out//SCPCS000017.rds 
Normalizing layer: counts
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Finding variable features for layer counts
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Centering and scaling data matrix
  |                                                                              |                                                                      |   0%  |                                                                              |===================================                                   |  50%  |                                                                              |======================================================================| 100%
PC_ 1 
Positive:  ENSG00000171877, ENSG00000151474, ENSG00000116147, ENSG00000144868, ENSG00000175161, ENSG00000114541, ENSG00000065320, ENSG00000152128, ENSG00000171587, ENSG00000136205 
	   ENSG00000144283, ENSG00000148737, ENSG00000169851, ENSG00000102290, ENSG00000182667, ENSG00000185736, ENSG00000151490, ENSG00000079819, ENSG00000144847, ENSG00000116117 
	   ENSG00000070214, ENSG00000154928, ENSG00000262223, ENSG00000123104, ENSG00000163531, ENSG00000128512, ENSG00000120162, ENSG00000153956, ENSG00000286364, ENSG00000082684 
Negative:  ENSG00000081237, ENSG00000141293, ENSG00000185811, ENSG00000198821, ENSG00000075884, ENSG00000027075, ENSG00000134516, ENSG00000168918, ENSG00000111913, ENSG00000141506 
	   ENSG00000067066, ENSG00000198286, ENSG00000140563, ENSG00000107099, ENSG00000182162, ENSG00000138378, ENSG00000077420, ENSG00000152818, ENSG00000115165, ENSG00000164674 
	   ENSG00000051523, ENSG00000020633, ENSG00000163564, ENSG00000113263, ENSG00000142347, ENSG00000198771, ENSG00000026508, ENSG00000164483, ENSG00000168421, ENSG00000110934 
PC_ 2 
Positive:  ENSG00000154217, ENSG00000134215, ENSG00000112182, ENSG00000144218, ENSG00000152818, ENSG00000101096, ENSG00000145703, ENSG00000075884, ENSG00000145819, ENSG00000145349 
	   ENSG00000185811, ENSG00000135048, ENSG00000081237, ENSG00000188641, ENSG00000169946, ENSG00000136250, ENSG00000141293, ENSG00000111913, ENSG00000153956, ENSG00000175048 
	   ENSG00000171587, ENSG00000027075, ENSG00000146592, ENSG00000185736, ENSG00000245532, ENSG00000170396, ENSG00000081320, ENSG00000198821, ENSG00000141506, ENSG00000254087 
Negative:  ENSG00000175130, ENSG00000117450, ENSG00000140319, ENSG00000240972, ENSG00000112695, ENSG00000198258, ENSG00000167552, ENSG00000277443, ENSG00000140264, ENSG00000123560 
	   ENSG00000090266, ENSG00000170315, ENSG00000164405, ENSG00000164106, ENSG00000173786, ENSG00000186010, ENSG00000075624, ENSG00000005022, ENSG00000243449, ENSG00000189043 
	   ENSG00000084207, ENSG00000107317, ENSG00000155368, ENSG00000241468, ENSG00000068903, ENSG00000088986, ENSG00000161939, ENSG00000111775, ENSG00000111716, ENSG00000154723 
PC_ 3 
Positive:  ENSG00000185811, ENSG00000081237, ENSG00000075884, ENSG00000141293, ENSG00000198821, ENSG00000111913, ENSG00000152818, ENSG00000141506, ENSG00000115165, ENSG00000027075 
	   ENSG00000107099, ENSG00000082074, ENSG00000122862, ENSG00000140563, ENSG00000138378, ENSG00000113263, ENSG00000110934, ENSG00000067066, ENSG00000026508, ENSG00000164483 
	   ENSG00000112297, ENSG00000134516, ENSG00000164674, ENSG00000077420, ENSG00000168918, ENSG00000143119, ENSG00000134539, ENSG00000020633, ENSG00000198286, ENSG00000081320 
Negative:  ENSG00000169946, ENSG00000144366, ENSG00000146592, ENSG00000170396, ENSG00000104368, ENSG00000171587, ENSG00000230490, ENSG00000184156, ENSG00000153707, ENSG00000131016 
	   ENSG00000233611, ENSG00000178568, ENSG00000244128, ENSG00000153956, ENSG00000275163, ENSG00000176204, ENSG00000133401, ENSG00000179603, ENSG00000170485, ENSG00000149948 
	   ENSG00000175048, ENSG00000107295, ENSG00000182667, ENSG00000101638, ENSG00000266846, ENSG00000278254, ENSG00000253553, ENSG00000260971, ENSG00000229140, ENSG00000197584 
PC_ 4 
Positive:  ENSG00000088325, ENSG00000117724, ENSG00000171848, ENSG00000137804, ENSG00000143228, ENSG00000168078, ENSG00000131747, ENSG00000109805, ENSG00000080986, ENSG00000198901 
	   ENSG00000066279, ENSG00000139734, ENSG00000148773, ENSG00000164104, ENSG00000092853, ENSG00000137807, ENSG00000109255, ENSG00000169679, ENSG00000163808, ENSG00000165304 
	   ENSG00000090889, ENSG00000089685, ENSG00000113810, ENSG00000138778, ENSG00000118193, ENSG00000075218, ENSG00000156802, ENSG00000137812, ENSG00000171320, ENSG00000136492 
Negative:  ENSG00000164619, ENSG00000120907, ENSG00000253807, ENSG00000082684, ENSG00000101445, ENSG00000116117, ENSG00000286364, ENSG00000163531, ENSG00000164303, ENSG00000243902 
	   ENSG00000170745, ENSG00000262223, ENSG00000261786, ENSG00000285837, ENSG00000075651, ENSG00000064787, ENSG00000149451, ENSG00000148541, ENSG00000139116, ENSG00000144868 
	   ENSG00000162105, ENSG00000196187, ENSG00000124920, ENSG00000232044, ENSG00000144283, ENSG00000155886, ENSG00000134376, ENSG00000120162, ENSG00000130158, ENSG00000214402 
PC_ 5 
Positive:  ENSG00000172020, ENSG00000134531, ENSG00000198838, ENSG00000041982, ENSG00000106772, ENSG00000128564, ENSG00000145349, ENSG00000245532, ENSG00000104368, ENSG00000133083 
	   ENSG00000120885, ENSG00000264015, ENSG00000221866, ENSG00000123094, ENSG00000173077, ENSG00000136002, ENSG00000128016, ENSG00000169855, ENSG00000112715, ENSG00000115461 
	   ENSG00000163288, ENSG00000182732, ENSG00000112773, ENSG00000135744, ENSG00000152910, ENSG00000163638, ENSG00000170485, ENSG00000075223, ENSG00000146592, ENSG00000144749 
Negative:  ENSG00000143228, ENSG00000171848, ENSG00000139734, ENSG00000109805, ENSG00000187951, ENSG00000080986, ENSG00000066279, ENSG00000183856, ENSG00000088325, ENSG00000117724 
	   ENSG00000198901, ENSG00000165304, ENSG00000137812, ENSG00000142945, ENSG00000075218, ENSG00000090889, ENSG00000131747, ENSG00000169679, ENSG00000137804, ENSG00000068489 
	   ENSG00000163808, ENSG00000158402, ENSG00000138778, ENSG00000178999, ENSG00000168078, ENSG00000148773, ENSG00000051341, ENSG00000137807, ENSG00000267374, ENSG00000161800 
Warning: The default method for RunUMAP has changed from calling Python UMAP via reticulate to the R-native UWOT using the cosine metric
To use Python UMAP via reticulate, set umap.method to 'umap-learn' and metric to 'correlation'
This message will be shown once per session
18:18:10 UMAP embedding parameters a = 0.9922 b = 1.112
18:18:10 Read 1098 rows and found 11 numeric columns
18:18:10 Using Annoy for neighbor search, n_neighbors = 30
18:18:10 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
18:18:10 Writing NN index file to temp file /gpfs0/scratch/6189876/RtmpHZzBH3/file196b5d620805f7
18:18:10 Searching Annoy index using 1 thread, search_k = 3000
18:18:10 Annoy recall = 100%
18:18:10 Commencing smooth kNN distance calibration using 1 thread with target n_neighbors = 30
18:18:11 Initializing from normalized Laplacian + noise (using RSpectra)
18:18:11 Commencing optimization for 500 epochs, with 41160 positive edges
Using method 'umap'
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
18:18:12 Optimization finished
Computing nearest neighbor graph
Computing SNN
Modularity Optimizer version 1.3.0 by Ludo Waltman and Nees Jan van Eck

Number of nodes: 1098
Number of edges: 32719

Running Louvain algorithm...
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Maximum modularity in 10 random starts: 0.9413
Number of communities: 4
Elapsed time: 0 seconds
Loading required package: fields
Loading required package: spam
Spam version 2.11-0 (2024-10-03) is loaded.
Type 'help( Spam)' or 'demo( spam)' for a short introduction 
and overview of this package.
Help for individual functions is also obtained by adding the
suffix '.spam' to the function name, e.g. 'help( chol.spam)'.

Attaching package: ‘spam’

The following objects are masked from ‘package:base’:

    backsolve, forwardsolve

Loading required package: viridisLite

Try help(fields) to get started.
Loading required package: parallel
[1] "Creating artificial doublets for pN = 5%"
[1] "Creating artificial doublets for pN = 10%"
[1] "Creating artificial doublets for pN = 15%"
[1] "Creating artificial doublets for pN = 20%"
[1] "Creating artificial doublets for pN = 25%"
[1] "Creating artificial doublets for pN = 30%"
[1] "Creating Seurat object..."
[1] "Creating Seurat object..."
[1] "Creating Seurat object..."
[1] "Creating Seurat object..."
[1] "Creating Seurat object..."
[1] "Normalizing Seurat object..."
Normalizing layer: counts
Performing log-normalization
[1] "Normalizing Seurat object..."
Normalizing layer: counts
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
****Performing log-normalization
*********0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
***********************************************|
**[1] "Creating Seurat object..."*
*************************************|
[1] "Normalizing Seurat object..."
Normalizing layer: counts
Performing log-normalization
[1] "Normalizing Seurat object..."
Normalizing layer: counts
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
Performing log-normalization
*******[1] "Normalizing Seurat object..."
0%   10   20   30   40   50   60   70   80   90   100%
Normalizing layer: counts
[----|----|----|----|----|----|----|----|----|----|
*****************Performing log-normalization
**************************************0%   10   20   30   40   50   60   70   80   90   100%
*[----|----|----|----|----|----|----|----|----|----|
*******|
*****************************************|
***************************************|
[1] "Normalizing Seurat object..."
Normalizing layer: counts
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
*******[1] "Finding variable genes..."
Finding variable features for layer counts
*********************************[1] "Finding variable genes..."
*Finding variable features for layer counts
**Calculating gene variances*
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
*********************************************|
***********|
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
[1] "Finding variable genes..."
Finding variable features for layer counts
[1] "Finding variable genes..."
Finding variable features for layer counts
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
[1] "Finding variable genes..."
Finding variable features for layer counts
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
[1] "Finding variable genes..."
Finding variable features for layer counts
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
[1] "Scaling data..."
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
******************Centering and scaling data matrix
***  |                                                                            *  |                                                                      |   0%********************  |                                                                            *  |===================================                                   |  50%*******|
  |                                                                              |======================================================================| 100%
[1] "Scaling data..."
Centering and scaling data matrix
  |                                                                              |                                                                      |   0%[1] "Running PCA..."
  |                                                                              |===================================                                   |  50%  |                                                                              |======================================================================| 100%
Calculating feature variances of standardized and clipped values
[1] "Running PCA..."
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**********************************************Calculating feature variances of standardized and clipped values*
***|
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
[1] "Calculating PC distance matrix..."
Calculating feature variances of standardized and clipped values
[1] "Scaling data..."
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
*********************[1]* "Calculating PC distance matrix..."
*********Centering and scaling data matrix
****  |                                                                            *  |                                                                      |   0%**************|
  |                                                                              |===================================                                   |  50%  |                                                                              |======================================================================| 100%
[1] "Scaling data..."
Centering and scaling data matrix
  |                                                                              |                                                                      |   0%[1] "Running PCA..."
  |                                                                              |===================================                                   |  50%  |                                                                              |======================================================================| 100%
[1] "Defining neighborhoods..."
[1] "Scaling data..."
[1] "Running PCA..."
Centering and scaling data matrix
  |                                                                              |                                                                      |   0%  |                                                                              |===================================                                   |  50%[1] "Computing pANN across all pK..."
[1] "pK = 0.01..."
[1]  |                                                                             "pK = 0.02..."  |======================================================================| 100%[1]

 "Defining neighborhoods..."
Calculating feature variances of standardized and clipped values
[1] "pK = 0.03..."
[1] "pK = 0.04..."
[1] "pK = 0.05..."
[1] "pK = 0.06..."
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
*[1]* "Running PCA..."
*********[1] "pK = 0.07..."*
**********[1] "Calculating PC distance matrix..."*
*******[1] "pK = 0.08..."*
***********[1]* "Computing pANN across all pK..."
*[1] "pK = 0.01..."*
*****|
[1] "pK = 0.09..."
[1] "pK = 0.02..."
[1] "pK = 0.1..."
[1] "pK = 0.03..."
[1] "pK = 0.11..."
[1] "pK = 0.04..."
[1] "pK = 0.05..."
[1] "pK = 0.12..."
[1] "pK = 0.06..."
[1] "Calculating PC distance matrix..."
[1] "pK = 0.13..."
[1] "pK = 0.07..."
[1] "pK = 0.14..."
[1] "pK = 0.08..."
[1][1] "pK = 0.15..." "pK = 0.09..."

[1][1] "pK = 0.16..." "pK = 0.1..."

[1] "pK = 0.17..."
[1] "pK = 0.11..."
[1] "pK = 0.18..."
[1] "Scaling data..."
[1] "pK = 0.12..."
[1] "pK = 0.19..."
[1] "pK = 0.13..."
[1] "pK = 0.2..."
Centering and scaling data matrix
  |                                                                              |                                                                      |   0%[1] "pK = 0.14..."
[1] "pK = 0.21..."
  |                                                                              |===================================                                   |  50%[1] "pK = 0.15..."
[1] "pK = 0.22..."
[1] "Calculating PC distance matrix..."
[1] "Defining neighborhoods..."
[1] "pK = 0.23..."
  |                                                                              |======================================================================| 100%
[1] "pK = 0.16..."
[1] "pK = 0.24..."
[1] "pK = 0.17..."
[1] "pK = 0.18..."
[1] "pK = 0.25..."
[1] "pK = 0.19..."
[1] "Running PCA..."
[1][1] "pK = 0.26..." "pK = 0.2..."

[1][1] "pK = 0.27..." "pK = 0.21..."

[1][1] "Defining neighborhoods..." "Computing pANN across all pK..."

[1] "pK = 0.01..."
[1][1] "pK = 0.28..." "pK = 0.22..."

[1] "pK = 0.02..."
[1][1] "pK = 0.29..." "pK = 0.23..."

[1] "pK = 0.03..."
[1] "pK = 0.3..."
[1] "pK = 0.24..."
[1] "pK = 0.04..."
[1] "pK = 0.05..."
[1][1] "pK = 0.25..." "pK = 0.06..."

[1] "pK = 0.07..."
[1] "pK = 0.26..."
[1][1] "Computing pANN across all pK..." "pK = 0.08..."

[1] "pK = 0.01..."
[1] "pK = 0.27..."
[1] "pK = 0.02..."
[1] "pK = 0.09..."
[1] "pK = 0.28..."
[1] "pK = 0.03..."
[1] "pK = 0.1..."
[1] "pK = 0.29..."
[1] "pK = 0.04..."
[1] "pK = 0.11..."
[1][1][1] "Defining neighborhoods..." "pK = 0.3..." "pK = 0.05..."


[1][1] "pK = 0.06..." "pK = 0.12..."

[1] "pK = 0.07..."
[1] "pK = 0.13..."
[1] "pK = 0.08..."
[1] "pK = 0.14..."
[1] "pK = 0.09..."
[1] "pK = 0.15..."
[1] "pK = 0.1..."
[1] "Calculating PC distance matrix..."
[1] "pK = 0.16..."
[1] "pK = 0.11..."
[1] "pK = 0.17..."
[1] "Computing pANN across all pK..."
[1] "pK = 0.01..."
[1] "pK = 0.18..."
[1] "pK = 0.02..."
[1] "pK = 0.12..."
[1] "pK = 0.19..."
[1] "pK = 0.03..."
[1] "pK = 0.13..."
[1] "pK = 0.2..."
[1] "pK = 0.04..."
[1] "pK = 0.14..."
[1] "pK = 0.21..."
[1] "pK = 0.05..."
[1] "pK = 0.15..."
[1] "pK = 0.22..."
[1] "pK = 0.06..."
[1] "pK = 0.16..."
[1] "pK = 0.07..."
[1] "pK = 0.23..."
[1] "pK = 0.17..."
[1] "pK = 0.08..."
[1] "pK = 0.24..."
[1] "pK = 0.18..."
[1] "pK = 0.09..."
[1] "pK = 0.19..."
[1] "pK = 0.1..."
[1] "pK = 0.25..."
[1] "pK = 0.2..."
[1] "pK = 0.11..."
[1] "pK = 0.26..."
[1] "pK = 0.21..."
[1] "pK = 0.27..."
[1] "pK = 0.12..."
[1] "pK = 0.22..."
[1] "pK = 0.28..."
[1] "pK = 0.13..."
[1] "pK = 0.23..."
[1] "pK = 0.29..."
[1] "pK = 0.14..."
[1] "pK = 0.24..."
[1][1] "pK = 0.3..." "pK = 0.15..."

[1] "Defining neighborhoods..."
[1] "pK = 0.16..."
[1] "pK = 0.25..."
[1] "pK = 0.17..."
[1] "pK = 0.26..."
[1] "pK = 0.18..."
[1] "pK = 0.27..."
[1] "pK = 0.19..."
[1] "pK = 0.28..."
[1] "pK = 0.2..."
[1] "pK = 0.29..."
[1] "pK = 0.21..."
[1] "pK = 0.3..."
[1][1] "pK = 0.22..." "Computing pANN across all pK..."

[1] "pK = 0.01..."
[1] "pK = 0.02..."
[1] "pK = 0.23..."
[1] "pK = 0.03..."
[1] "pK = 0.24..."
[1] "pK = 0.04..."
[1] "pK = 0.05..."
[1][1] "pK = 0.06..." "pK = 0.25..."

[1] "pK = 0.07..."
[1] "pK = 0.26..."
[1] "pK = 0.08..."
[1] "pK = 0.27..."
[1] "pK = 0.09..."
[1] "pK = 0.28..."
[1] "pK = 0.1..."
[1] "pK = 0.29..."
[1] "pK = 0.11..."
[1] "pK = 0.3..."
[1] "pK = 0.12..."
[1] "pK = 0.13..."
[1] "pK = 0.14..."
[1] "pK = 0.15..."
[1] "pK = 0.16..."
[1] "pK = 0.17..."
[1] "pK = 0.18..."
[1] "pK = 0.19..."
[1] "pK = 0.2..."
[1] "pK = 0.21..."
[1] "pK = 0.22..."
[1] "pK = 0.23..."
[1] "pK = 0.24..."
[1] "pK = 0.25..."
[1] "pK = 0.26..."
[1] "pK = 0.27..."
[1] "pK = 0.28..."
[1] "pK = 0.29..."
[1] "pK = 0.3..."
Loading required package: KernSmooth
KernSmooth 2.23 loaded
Copyright M. P. Wand 1997-2009
Loading required package: ROCR
NULL
[1] "Creating 366 artificial doublets..."
[1] "Creating Seurat object..."
[1] "Normalizing Seurat object..."
Normalizing layer: counts
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
[1] "Finding variable genes..."
Finding variable features for layer counts
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
[1] "Scaling data..."
Centering and scaling data matrix
  |                                                                              |                                                                      |   0%  |                                                                              |===================================                                   |  50%  |                                                                              |======================================================================| 100%
[1] "Running PCA..."
[1] "Calculating PC distance matrix..."
[1] "Computing pANN..."
[1] "Classifying doublets.."
Saving processed Seurat object to: ./out//SCPCS000017_doubletfinder.rds 
          used  (Mb) gc trigger  (Mb) max used  (Mb)
Ncells 3348440 178.9    4975401 265.8  4975401 265.8
Vcells 5848562  44.7   73311166 559.4 91627800 699.1
Processing complete for: ../create_seurat_objects/out//SCPCS000017.rds 
Finished processing file: ../create_seurat_objects/out//SCPCS000017.rds
Processing file: ../create_seurat_objects/out//SCPCS000018.rds
Reading Seurat object from: ../create_seurat_objects/out//SCPCS000018.rds 
Running DoubletFinder on: ../create_seurat_objects/out//SCPCS000018.rds 
Normalizing layer: counts
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Finding variable features for layer counts
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Centering and scaling data matrix
  |                                                                              |                                                                      |   0%  |                                                                              |===================================                                   |  50%  |                                                                              |======================================================================| 100%
Error in irlba(A = t(x = object), nv = npcs, ...) : 
  max(nu, nv) must be strictly less than min(nrow(A), ncol(A))
Calls: callDoubletFinder ... RunPCA.StdAssay -> RunPCA -> RunPCA.default -> irlba
Execution halted
Finished processing file: ../create_seurat_objects/out//SCPCS000018.rds
Processing file: ../create_seurat_objects/out//SCPCS000019.rds
Reading Seurat object from: ../create_seurat_objects/out//SCPCS000019.rds 
Running DoubletFinder on: ../create_seurat_objects/out//SCPCS000019.rds 
Normalizing layer: counts
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Finding variable features for layer counts
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Centering and scaling data matrix
  |                                                                              |                                                                      |   0%  |                                                                              |===================================                                   |  50%  |                                                                              |======================================================================| 100%
PC_ 1 
Positive:  ENSG00000169760, ENSG00000189337, ENSG00000242808, ENSG00000110693, ENSG00000187416, ENSG00000078328, ENSG00000185736, ENSG00000156475, ENSG00000152208, ENSG00000125148 
	   ENSG00000250302, ENSG00000175161, ENSG00000187323, ENSG00000171877, ENSG00000182667, ENSG00000178568, ENSG00000197959, ENSG00000150275, ENSG00000148948, ENSG00000183715 
	   ENSG00000120885, ENSG00000170579, ENSG00000196090, ENSG00000156103, ENSG00000018236, ENSG00000175497, ENSG00000170624, ENSG00000185942, ENSG00000144278, ENSG00000165995 
Negative:  ENSG00000122862, ENSG00000120594, ENSG00000059377, ENSG00000077420, ENSG00000019582, ENSG00000051523, ENSG00000198879, ENSG00000172243, ENSG00000107099, ENSG00000198223 
	   ENSG00000162511, ENSG00000170458, ENSG00000163694, ENSG00000248905, ENSG00000177575, ENSG00000081237, ENSG00000137462, ENSG00000163131, ENSG00000082074, ENSG00000087253 
	   ENSG00000114013, ENSG00000171860, ENSG00000139132, ENSG00000204287, ENSG00000155307, ENSG00000254087, ENSG00000143119, ENSG00000182578, ENSG00000196782, ENSG00000165168 
PC_ 2 
Positive:  ENSG00000087086, ENSG00000205542, ENSG00000125148, ENSG00000026025, ENSG00000175063, ENSG00000123416, ENSG00000130600, ENSG00000160213, ENSG00000100097, ENSG00000164611 
	   ENSG00000250302, ENSG00000181449, ENSG00000125144, ENSG00000008517, ENSG00000198851, ENSG00000089685, ENSG00000145649, ENSG00000141293, ENSG00000167286, ENSG00000130208 
	   ENSG00000116824, ENSG00000211751, ENSG00000163220, ENSG00000160654, ENSG00000211772, ENSG00000108106, ENSG00000188060, ENSG00000164687, ENSG00000277734, ENSG00000172673 
Negative:  ENSG00000169760, ENSG00000189337, ENSG00000184178, ENSG00000162946, ENSG00000078328, ENSG00000152208, ENSG00000185736, ENSG00000148948, ENSG00000187323, ENSG00000187416 
	   ENSG00000171587, ENSG00000110693, ENSG00000170624, ENSG00000178568, ENSG00000182667, ENSG00000165995, ENSG00000175497, ENSG00000150275, ENSG00000245532, ENSG00000170579 
	   ENSG00000282278, ENSG00000197959, ENSG00000146555, ENSG00000171877, ENSG00000239268, ENSG00000103489, ENSG00000183715, ENSG00000175161, ENSG00000196090, ENSG00000156475 
PC_ 3 
Positive:  ENSG00000141293, ENSG00000198821, ENSG00000145649, ENSG00000138378, ENSG00000172543, ENSG00000185885, ENSG00000153283, ENSG00000111796, ENSG00000105374, ENSG00000180644 
	   ENSG00000116824, ENSG00000211772, ENSG00000213402, ENSG00000173762, ENSG00000165929, ENSG00000169583, ENSG00000027075, ENSG00000008517, ENSG00000163564, ENSG00000111913 
	   ENSG00000245164, ENSG00000077984, ENSG00000169442, ENSG00000115523, ENSG00000134539, ENSG00000164483, ENSG00000113263, ENSG00000167286, ENSG00000160654, ENSG00000101695 
Negative:  ENSG00000130203, ENSG00000087086, ENSG00000130208, ENSG00000173369, ENSG00000159189, ENSG00000173372, ENSG00000118785, ENSG00000125730, ENSG00000095970, ENSG00000100292 
	   ENSG00000164733, ENSG00000175899, ENSG00000170458, ENSG00000137491, ENSG00000182578, ENSG00000155659, ENSG00000104870, ENSG00000171659, ENSG00000275395, ENSG00000087253 
	   ENSG00000231131, ENSG00000038945, ENSG00000119655, ENSG00000114013, ENSG00000010327, ENSG00000100600, ENSG00000135047, ENSG00000167601, ENSG00000186417, ENSG00000150337 
PC_ 4 
Positive:  ENSG00000116147, ENSG00000174469, ENSG00000122584, ENSG00000181215, ENSG00000114279, ENSG00000106415, ENSG00000051341, ENSG00000174371, ENSG00000171848, ENSG00000165304 
	   ENSG00000231918, ENSG00000140525, ENSG00000267374, ENSG00000139734, ENSG00000143476, ENSG00000066279, ENSG00000154975, ENSG00000186185, ENSG00000177103, ENSG00000183117 
	   ENSG00000136492, ENSG00000283403, ENSG00000206579, ENSG00000187951, ENSG00000162946, ENSG00000261008, ENSG00000156103, ENSG00000183850, ENSG00000109805, ENSG00000259692 
Negative:  ENSG00000120885, ENSG00000224389, ENSG00000244731, ENSG00000135744, ENSG00000273259, ENSG00000152583, ENSG00000133048, ENSG00000026025, ENSG00000105835, ENSG00000187193 
	   ENSG00000100234, ENSG00000245532, ENSG00000026508, ENSG00000184557, ENSG00000163618, ENSG00000131981, ENSG00000125398, ENSG00000254409, ENSG00000196136, ENSG00000133083 
	   ENSG00000162545, ENSG00000171885, ENSG00000117525, ENSG00000107317, ENSG00000078295, ENSG00000241684, ENSG00000041982, ENSG00000287704, ENSG00000130203, ENSG00000159388 
PC_ 5 
Positive:  ENSG00000103569, ENSG00000085265, ENSG00000115590, ENSG00000143546, ENSG00000163220, ENSG00000090382, ENSG00000163221, ENSG00000257764, ENSG00000038427, ENSG00000124882 
	   ENSG00000224397, ENSG00000166825, ENSG00000087116, ENSG00000178726, ENSG00000135218, ENSG00000197405, ENSG00000122025, ENSG00000197629, ENSG00000125810, ENSG00000186407 
	   ENSG00000137801, ENSG00000180509, ENSG00000164023, ENSG00000136634, ENSG00000011422, ENSG00000261371, ENSG00000182022, ENSG00000075223, ENSG00000019169, ENSG00000175471 
Negative:  ENSG00000125730, ENSG00000168329, ENSG00000166428, ENSG00000107719, ENSG00000253988, ENSG00000131401, ENSG00000184156, ENSG00000074706, ENSG00000173068, ENSG00000169313 
	   ENSG00000175899, ENSG00000106366, ENSG00000116774, ENSG00000253496, ENSG00000198879, ENSG00000275395, ENSG00000104043, ENSG00000167604, ENSG00000231131, ENSG00000167601 
	   ENSG00000087253, ENSG00000121895, ENSG00000130203, ENSG00000142583, ENSG00000042980, ENSG00000286618, ENSG00000183160, ENSG00000145390, ENSG00000095585, ENSG00000171659 
Warning: The default method for RunUMAP has changed from calling Python UMAP via reticulate to the R-native UWOT using the cosine metric
To use Python UMAP via reticulate, set umap.method to 'umap-learn' and metric to 'correlation'
This message will be shown once per session
18:18:40 UMAP embedding parameters a = 0.9922 b = 1.112
18:18:40 Read 2307 rows and found 16 numeric columns
18:18:40 Using Annoy for neighbor search, n_neighbors = 30
18:18:40 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
18:18:40 Writing NN index file to temp file /gpfs0/scratch/6189876/RtmpubeOtv/file196cd53ec80018
18:18:40 Searching Annoy index using 1 thread, search_k = 3000
18:18:41 Annoy recall = 100%
18:18:41 Commencing smooth kNN distance calibration using 1 thread with target n_neighbors = 30
18:18:42 Initializing from normalized Laplacian + noise (using RSpectra)
18:18:42 Commencing optimization for 500 epochs, with 92418 positive edges
Using method 'umap'
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
18:18:44 Optimization finished
Computing nearest neighbor graph
Computing SNN
Modularity Optimizer version 1.3.0 by Ludo Waltman and Nees Jan van Eck

Number of nodes: 2307
Number of edges: 77236

Running Louvain algorithm...
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Maximum modularity in 10 random starts: 0.9641
Number of communities: 6
Elapsed time: 0 seconds
Loading required package: fields
Loading required package: spam
Spam version 2.11-0 (2024-10-03) is loaded.
Type 'help( Spam)' or 'demo( spam)' for a short introduction 
and overview of this package.
Help for individual functions is also obtained by adding the
suffix '.spam' to the function name, e.g. 'help( chol.spam)'.

Attaching package: ‘spam’

The following objects are masked from ‘package:base’:

    backsolve, forwardsolve

Loading required package: viridisLite

Try help(fields) to get started.
Loading required package: parallel
[1] "Creating artificial doublets for pN = 5%"
[1] "Creating artificial doublets for pN = 10%"
[1] "Creating artificial doublets for pN = 15%"
[1] "Creating artificial doublets for pN = 20%"
[1] "Creating artificial doublets for pN = 25%"
[1] "Creating artificial doublets for pN = 30%"
[1] "Creating Seurat object..."
[1] "Creating Seurat object..."
[1] "Creating Seurat object..."
[1] "Creating Seurat object..."
[1] "Creating Seurat object..."
[1] "Creating Seurat object..."
[1] "Normalizing Seurat object..."
Normalizing layer: counts
Performing log-normalization
[1] "Normalizing Seurat object..."
Normalizing layer: counts
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**Performing log-normalization
**[1] "Normalizing Seurat object..."*
Normalizing layer: counts
*****0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
****Performing log-normalization
*******************************************0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
*|
******************************************************|
************************************[1] "Normalizing Seurat object..."
Normalizing layer: counts
**|
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
*************************************************[1] "Normalizing Seurat object..."
Normalizing layer: counts
*|
Performing log-normalization
[1] "Normalizing Seurat object..."
Normalizing layer: counts
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
************[1]* "Finding variable genes..."
Finding variable features for layer counts
**********************************Performing log-normalization
***|
[1] "Finding variable genes..."
Finding variable features for layer counts
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
****************************0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**********************|
*****[1] "Finding variable genes..."
Finding variable features for layer counts
*******Calculating gene variances
*0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************************************|
*************|
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
[1] "Finding variable genes..."
Finding variable features for layer counts
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
****[1] "Finding variable genes..."*
*Finding variable features for layer counts
********************************************|
Calculating feature variances of standardized and clipped values
[1] "Finding variable genes..."
Finding variable features for layer counts
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************[1]|
 "Scaling data..."
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************Calculating feature variances of standardized and clipped values
*******Centering and scaling data matrix
***  |                                                                            *  |                                                                      |   0%******************  |                                                                            *  |===================================                                   |  50%******|
  |                                                                              |======================================================================| 100%
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
****************************************[1]* "Scaling data..."
**[1]* "Running PCA..."
******|
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
***********************Centering and scaling data matrix
****  |                                                                              |                                                                      |   0%********************  |                                                                            *  |===================================                                   |  50%**|
  |                                                                              |======================================================================| 100%
[1] "Scaling data..."
[1] "Running PCA..."
Centering and scaling data matrix
  |                                                                              |                                                                      |   0%Calculating feature variances of standardized and clipped values
  |                                                                              |===================================                                   |  50%  |                                                                              |======================================================================| 100%
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
***********************************[1]* "Running PCA..."
********[1]* "Calculating PC distance matrix..."
*****|
[1] "Scaling data..."
[1] "Calculating PC distance matrix..."
Centering and scaling data matrix
  |                                                                              |                                                                      |   0%  |                                                                              |===================================                                   |  50%  |                                                                              |======================================================================| 100%
[1] "Defining neighborhoods..."
Calculating feature variances of standardized and clipped values
[1] "Running PCA..."
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
************[1]* "Calculating PC distance matrix..."
*************************************|
Calculating feature variances of standardized and clipped values
[1] "Defining neighborhoods..."
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
******************[1] "Computing pANN across all pK..."
*[1] "pK = 0.005..."
******************[1]* "pK = 0.01..."
*******[1] "Scaling data..."
*****|
[1] "pK = 0.02..."
[1] "pK = 0.03..."
Centering and scaling data matrix
  |                                                                              |                                                                      |   0%[1] "pK = 0.04..."
  |                                                                              |===================================                                   |  50%[1] "Defining neighborhoods..."
[1] "pK = 0.05..."
  |                                                                              |======================================================================| 100%
[1] "pK = 0.06..."
[1] "Calculating PC distance matrix..."
[1] "pK = 0.07..."
[1] "Scaling data..."
[1] "Computing pANN across all pK..."
[1] "pK = 0.005..."
[1] "pK = 0.08..."
[1] "Running PCA..."
[1] "pK = 0.01..."
[1] "pK = 0.09..."
Centering and scaling data matrix
[1] "pK = 0.02..."
  |                                                                              |                                                                      |   0%[1] "pK = 0.1..."
[1] "pK = 0.03..."
  |                                                                              |===================================                                   |  50%[1] "pK = 0.11..."
[1] "pK = 0.04..."
  |                                                                              |======================================================================| 100%
[1] "pK = 0.12..."
[1] "pK = 0.05..."
[1] "pK = 0.13..."
[1] "pK = 0.06..."
[1] "pK = 0.14..."
[1] "pK = 0.07..."
[1] "Running PCA..."
[1] "pK = 0.15..."
[1][1] "pK = 0.08..." "Computing pANN across all pK..."

[1] "pK = 0.005..."
[1] "pK = 0.01..."
[1] "pK = 0.16..."
[1] "pK = 0.09..."
[1] "pK = 0.02..."
[1] "Defining neighborhoods..."
[1] "pK = 0.1..."
[1] "pK = 0.17..."
[1] "pK = 0.03..."
[1] "pK = 0.11..."
[1] "pK = 0.18..."
[1] "pK = 0.04..."
[1] "pK = 0.12..."
[1] "pK = 0.19..."
[1] "pK = 0.05..."
[1] "pK = 0.13..."
[1] "pK = 0.2..."
[1] "pK = 0.06..."
[1] "pK = 0.14..."
[1] "pK = 0.21..."
[1] "pK = 0.07..."
[1] "pK = 0.15..."
[1] "Calculating PC distance matrix..."
[1] "pK = 0.08..."
[1] "pK = 0.22..."
[1] "pK = 0.16..."
[1] "pK = 0.09..."
[1] "pK = 0.23..."
[1] "pK = 0.1..."
[1] "pK = 0.17..."
[1] "pK = 0.24..."
[1] "pK = 0.18..."
[1] "pK = 0.11..."
[1] "pK = 0.25..."
[1] "pK = 0.19..."
[1] "pK = 0.12..."
[1] "pK = 0.26..."
[1] "Computing pANN across all pK..."
[1] "pK = 0.005..."
[1] "pK = 0.2..."
[1] "pK = 0.13..."
[1] "pK = 0.01..."
[1] "pK = 0.27..."
[1][1] "pK = 0.21..." "pK = 0.14..."

[1] "pK = 0.02..."
[1] "pK = 0.15..."
[1] "Calculating PC distance matrix..."
[1] "pK = 0.28..."
[1] "pK = 0.22..."
[1] "pK = 0.03..."
[1] "pK = 0.16..."
[1] "pK = 0.29..."
[1] "pK = 0.04..."
[1] "pK = 0.23..."
[1] "pK = 0.17..."
[1] "pK = 0.3..."
[1] "pK = 0.05..."
[1] "pK = 0.24..."
[1] "pK = 0.18..."
[1] "pK = 0.06..."
[1] "Defining neighborhoods..."
[1] "pK = 0.25..."
[1] "pK = 0.07..."
[1] "pK = 0.19..."
[1] "pK = 0.26..."
[1] "pK = 0.08..."
[1] "pK = 0.2..."
[1] "pK = 0.27..."
[1] "pK = 0.09..."
[1] "pK = 0.21..."
[1] "pK = 0.1..."
[1] "pK = 0.28..."
[1] "pK = 0.22..."
[1] "pK = 0.11..."
[1] "pK = 0.29..."
[1] "pK = 0.12..."
[1] "pK = 0.23..."
[1] "pK = 0.3..."
[1] "pK = 0.13..."
[1] "pK = 0.24..."
[1] "Defining neighborhoods..."
[1] "pK = 0.14..."
[1] "pK = 0.25..."
[1] "pK = 0.15..."
[1] "pK = 0.26..."
[1] "pK = 0.16..."
[1] "pK = 0.27..."
[1] "Computing pANN across all pK..."
[1] "pK = 0.005..."
[1] "pK = 0.17..."
[1] "pK = 0.28..."
[1] "pK = 0.01..."
[1] "pK = 0.18..."
[1] "pK = 0.02..."
[1] "pK = 0.19..."
[1] "pK = 0.03..."
[1] "pK = 0.29..."
[1] "pK = 0.2..."
[1] "pK = 0.3..."
[1] "pK = 0.04..."
[1] "pK = 0.21..."
[1] "pK = 0.05..."
[1][1] "pK = 0.22..." "pK = 0.06..."

[1] "pK = 0.07..."
[1] "pK = 0.23..."
[1] "pK = 0.08..."
[1] "pK = 0.09..."
[1] "pK = 0.24..."
[1] "Computing pANN across all pK..."
[1] "pK = 0.005..."
[1] "pK = 0.1..."
[1] "pK = 0.01..."
[1] "pK = 0.25..."
[1] "pK = 0.02..."
[1][1] "pK = 0.11..." "pK = 0.26..."

[1] "pK = 0.03..."
[1] "pK = 0.12..."
[1] "pK = 0.27..."
[1] "pK = 0.13..."
[1] "pK = 0.04..."
[1] "pK = 0.28..."
[1][1] "pK = 0.14..." "pK = 0.05..."

[1] "pK = 0.06..."
[1] "pK = 0.15..."
[1] "pK = 0.29..."
[1] "pK = 0.07..."
[1] "pK = 0.16..."
[1] "pK = 0.08..."
[1] "pK = 0.3..."
[1] "pK = 0.09..."
[1] "pK = 0.17..."
[1] "pK = 0.1..."
[1] "pK = 0.18..."
[1] "pK = 0.19..."
[1] "pK = 0.11..."
[1] "pK = 0.12..."
[1] "pK = 0.2..."
[1] "pK = 0.13..."
[1] "pK = 0.21..."
[1] "pK = 0.14..."
[1] "pK = 0.22..."
[1] "pK = 0.15..."
[1] "pK = 0.23..."
[1] "pK = 0.16..."
[1] "pK = 0.24..."
[1] "pK = 0.17..."
[1] "pK = 0.25..."
[1] "pK = 0.18..."
[1] "pK = 0.26..."
[1] "pK = 0.19..."
[1] "pK = 0.27..."
[1] "pK = 0.2..."
[1] "pK = 0.28..."
[1] "pK = 0.21..."
[1] "pK = 0.22..."
[1] "pK = 0.29..."
[1] "pK = 0.3..."
[1] "pK = 0.23..."
[1] "pK = 0.24..."
[1] "pK = 0.25..."
[1] "pK = 0.26..."
[1] "pK = 0.27..."
[1] "pK = 0.28..."
[1] "pK = 0.29..."
[1] "pK = 0.3..."
Loading required package: KernSmooth
KernSmooth 2.23 loaded
Copyright M. P. Wand 1997-2009
Loading required package: ROCR
NULL
[1] "Creating 769 artificial doublets..."
[1] "Creating Seurat object..."
[1] "Normalizing Seurat object..."
Normalizing layer: counts
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
[1] "Finding variable genes..."
Finding variable features for layer counts
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
[1] "Scaling data..."
Centering and scaling data matrix
  |                                                                              |                                                                      |   0%  |                                                                              |===================================                                   |  50%  |                                                                              |======================================================================| 100%
[1] "Running PCA..."
[1] "Calculating PC distance matrix..."
[1] "Computing pANN..."
[1] "Classifying doublets.."
Saving processed Seurat object to: ./out//SCPCS000019_doubletfinder.rds 
          used  (Mb) gc trigger   (Mb)  max used   (Mb)
Ncells 3348585 178.9    4975401  265.8   4975401  265.8
Vcells 5848711  44.7  144036488 1099.0 180043017 1373.7
Processing complete for: ../create_seurat_objects/out//SCPCS000019.rds 
Finished processing file: ../create_seurat_objects/out//SCPCS000019.rds
Processing file: ../create_seurat_objects/out//SCPCS000020.rds
Reading Seurat object from: ../create_seurat_objects/out//SCPCS000020.rds 
Running DoubletFinder on: ../create_seurat_objects/out//SCPCS000020.rds 
Normalizing layer: counts
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Finding variable features for layer counts
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Centering and scaling data matrix
  |                                                                              |                                                                      |   0%  |                                                                              |===================================                                   |  50%  |                                                                              |======================================================================| 100%
PC_ 1 
Positive:  ENSG00000087086, ENSG00000130208, ENSG00000196154, ENSG00000090382, ENSG00000277632, ENSG00000275302, ENSG00000118785, ENSG00000224916, ENSG00000143546, ENSG00000163220 
	   ENSG00000271503, ENSG00000275395, ENSG00000234906, ENSG00000165140, ENSG00000231131, ENSG00000186417, ENSG00000168421, ENSG00000136235, ENSG00000116741, ENSG00000057657 
	   ENSG00000105374, ENSG00000008517, ENSG00000169508, ENSG00000109321, ENSG00000004799, ENSG00000232591, ENSG00000232810, ENSG00000276085, ENSG00000119508, ENSG00000160213 
Negative:  ENSG00000151276, ENSG00000143776, ENSG00000169760, ENSG00000183580, ENSG00000204956, ENSG00000151322, ENSG00000116141, ENSG00000143995, ENSG00000070018, ENSG00000105426 
	   ENSG00000187391, ENSG00000148468, ENSG00000179455, ENSG00000147862, ENSG00000106078, ENSG00000187079, ENSG00000185630, ENSG00000154380, ENSG00000162873, ENSG00000140443 
	   ENSG00000146938, ENSG00000276975, ENSG00000242808, ENSG00000185008, ENSG00000112320, ENSG00000185565, ENSG00000274333, ENSG00000186868, ENSG00000146966, ENSG00000150471 
PC_ 2 
Positive:  ENSG00000285218, ENSG00000150656, ENSG00000136960, ENSG00000184144, ENSG00000196104, ENSG00000154493, ENSG00000154654, ENSG00000164176, ENSG00000081479, ENSG00000167755 
	   ENSG00000116675, ENSG00000102452, ENSG00000155886, ENSG00000140479, ENSG00000185046, ENSG00000136237, ENSG00000182168, ENSG00000135525, ENSG00000091513, ENSG00000105290 
	   ENSG00000174607, ENSG00000163531, ENSG00000114757, ENSG00000170775, ENSG00000124920, ENSG00000105695, ENSG00000152910, ENSG00000147488, ENSG00000144339, ENSG00000100146 
Negative:  ENSG00000204956, ENSG00000144857, ENSG00000253642, ENSG00000162873, ENSG00000165323, ENSG00000041982, ENSG00000143195, ENSG00000185008, ENSG00000139364, ENSG00000269043 
	   ENSG00000185942, ENSG00000144868, ENSG00000274333, ENSG00000078018, ENSG00000064692, ENSG00000150625, ENSG00000134853, ENSG00000134986, ENSG00000079931, ENSG00000106278 
	   ENSG00000236708, ENSG00000091129, ENSG00000179455, ENSG00000138771, ENSG00000006468, ENSG00000066382, ENSG00000258932, ENSG00000197977, ENSG00000128641, ENSG00000110693 
PC_ 3 
Positive:  ENSG00000121068, ENSG00000074410, ENSG00000170439, ENSG00000041982, ENSG00000162981, ENSG00000115457, ENSG00000155760, ENSG00000204262, ENSG00000106689, ENSG00000249992 
	   ENSG00000026025, ENSG00000144857, ENSG00000104368, ENSG00000006327, ENSG00000124006, ENSG00000137962, ENSG00000163453, ENSG00000167614, ENSG00000063660, ENSG00000166165 
	   ENSG00000171951, ENSG00000164434, ENSG00000198838, ENSG00000172020, ENSG00000181790, ENSG00000113140, ENSG00000115461, ENSG00000135424, ENSG00000114646, ENSG00000242474 
Negative:  ENSG00000231764, ENSG00000101638, ENSG00000021645, ENSG00000121440, ENSG00000079689, ENSG00000178568, ENSG00000272168, ENSG00000033122, ENSG00000002746, ENSG00000177103 
	   ENSG00000154678, ENSG00000160145, ENSG00000044524, ENSG00000170579, ENSG00000134376, ENSG00000170390, ENSG00000224243, ENSG00000103460, ENSG00000185630, ENSG00000120693 
	   ENSG00000109265, ENSG00000165409, ENSG00000149294, ENSG00000079102, ENSG00000077279, ENSG00000067715, ENSG00000112182, ENSG00000162374, ENSG00000074047, ENSG00000101349 
PC_ 4 
Positive:  ENSG00000137285, ENSG00000125462, ENSG00000164434, ENSG00000171476, ENSG00000131711, ENSG00000087250, ENSG00000147588, ENSG00000046653, ENSG00000175130, ENSG00000166165 
	   ENSG00000198467, ENSG00000149557, ENSG00000115457, ENSG00000176887, ENSG00000132688, ENSG00000213190, ENSG00000113140, ENSG00000117519, ENSG00000258947, ENSG00000105894 
	   ENSG00000197696, ENSG00000278996, ENSG00000154277, ENSG00000120885, ENSG00000115461, ENSG00000231764, ENSG00000172020, ENSG00000110492, ENSG00000178568, ENSG00000170439 
Negative:  ENSG00000170921, ENSG00000105835, ENSG00000112531, ENSG00000135540, ENSG00000166068, ENSG00000119508, ENSG00000090382, ENSG00000197329, ENSG00000184384, ENSG00000130340 
	   ENSG00000142599, ENSG00000038382, ENSG00000109321, ENSG00000284461, ENSG00000229989, ENSG00000123636, ENSG00000255145, ENSG00000169508, ENSG00000072694, ENSG00000111961 
	   ENSG00000106546, ENSG00000116741, ENSG00000170802, ENSG00000132122, ENSG00000102595, ENSG00000236069, ENSG00000177675, ENSG00000173542, ENSG00000277632, ENSG00000184903 
PC_ 5 
Positive:  ENSG00000010810, ENSG00000271503, ENSG00000156475, ENSG00000105374, ENSG00000168785, ENSG00000008517, ENSG00000054654, ENSG00000135048, ENSG00000185760, ENSG00000164543 
	   ENSG00000145730, ENSG00000255733, ENSG00000171843, ENSG00000168421, ENSG00000118922, ENSG00000154310, ENSG00000172116, ENSG00000069667, ENSG00000033170, ENSG00000185885 
	   ENSG00000284879, ENSG00000116106, ENSG00000034053, ENSG00000134539, ENSG00000167106, ENSG00000175779, ENSG00000198626, ENSG00000109689, ENSG00000120278, ENSG00000182621 
Negative:  ENSG00000087086, ENSG00000130208, ENSG00000100097, ENSG00000102265, ENSG00000090382, ENSG00000026025, ENSG00000196262, ENSG00000117984, ENSG00000163220, ENSG00000118785 
	   ENSG00000034510, ENSG00000196230, ENSG00000165140, ENSG00000112531, ENSG00000123416, ENSG00000234906, ENSG00000197956, ENSG00000175445, ENSG00000143546, ENSG00000196154 
	   ENSG00000136235, ENSG00000170921, ENSG00000224916, ENSG00000196628, ENSG00000166068, ENSG00000176046, ENSG00000106211, ENSG00000105835, ENSG00000160213, ENSG00000038382 
Warning: The default method for RunUMAP has changed from calling Python UMAP via reticulate to the R-native UWOT using the cosine metric
To use Python UMAP via reticulate, set umap.method to 'umap-learn' and metric to 'correlation'
This message will be shown once per session
18:19:17 UMAP embedding parameters a = 0.9922 b = 1.112
18:19:17 Read 665 rows and found 8 numeric columns
18:19:17 Using Annoy for neighbor search, n_neighbors = 30
18:19:17 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
18:19:17 Writing NN index file to temp file /gpfs0/scratch/6189876/RtmpN8titW/file196e107c82ea63
18:19:17 Searching Annoy index using 1 thread, search_k = 3000
18:19:17 Annoy recall = 100%
18:19:17 Commencing smooth kNN distance calibration using 1 thread with target n_neighbors = 30
18:19:18 Initializing from normalized Laplacian + noise (using RSpectra)
18:19:18 Commencing optimization for 500 epochs, with 24258 positive edges
Using method 'umap'
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
18:19:19 Optimization finished
Computing nearest neighbor graph
Computing SNN
Modularity Optimizer version 1.3.0 by Ludo Waltman and Nees Jan van Eck

Number of nodes: 665
Number of edges: 17928

Running Louvain algorithm...
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Maximum modularity in 10 random starts: 0.9665
Number of communities: 4
Elapsed time: 0 seconds
Loading required package: fields
Loading required package: spam
Spam version 2.11-0 (2024-10-03) is loaded.
Type 'help( Spam)' or 'demo( spam)' for a short introduction 
and overview of this package.
Help for individual functions is also obtained by adding the
suffix '.spam' to the function name, e.g. 'help( chol.spam)'.

Attaching package: ‘spam’

The following objects are masked from ‘package:base’:

    backsolve, forwardsolve

Loading required package: viridisLite

Try help(fields) to get started.
Loading required package: parallel
[1] "Creating artificial doublets for pN = 5%"
[1] "Creating artificial doublets for pN = 10%"
[1] "Creating artificial doublets for pN = 15%"
[1] "Creating artificial doublets for pN = 20%"
[1] "Creating artificial doublets for pN = 25%"
[1] "Creating Seurat object..."
[1] "Creating artificial doublets for pN = 30%"
[1] "Creating Seurat object..."
[1] "Creating Seurat object..."
[1] "Creating Seurat object..."
[1] "Creating Seurat object..."
[1] "Creating Seurat object..."
[1] "Normalizing Seurat object..."
Normalizing layer: counts
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
[1] "Normalizing Seurat object..."
*Normalizing layer: counts
*****Performing log-normalization
*******[1] "Normalizing Seurat object..."
*Normalizing layer: counts
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
*************Performing log-normalization
*********************[1]* "Normalizing Seurat object..."*
**Normalizing layer: counts
********0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**|
***********Performing log-normalization
***********************************0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
*********|
***************************************************|
********************************|
[1] "Normalizing Seurat object..."
Normalizing layer: counts
Performing log-normalization
[1] "Normalizing Seurat object..."
Normalizing layer: counts
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
***Performing log-normalization
*********0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
******************************[1]* "Finding variable genes..."*
Finding variable features for layer counts
****************************|
******************Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
*[----|----|----|----|----|----|----|----|----|----|
[1]* "Finding variable genes..."*
***Finding variable features for layer counts
******************************************************|
|
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
[1] "Finding variable genes..."
Finding variable features for layer counts
[1] "Finding variable genes..."
Finding variable features for layer counts
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
******************[1]* "Finding variable genes..."*
**Finding variable features for layer counts
****************************|
[1] "Finding variable genes..."
Finding variable features for layer counts
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
[1] "Scaling data..."
Centering and scaling data matrix
  |                                                                              |                                                                      |   0%Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
  |                                                                            *  |===================================                                   |  50%****************  |                                                                            *  |======================================================================| 100%*
***************************[1]* "Scaling data..."*
**|
Centering and scaling data matrix
  |                                                                              |                                                                      |   0%  |                                                                              |===================================                                   |  50%[1] "Running PCA..."
  |                                                                              |======================================================================| 100%
[1] "Running PCA..."
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
[1] "Calculating PC distance matrix..."
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
[1] "Calculating PC distance matrix..."
[1] "Scaling data..."
Centering and scaling data matrix
  |                                                                              |                                                                      |   0%  |                                                                              |===================================                                   |  50%  |                                                                              |======================================================================| 100%
[1] "Scaling data..."
[1] "Running PCA..."
Centering and scaling data matrix
  |                                                                              |                                                                      |   0%  |                                                                              |===================================                                   |  50%[1] "Defining neighborhoods..."
  |                                                                              |======================================================================| 100%
Calculating feature variances of standardized and clipped values
[1] "Computing pANN across all pK..."
[1] "pK = 0.02..."
[1] "Running PCA..."
[1] "pK = 0.03..."
[1][1] "Defining neighborhoods..." "pK = 0.04..."

0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************[1]* "pK = 0.05..."*
*****************[1]* "pK = 0.06..."*
***************|
[1] "pK = 0.07..."
[1] "pK = 0.08..."
Calculating feature variances of standardized and clipped values[1]
 "Calculating PC distance matrix..."
[1] "Computing pANN across all pK..."
[1] "pK = 0.02..."
[1] "pK = 0.09..."
[1] "pK = 0.03..."
[1] "pK = 0.1..."
[1] "pK = 0.04..."
[1] "pK = 0.11..."
[1] "pK = 0.05..."
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
****[1]* "pK = 0.12..."*
*[1]* "pK = 0.06..."
**************[1]* "pK = 0.13..."*
*[1]* "pK = 0.07..."
**************[1]* "pK = 0.14..."*
*[1]* "pK = 0.08..."*
*****|
[1] "pK = 0.15..."
[1] "pK = 0.09..."
[1][1] "pK = 0.16..." "pK = 0.1..."

[1][1] "pK = 0.17..." "pK = 0.11..."

[1][1] "pK = 0.18..." "pK = 0.12..."

[1][1] "pK = 0.13..." "pK = 0.19..."

[1] "Calculating PC distance matrix..."
[1] "pK = 0.14..."
[1] "pK = 0.2..."
[1] "Scaling data..."
[1] "pK = 0.15..."
[1] "pK = 0.16..."
[1] "pK = 0.21..."
[1] "pK = 0.17..."
Centering and scaling data matrix
  |                                                                              |                                                                      |   0%[1] "pK = 0.22..."
[1] "pK = 0.18..."
  |                                                                              |===================================                                   |  50%[1] "pK = 0.23..."
[1] "pK = 0.19..."
[1]  |                                                                             "pK = 0.24..."  |======================================================================| 100%

[1] "pK = 0.2..."
[1] "pK = 0.25..."
[1] "pK = 0.26..."
[1][1] "pK = 0.21..." "Scaling data..."

[1] "pK = 0.27..."
[1][1] "pK = 0.22..." "pK = 0.28..."

[1] "Running PCA..."
[1][1] "pK = 0.23..." "pK = 0.29..."

Centering and scaling data matrix
  |                                                                              |                                                                      |   0%[1][1] "pK = 0.24..." "pK = 0.3..."

  |                                                                              |===================================                                   |  50%[1] "pK = 0.25..."
  |                                                                              |======================================================================| 100%
[1] "pK = 0.26..."
[1] "Defining neighborhoods..."
[1] "pK = 0.27..."
[1] "pK = 0.28..."
[1] "pK = 0.29..."
[1] "pK = 0.3..."
[1] "Computing pANN across all pK..."
[1] "pK = 0.02..."
[1] "Running PCA..."
[1] "pK = 0.03..."
[1] "pK = 0.04..."
[1] "pK = 0.05..."
[1] "pK = 0.06..."
[1] "pK = 0.07..."
[1] "pK = 0.08..."[1]
 "Defining neighborhoods..."
[1] "pK = 0.09..."
[1] "pK = 0.1..."
[1] "Calculating PC distance matrix..."
[1] "pK = 0.11..."
[1] "pK = 0.12..."
[1] "Computing pANN across all pK..."
[1] "pK = 0.02..."
[1] "pK = 0.13..."
[1] "pK = 0.03..."
[1] "pK = 0.14..."
[1] "pK = 0.04..."
[1] "pK = 0.15..."
[1] "pK = 0.05..."
[1] "pK = 0.16..."
[1] "pK = 0.06..."
[1] "pK = 0.17..."
[1] "pK = 0.07..."
[1] "pK = 0.18..."
[1] "pK = 0.08..."
[1] "pK = 0.19..."
[1] "pK = 0.09..."
[1] "pK = 0.2..."
[1] "Calculating PC distance matrix..."
[1] "pK = 0.1..."
[1] "pK = 0.11..."
[1] "pK = 0.12..."
[1] "pK = 0.21..."
[1] "pK = 0.13..."
[1] "pK = 0.22..."
[1] "pK = 0.14..."
[1] "pK = 0.23..."
[1] "pK = 0.15..."
[1] "pK = 0.24..."
[1] "pK = 0.16..."
[1] "pK = 0.25..."
[1] "pK = 0.17..."
[1] "pK = 0.26..."
[1] "pK = 0.18..."
[1] "pK = 0.27..."
[1] "pK = 0.19..."
[1] "pK = 0.28..."
[1] "pK = 0.2..."
[1] "pK = 0.29..."
[1] "pK = 0.3..."
[1] "pK = 0.21..."
[1] "pK = 0.22..."
[1] "pK = 0.23..."
[1] "Defining neighborhoods..."
[1] "pK = 0.24..."
[1] "pK = 0.25..."
[1] "pK = 0.26..."
[1] "pK = 0.27..."
[1] "Computing pANN across all pK..."
[1] "pK = 0.02..."
[1] "pK = 0.28..."
[1] "pK = 0.03..."
[1] "pK = 0.29..."
[1] "pK = 0.04..."
[1] "pK = 0.3..."
[1] "pK = 0.05..."
[1] "pK = 0.06..."
[1] "pK = 0.07..."
[1] "Defining neighborhoods..."
[1] "pK = 0.08..."
[1] "pK = 0.09..."
[1] "pK = 0.1..."
[1] "pK = 0.11..."
[1] "pK = 0.12..."
[1] "Computing pANN across all pK..."
[1] "pK = 0.02..."
[1] "pK = 0.13..."
[1] "pK = 0.03..."
[1][1] "pK = 0.14..." "pK = 0.04..."

[1][1] "pK = 0.05..." "pK = 0.15..."

[1] "pK = 0.06..."
[1] "pK = 0.16..."
[1] "pK = 0.07..."
[1] "pK = 0.17..."
[1] "pK = 0.08..."
[1] "pK = 0.18..."
[1] "pK = 0.09..."
[1] "pK = 0.19..."
[1] "pK = 0.1..."
[1] "pK = 0.2..."
[1] "pK = 0.11..."
[1] "pK = 0.12..."
[1] "pK = 0.21..."
[1] "pK = 0.13..."
[1][1] "pK = 0.22..." "pK = 0.14..."

[1][1] "pK = 0.15..." "pK = 0.23..."

[1] "pK = 0.16..."
[1] "pK = 0.24..."
[1] "pK = 0.17..."[1]
 "pK = 0.25..."
[1] "pK = 0.18..."
[1] "pK = 0.26..."
[1] "pK = 0.19..."
[1] "pK = 0.27..."
[1] "pK = 0.2..."
[1] "pK = 0.28..."
[1] "pK = 0.29..."
[1] "pK = 0.3..."
[1] "pK = 0.21..."
[1] "pK = 0.22..."
[1] "pK = 0.23..."
[1] "pK = 0.24..."
[1] "pK = 0.25..."
[1] "pK = 0.26..."
[1] "pK = 0.27..."
[1] "pK = 0.28..."
[1] "pK = 0.29..."
[1] "pK = 0.3..."
Loading required package: KernSmooth
KernSmooth 2.23 loaded
Copyright M. P. Wand 1997-2009
Loading required package: ROCR
NULL
[1] "Creating 222 artificial doublets..."
[1] "Creating Seurat object..."
[1] "Normalizing Seurat object..."
Normalizing layer: counts
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
[1] "Finding variable genes..."
Finding variable features for layer counts
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
[1] "Scaling data..."
Centering and scaling data matrix
  |                                                                              |                                                                      |   0%  |                                                                              |===================================                                   |  50%  |                                                                              |======================================================================| 100%
[1] "Running PCA..."
[1] "Calculating PC distance matrix..."
[1] "Computing pANN..."
[1] "Classifying doublets.."
Saving processed Seurat object to: ./out//SCPCS000020_doubletfinder.rds 
          used  (Mb) gc trigger  (Mb) max used  (Mb)
Ncells 3348296 178.9    4975401 265.8  4975401 265.8
Vcells 5848418  44.7   43435601 331.4 54266625 414.1
Processing complete for: ../create_seurat_objects/out//SCPCS000020.rds 
Finished processing file: ../create_seurat_objects/out//SCPCS000020.rds
Processing file: ../create_seurat_objects/out//SCPCS000022.rds
Reading Seurat object from: ../create_seurat_objects/out//SCPCS000022.rds 
Running DoubletFinder on: ../create_seurat_objects/out//SCPCS000022.rds 
Normalizing layer: counts
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Finding variable features for layer counts
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Centering and scaling data matrix
  |                                                                              |                                                                      |   0%  |                                                                              |===================================                                   |  50%  |                                                                              |======================================================================| 100%
PC_ 1 
Positive:  ENSG00000153976, ENSG00000151322, ENSG00000148498, ENSG00000130413, ENSG00000138696, ENSG00000242808, ENSG00000138771, ENSG00000041982, ENSG00000183580, ENSG00000239381 
	   ENSG00000198796, ENSG00000125266, ENSG00000145623, ENSG00000257126, ENSG00000166833, ENSG00000091129, ENSG00000169862, ENSG00000083067, ENSG00000179455, ENSG00000184304 
	   ENSG00000170558, ENSG00000165895, ENSG00000143429, ENSG00000134532, ENSG00000168916, ENSG00000204262, ENSG00000113594, ENSG00000142611, ENSG00000183722, ENSG00000155816 
Negative:  ENSG00000173369, ENSG00000130208, ENSG00000223865, ENSG00000231389, ENSG00000130203, ENSG00000186417, ENSG00000090382, ENSG00000132965, ENSG00000170017, ENSG00000275395 
	   ENSG00000268173, ENSG00000135678, ENSG00000143546, ENSG00000151726, ENSG00000163220, ENSG00000006747, ENSG00000141655, ENSG00000196735, ENSG00000184156, ENSG00000154122 
	   ENSG00000234906, ENSG00000153071, ENSG00000249001, ENSG00000115956, ENSG00000090104, ENSG00000124491, ENSG00000197766, ENSG00000224916, ENSG00000125810, ENSG00000019169 
PC_ 2 
Positive:  ENSG00000141293, ENSG00000198821, ENSG00000153283, ENSG00000008517, ENSG00000116824, ENSG00000118922, ENSG00000127152, ENSG00000113263, ENSG00000164483, ENSG00000145649 
	   ENSG00000054654, ENSG00000198851, ENSG00000211772, ENSG00000069667, ENSG00000163564, ENSG00000152495, ENSG00000160654, ENSG00000161405, ENSG00000271503, ENSG00000167286 
	   ENSG00000173762, ENSG00000172673, ENSG00000111371, ENSG00000165929, ENSG00000277734, ENSG00000104490, ENSG00000278996, ENSG00000234663, ENSG00000180644, ENSG00000172543 
Negative:  ENSG00000157827, ENSG00000170017, ENSG00000166068, ENSG00000249001, ENSG00000186417, ENSG00000135678, ENSG00000285162, ENSG00000156011, ENSG00000156113, ENSG00000141655 
	   ENSG00000196730, ENSG00000099250, ENSG00000184156, ENSG00000173369, ENSG00000138185, ENSG00000137393, ENSG00000132122, ENSG00000154122, ENSG00000275395, ENSG00000151726 
	   ENSG00000112394, ENSG00000113600, ENSG00000075391, ENSG00000104043, ENSG00000180530, ENSG00000166928, ENSG00000133121, ENSG00000231389, ENSG00000105835, ENSG00000135540 
PC_ 3 
Positive:  ENSG00000131981, ENSG00000166681, ENSG00000133048, ENSG00000120885, ENSG00000131711, ENSG00000147889, ENSG00000087250, ENSG00000185222, ENSG00000172020, ENSG00000164434 
	   ENSG00000110492, ENSG00000114115, ENSG00000117519, ENSG00000164687, ENSG00000046653, ENSG00000105894, ENSG00000142089, ENSG00000109846, ENSG00000112096, ENSG00000167552 
	   ENSG00000130203, ENSG00000189171, ENSG00000166165, ENSG00000166741, ENSG00000278996, ENSG00000147588, ENSG00000154277, ENSG00000137285, ENSG00000100097, ENSG00000106211 
Negative:  ENSG00000141293, ENSG00000118922, ENSG00000116824, ENSG00000198821, ENSG00000020633, ENSG00000153283, ENSG00000111371, ENSG00000138378, ENSG00000169442, ENSG00000111913 
	   ENSG00000198851, ENSG00000113263, ENSG00000145649, ENSG00000152495, ENSG00000010810, ENSG00000172183, ENSG00000164483, ENSG00000160654, ENSG00000127152, ENSG00000185885 
	   ENSG00000161405, ENSG00000069667, ENSG00000167286, ENSG00000211772, ENSG00000104490, ENSG00000165929, ENSG00000234663, ENSG00000079263, ENSG00000163564, ENSG00000271503 
PC_ 4 
Positive:  ENSG00000260971, ENSG00000185008, ENSG00000086991, ENSG00000288546, ENSG00000130226, ENSG00000280870, ENSG00000151322, ENSG00000255429, ENSG00000165186, ENSG00000168959 
	   ENSG00000273079, ENSG00000169760, ENSG00000135298, ENSG00000187391, ENSG00000147481, ENSG00000146938, ENSG00000079102, ENSG00000106278, ENSG00000100154, ENSG00000227110 
	   ENSG00000135903, ENSG00000243069, ENSG00000054803, ENSG00000158458, ENSG00000150672, ENSG00000158966, ENSG00000234377, ENSG00000121440, ENSG00000126785, ENSG00000116117 
Negative:  ENSG00000137804, ENSG00000148773, ENSG00000198901, ENSG00000137812, ENSG00000152253, ENSG00000139734, ENSG00000066279, ENSG00000122966, ENSG00000035499, ENSG00000138160 
	   ENSG00000129173, ENSG00000088325, ENSG00000164032, ENSG00000184661, ENSG00000240972, ENSG00000123485, ENSG00000162063, ENSG00000169679, ENSG00000111640, ENSG00000237649 
	   ENSG00000117632, ENSG00000131747, ENSG00000169607, ENSG00000123416, ENSG00000149925, ENSG00000136810, ENSG00000075218, ENSG00000089685, ENSG00000186185, ENSG00000136824 
PC_ 5 
Positive:  ENSG00000139734, ENSG00000122966, ENSG00000066279, ENSG00000137812, ENSG00000152253, ENSG00000148773, ENSG00000198901, ENSG00000137804, ENSG00000138160, ENSG00000129173 
	   ENSG00000035499, ENSG00000123485, ENSG00000117724, ENSG00000131747, ENSG00000088325, ENSG00000186185, ENSG00000142945, ENSG00000162063, ENSG00000169607, ENSG00000276043 
	   ENSG00000117650, ENSG00000138778, ENSG00000166803, ENSG00000169679, ENSG00000165304, ENSG00000138180, ENSG00000011426, ENSG00000075218, ENSG00000237649, ENSG00000080986 
Negative:  ENSG00000158481, ENSG00000158477, ENSG00000240405, ENSG00000171517, ENSG00000140678, ENSG00000113721, ENSG00000184828, ENSG00000105976, ENSG00000122025, ENSG00000112486 
	   ENSG00000109684, ENSG00000177098, ENSG00000183696, ENSG00000008083, ENSG00000166920, ENSG00000225885, ENSG00000147872, ENSG00000046889, ENSG00000143479, ENSG00000103569 
	   ENSG00000102265, ENSG00000241163, ENSG00000169116, ENSG00000285880, ENSG00000242120, ENSG00000111057, ENSG00000010310, ENSG00000142192, ENSG00000038427, ENSG00000248323 
Warning: The default method for RunUMAP has changed from calling Python UMAP via reticulate to the R-native UWOT using the cosine metric
To use Python UMAP via reticulate, set umap.method to 'umap-learn' and metric to 'correlation'
This message will be shown once per session
18:19:36 UMAP embedding parameters a = 0.9922 b = 1.112
18:19:36 Read 728 rows and found 10 numeric columns
18:19:36 Using Annoy for neighbor search, n_neighbors = 30
18:19:36 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
18:19:36 Writing NN index file to temp file /gpfs0/scratch/6189876/Rtmpg0mPfI/file196f5267d2c5df
18:19:36 Searching Annoy index using 1 thread, search_k = 3000
18:19:36 Annoy recall = 100%
18:19:36 Commencing smooth kNN distance calibration using 1 thread with target n_neighbors = 30
18:19:37 Initializing from normalized Laplacian + noise (using RSpectra)
18:19:37 Commencing optimization for 500 epochs, with 27102 positive edges
Using method 'umap'
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
18:19:37 Optimization finished
Computing nearest neighbor graph
Computing SNN
Modularity Optimizer version 1.3.0 by Ludo Waltman and Nees Jan van Eck

Number of nodes: 728
Number of edges: 19775

Running Louvain algorithm...
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Maximum modularity in 10 random starts: 0.9549
Number of communities: 4
Elapsed time: 0 seconds
Loading required package: fields
Loading required package: spam
Spam version 2.11-0 (2024-10-03) is loaded.
Type 'help( Spam)' or 'demo( spam)' for a short introduction 
and overview of this package.
Help for individual functions is also obtained by adding the
suffix '.spam' to the function name, e.g. 'help( chol.spam)'.

Attaching package: ‘spam’

The following objects are masked from ‘package:base’:

    backsolve, forwardsolve

Loading required package: viridisLite

Try help(fields) to get started.
Loading required package: parallel
[1] "Creating artificial doublets for pN = 5%"
[1] "Creating artificial doublets for pN = 10%"
[1] "Creating artificial doublets for pN = 15%"
[1] "Creating artificial doublets for pN = 20%"
[1] "Creating artificial doublets for pN = 25%"
[1] "Creating artificial doublets for pN = 30%"
[1] "Creating Seurat object..."
[1] "Creating Seurat object..."
[1] "Creating Seurat object..."
[1] "Creating Seurat object..."
[1] "Creating Seurat object..."
[1] "Creating Seurat object..."
[1] "Normalizing Seurat object..."
Normalizing layer: counts
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
[1] "Normalizing Seurat object..."
Normalizing layer: counts
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
*[1] "Normalizing Seurat object..."
Normalizing layer: counts
********Performing log-normalization
*[1] "Normalizing Seurat object..."*
Normalizing layer: counts
*******0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
******Performing log-normalization
********[1] "Normalizing Seurat object..."*
*Normalizing layer: counts
***********************0%   10   20   30   40   50   60   70   80   90   100%
*[----|----|----|----|----|----|----|----|----|----|
**|
****Performing log-normalization
**************************0%   10   20   30   40   50   60   70   80   90   100%
*[----|----|----|----|----|----|----|----|----|----|
************************************|
**********************************************|
***************************|
[1] "Normalizing Seurat object..."
Normalizing layer: counts
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
*********[1] "Finding variable genes..."
*Finding variable features for layer counts
**********************************Calculating gene variances*
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**********************************|
*********************|
[1] "Finding variable genes..."
Finding variable features for layer counts
[1] "Finding variable genes..."
Finding variable features for layer counts
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
[1] "Finding variable genes..."
Finding variable features for layer counts
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
[1] "Finding variable genes..."
Finding variable features for layer counts
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
[1] "Finding variable genes..."
Finding variable features for layer counts
[1] "Scaling data..."
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
*******************************Centering and scaling data matrix
***  |                                                                            *  |                                                                      |   0%***************|
  |                                                                              |===================================                                   |  50%  |                                                                              |======================================================================| 100%
Calculating feature variances of standardized and clipped values
[1] "Running PCA..."
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
[1] "Calculating PC distance matrix..."
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
****************************[1]* "Scaling data..."*
*****************Calculating feature variances of standardized and clipped values*
**|
Centering and scaling data matrix
  |                                                                              |                                                                      |   0%  |                                                                              |===================================                                   |  50%  |                                                                              |======================================================================| 100%
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
[1] "Scaling data..."
[1] "Running PCA..."
Centering and scaling data matrix
  |                                                                              |                                                                      |   0%  |                                                                              |===================================                                   |  50%  |                                                                              |======================================================================| 100%
[1] "Scaling data..."
[1] "Running PCA..."
Centering and scaling data matrix
  |                                                                              |                                                                      |   0%[1] "Defining neighborhoods..."
  |                                                                              |===================================                                   |  50%  |                                                                              |======================================================================| 100%
[1] "Scaling data..."
[1] "Calculating PC distance matrix..."
[1] "Computing pANN across all pK..."
[1] "pK = 0.02..."
[1] "pK = 0.03..."
Centering and scaling data matrix
  |                                                                              |                                                                      |   0%[1] "pK = 0.04..."
[1] "Running PCA..."
  |                                                                            [1]  |===================================                                   |  50% "pK = 0.05..."
[1] "pK = 0.06..."
  |                                                                              |======================================================================| 100%
[1] "pK = 0.07..."
[1] "pK = 0.08..."
[1] "pK = 0.09..."
[1] "pK = 0.1..."
Calculating feature variances of standardized and clipped values
[1] "pK = 0.11..."
[1][1] "Running PCA..."[1] "Calculating PC distance matrix..."
 "pK = 0.12..."

[1] "pK = 0.13..."
[1] "pK = 0.14..."
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
*********[1] "pK = 0.15..."*
****************[1] "pK = 0.16..."*
***************[1]* "pK = 0.17..."
*******|
[1] "pK = 0.18..."
[1] "pK = 0.19..."
[1] "Calculating PC distance matrix..."
[1] "pK = 0.2..."
[1] "pK = 0.21..."
[1] "pK = 0.22..."
[1] "pK = 0.23..."
[1] "pK = 0.24..."
[1] "Defining neighborhoods..."
[1] "pK = 0.25..."
[1] "pK = 0.26..."
[1] "Calculating PC distance matrix..."
[1] "pK = 0.27..."
[1] "pK = 0.28..."
[1] "pK = 0.29..."
[1] "Computing pANN across all pK..."
[1] "pK = 0.02..."
[1] "pK = 0.03..."
[1] "pK = 0.3..."
[1] "pK = 0.04..."[1]
 "Scaling data..."
[1] "pK = 0.05..."
[1] "pK = 0.06..."
[1] "pK = 0.07..."
Centering and scaling data matrix
[1] "Defining neighborhoods..."
  |                                                                              |                                                                      |   0%[1] "pK = 0.08..."
  |                                                                              |===================================                                   |  50%[1] "pK = 0.09..."
  |                                                                              |======================================================================| 100%
[1] "pK = 0.1..."
[1] "pK = 0.11..."
[1][1] "pK = 0.12..." "Computing pANN across all pK..."

[1] "pK = 0.02..."
[1] "pK = 0.13..."
[1] "pK = 0.03..."
[1][1] "pK = 0.14..." "pK = 0.04..."

[1] "Running PCA..."
[1] "pK = 0.05..."
[1] "pK = 0.15..."
[1] "pK = 0.06..."
[1] "pK = 0.16..."
[1] "Defining neighborhoods..."
[1] "pK = 0.07..."
[1] "pK = 0.17..."
[1] "pK = 0.08..."
[1] "pK = 0.18..."
[1] "pK = 0.09..."
[1] "pK = 0.19..."
[1] "pK = 0.1..."
[1] "pK = 0.11..."
[1] "Computing pANN across all pK..."
[1] "pK = 0.02..."
[1][1] "pK = 0.12..." "pK = 0.2..."

[1] "pK = 0.03..."
[1] "pK = 0.13..."
[1] "pK = 0.21..."
[1] "pK = 0.04..."
[1] "pK = 0.14..."
[1] "pK = 0.22..."
[1] "Defining neighborhoods..."
[1] "pK = 0.05..."
[1] "pK = 0.15..."
[1] "pK = 0.23..."
[1] "pK = 0.06..."
[1] "pK = 0.16..."
[1] "pK = 0.24..."
[1] "pK = 0.07..."
[1] "pK = 0.17..."
[1] "pK = 0.25..."
[1] "pK = 0.08..."
[1] "pK = 0.18..."
[1] "pK = 0.26..."
[1] "pK = 0.09..."
[1] "pK = 0.19..."
[1][1] "pK = 0.1..." "pK = 0.27..."

[1] "Computing pANN across all pK..."
[1] "pK = 0.02..."
[1] "pK = 0.11..."
[1] "pK = 0.28..."
[1] "pK = 0.03..."
[1] "pK = 0.12..."
[1][1] "pK = 0.2..." "pK = 0.29..."

[1] "pK = 0.04..."
[1] "pK = 0.13..."
[1] "pK = 0.21..."
[1][1] "pK = 0.3..." "pK = 0.05..."

[1] "pK = 0.14..."
[1] "pK = 0.22..."
[1] "pK = 0.06..."
[1] "Calculating PC distance matrix..."
[1] "pK = 0.15..."
[1] "pK = 0.07..."
[1] "pK = 0.23..."
[1] "pK = 0.16..."
[1] "pK = 0.08..."
[1] "pK = 0.24..."
[1] "pK = 0.17..."
[1] "pK = 0.09..."
[1] "pK = 0.25..."
[1][1] "pK = 0.1..." "pK = 0.18..."

[1] "pK = 0.26..."
[1] "pK = 0.11..."
[1] "pK = 0.19..."
[1] "pK = 0.27..."
[1] "pK = 0.12..."
[1] "pK = 0.28..."
[1] "pK = 0.13..."
[1] "pK = 0.2..."
[1] "pK = 0.29..."
[1] "pK = 0.14..."
[1] "pK = 0.21..."
[1] "pK = 0.3..."
[1] "pK = 0.15..."
[1] "pK = 0.22..."
[1] "pK = 0.16..."
[1] "pK = 0.23..."
[1] "pK = 0.17..."
[1] "pK = 0.24..."
[1] "pK = 0.18..."
[1] "pK = 0.25..."
[1] "pK = 0.19..."
[1] "pK = 0.26..."
[1] "pK = 0.27..."
[1] "pK = 0.2..."
[1] "pK = 0.28..."
[1] "pK = 0.21..."
[1] "pK = 0.29..."
[1] "pK = 0.22..."
[1] "pK = 0.3..."
[1] "pK = 0.23..."
[1] "pK = 0.24..."
[1] "pK = 0.25..."
[1] "pK = 0.26..."
[1] "pK = 0.27..."
[1] "pK = 0.28..."
[1] "Defining neighborhoods..."
[1] "pK = 0.29..."
[1] "pK = 0.3..."
[1] "Computing pANN across all pK..."
[1] "pK = 0.02..."
[1] "pK = 0.03..."
[1] "pK = 0.04..."
[1] "pK = 0.05..."
[1] "pK = 0.06..."
[1] "pK = 0.07..."
[1] "pK = 0.08..."
[1] "pK = 0.09..."
[1] "pK = 0.1..."
[1] "pK = 0.11..."
[1] "pK = 0.12..."
[1] "pK = 0.13..."
[1] "pK = 0.14..."
[1] "pK = 0.15..."
[1] "pK = 0.16..."
[1] "pK = 0.17..."
[1] "pK = 0.18..."
[1] "pK = 0.19..."
[1] "pK = 0.2..."
[1] "pK = 0.21..."
[1] "pK = 0.22..."
[1] "pK = 0.23..."
[1] "pK = 0.24..."
[1] "pK = 0.25..."
[1] "pK = 0.26..."
[1] "pK = 0.27..."
[1] "pK = 0.28..."
[1] "pK = 0.29..."
[1] "pK = 0.3..."
Loading required package: KernSmooth
KernSmooth 2.23 loaded
Copyright M. P. Wand 1997-2009
Loading required package: ROCR
NULL
[1] "Creating 243 artificial doublets..."
[1] "Creating Seurat object..."
[1] "Normalizing Seurat object..."
Normalizing layer: counts
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
[1] "Finding variable genes..."
Finding variable features for layer counts
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
[1] "Scaling data..."
Centering and scaling data matrix
  |                                                                              |                                                                      |   0%  |                                                                              |===================================                                   |  50%  |                                                                              |======================================================================| 100%
[1] "Running PCA..."
[1] "Calculating PC distance matrix..."
[1] "Computing pANN..."
[1] "Classifying doublets.."
Saving processed Seurat object to: ./out//SCPCS000022_doubletfinder.rds 
          used  (Mb) gc trigger  (Mb) max used  (Mb)
Ncells 3348317 178.9    4975401 265.8  4975401 265.8
Vcells 5848439  44.7   54019751 412.2 67505567 515.1
Processing complete for: ../create_seurat_objects/out//SCPCS000022.rds 
Finished processing file: ../create_seurat_objects/out//SCPCS000022.rds
Processing file: ../create_seurat_objects/out//SCPCS000023.rds
Reading Seurat object from: ../create_seurat_objects/out//SCPCS000023.rds 
Running DoubletFinder on: ../create_seurat_objects/out//SCPCS000023.rds 
Normalizing layer: counts
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Finding variable features for layer counts
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Centering and scaling data matrix
  |                                                                              |                                                                      |   0%  |                                                                              |===================================                                   |  50%  |                                                                              |======================================================================| 100%
PC_ 1 
Positive:  ENSG00000173369, ENSG00000196154, ENSG00000011600, ENSG00000204472, ENSG00000173372, ENSG00000233276, ENSG00000170458, ENSG00000158869, ENSG00000090382, ENSG00000196735 
	   ENSG00000275395, ENSG00000130208, ENSG00000159189, ENSG00000162711, ENSG00000025708, ENSG00000095970, ENSG00000152229, ENSG00000271503, ENSG00000106066, ENSG00000204103 
	   ENSG00000166927, ENSG00000141293, ENSG00000163563, ENSG00000123416, ENSG00000169442, ENSG00000176788, ENSG00000163220, ENSG00000116824, ENSG00000130844, ENSG00000216490 
Negative:  ENSG00000187391, ENSG00000009694, ENSG00000151276, ENSG00000079156, ENSG00000165995, ENSG00000227110, ENSG00000151322, ENSG00000112319, ENSG00000145934, ENSG00000154529 
	   ENSG00000168702, ENSG00000169760, ENSG00000171094, ENSG00000157985, ENSG00000204837, ENSG00000183580, ENSG00000228222, ENSG00000160145, ENSG00000178568, ENSG00000116117 
	   ENSG00000239268, ENSG00000021645, ENSG00000109339, ENSG00000151067, ENSG00000044524, ENSG00000090975, ENSG00000130226, ENSG00000196569, ENSG00000206120, ENSG00000148498 
PC_ 2 
Positive:  ENSG00000125148, ENSG00000087250, ENSG00000114115, ENSG00000160307, ENSG00000133048, ENSG00000113140, ENSG00000172020, ENSG00000105894, ENSG00000120885, ENSG00000155368 
	   ENSG00000163453, ENSG00000169715, ENSG00000197956, ENSG00000026025, ENSG00000189171, ENSG00000166681, ENSG00000132688, ENSG00000109846, ENSG00000145824, ENSG00000089220 
	   ENSG00000142089, ENSG00000159335, ENSG00000115461, ENSG00000131435, ENSG00000131095, ENSG00000129244, ENSG00000103260, ENSG00000125462, ENSG00000046653, ENSG00000143545 
Negative:  ENSG00000173068, ENSG00000112699, ENSG00000236383, ENSG00000130844, ENSG00000152229, ENSG00000128815, ENSG00000196735, ENSG00000184156, ENSG00000273112, ENSG00000156113 
	   ENSG00000162711, ENSG00000106546, ENSG00000106066, ENSG00000112419, ENSG00000214787, ENSG00000188001, ENSG00000170396, ENSG00000069849, ENSG00000182197, ENSG00000229140 
	   ENSG00000059804, ENSG00000166927, ENSG00000152128, ENSG00000101096, ENSG00000283563, ENSG00000157445, ENSG00000115414, ENSG00000275395, ENSG00000170458, ENSG00000100629 
PC_ 3 
Positive:  ENSG00000187720, ENSG00000145147, ENSG00000183098, ENSG00000102554, ENSG00000092607, ENSG00000054598, ENSG00000139915, ENSG00000224389, ENSG00000003989, ENSG00000146151 
	   ENSG00000244731, ENSG00000060718, ENSG00000115252, ENSG00000112175, ENSG00000164692, ENSG00000128573, ENSG00000108821, ENSG00000061455, ENSG00000145423, ENSG00000106483 
	   ENSG00000116678, ENSG00000011465, ENSG00000154864, ENSG00000156218, ENSG00000101333, ENSG00000122870, ENSG00000185070, ENSG00000231246, ENSG00000164303, ENSG00000181234 
Negative:  ENSG00000127249, ENSG00000242268, ENSG00000226476, ENSG00000206120, ENSG00000178568, ENSG00000172260, ENSG00000174776, ENSG00000110693, ENSG00000114204, ENSG00000179104 
	   ENSG00000185008, ENSG00000134532, ENSG00000285367, ENSG00000255794, ENSG00000113448, ENSG00000101542, ENSG00000143995, ENSG00000144893, ENSG00000151320, ENSG00000009694 
	   ENSG00000196482, ENSG00000171094, ENSG00000239268, ENSG00000179399, ENSG00000186094, ENSG00000270207, ENSG00000196876, ENSG00000138771, ENSG00000162670, ENSG00000152578 
PC_ 4 
Positive:  ENSG00000196735, ENSG00000166927, ENSG00000275395, ENSG00000106066, ENSG00000130203, ENSG00000170458, ENSG00000184156, ENSG00000273112, ENSG00000135821, ENSG00000159189 
	   ENSG00000173372, ENSG00000095970, ENSG00000142583, ENSG00000158869, ENSG00000162711, ENSG00000173369, ENSG00000204103, ENSG00000216490, ENSG00000170396, ENSG00000233276 
	   ENSG00000232310, ENSG00000229140, ENSG00000214787, ENSG00000173068, ENSG00000128815, ENSG00000248810, ENSG00000011600, ENSG00000234906, ENSG00000197249, ENSG00000224916 
Negative:  ENSG00000141293, ENSG00000198821, ENSG00000116824, ENSG00000172673, ENSG00000113263, ENSG00000145649, ENSG00000271503, ENSG00000277734, ENSG00000234663, ENSG00000160654 
	   ENSG00000069667, ENSG00000167286, ENSG00000115523, ENSG00000168685, ENSG00000211772, ENSG00000169442, ENSG00000008517, ENSG00000185885, ENSG00000105374, ENSG00000198846 
	   ENSG00000171843, ENSG00000172543, ENSG00000180644, ENSG00000211751, ENSG00000153563, ENSG00000078596, ENSG00000074966, ENSG00000213949, ENSG00000100453, ENSG00000213145 
PC_ 5 
Positive:  ENSG00000125148, ENSG00000145147, ENSG00000121440, ENSG00000101333, ENSG00000111341, ENSG00000133687, ENSG00000140538, ENSG00000092607, ENSG00000164692, ENSG00000139915 
	   ENSG00000183098, ENSG00000003989, ENSG00000061455, ENSG00000011465, ENSG00000182168, ENSG00000102554, ENSG00000145423, ENSG00000187720, ENSG00000146151, ENSG00000169306 
	   ENSG00000112175, ENSG00000128573, ENSG00000183580, ENSG00000144810, ENSG00000164330, ENSG00000115252, ENSG00000181234, ENSG00000156218, ENSG00000251003, ENSG00000148498 
Negative:  ENSG00000148773, ENSG00000137804, ENSG00000139734, ENSG00000187951, ENSG00000171848, ENSG00000165304, ENSG00000137812, ENSG00000259964, ENSG00000051341, ENSG00000186185 
	   ENSG00000066279, ENSG00000178999, ENSG00000131747, ENSG00000213145, ENSG00000075218, ENSG00000237649, ENSG00000109805, ENSG00000197061, ENSG00000163808, ENSG00000285589 
	   ENSG00000126787, ENSG00000176890, ENSG00000117724, ENSG00000116824, ENSG00000152253, ENSG00000138778, ENSG00000184661, ENSG00000156970, ENSG00000259316, ENSG00000156802 
Warning: The default method for RunUMAP has changed from calling Python UMAP via reticulate to the R-native UWOT using the cosine metric
To use Python UMAP via reticulate, set umap.method to 'umap-learn' and metric to 'correlation'
This message will be shown once per session
18:19:58 UMAP embedding parameters a = 0.9922 b = 1.112
18:19:58 Read 2566 rows and found 10 numeric columns
18:19:58 Using Annoy for neighbor search, n_neighbors = 30
18:19:58 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
18:19:58 Writing NN index file to temp file /gpfs0/scratch/6189876/RtmpYOATOZ/file1970815152f711
18:19:58 Searching Annoy index using 1 thread, search_k = 3000
18:19:59 Annoy recall = 100%
18:19:59 Commencing smooth kNN distance calibration using 1 thread with target n_neighbors = 30
18:20:00 Initializing from normalized Laplacian + noise (using RSpectra)
18:20:00 Commencing optimization for 500 epochs, with 103522 positive edges
Using method 'umap'
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
18:20:02 Optimization finished
Computing nearest neighbor graph
Computing SNN
Modularity Optimizer version 1.3.0 by Ludo Waltman and Nees Jan van Eck

Number of nodes: 2566
Number of edges: 83348

Running Louvain algorithm...
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Maximum modularity in 10 random starts: 0.9569
Number of communities: 5
Elapsed time: 0 seconds
Loading required package: fields
Loading required package: spam
Spam version 2.11-0 (2024-10-03) is loaded.
Type 'help( Spam)' or 'demo( spam)' for a short introduction 
and overview of this package.
Help for individual functions is also obtained by adding the
suffix '.spam' to the function name, e.g. 'help( chol.spam)'.

Attaching package: ‘spam’

The following objects are masked from ‘package:base’:

    backsolve, forwardsolve

Loading required package: viridisLite

Try help(fields) to get started.
Loading required package: parallel
[1] "Creating artificial doublets for pN = 5%"
[1] "Creating artificial doublets for pN = 10%"
[1] "Creating artificial doublets for pN = 15%"
[1] "Creating artificial doublets for pN = 20%"
[1] "Creating artificial doublets for pN = 25%"
[1] "Creating artificial doublets for pN = 30%"
[1] "Creating Seurat object..."
[1] "Creating Seurat object..."
[1] "Creating Seurat object..."
[1] "Creating Seurat object..."
[1] "Creating Seurat object..."
[1] "Creating Seurat object..."
[1] "Normalizing Seurat object..."
Normalizing layer: counts
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
[1] "Normalizing Seurat object..."
Normalizing layer: counts
[1] "Normalizing Seurat object..."
Normalizing layer: counts
Performing log-normalization
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
***0%   10   20   30   40   50   60   70   80   90   100%
[1][----|----|----|----|----|----|----|----|----|----|
 "Normalizing Seurat object..."
*Normalizing layer: counts
*************Performing log-normalization
********************************[1]* "Normalizing Seurat object..."*
*Normalizing layer: counts
************0%   10   20   30   40   50   60   70   80   90   100%
*[----|----|----|----|----|----|----|----|----|----|
******|
*************************Performing log-normalization
**********|
******0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
***********************************************|
*****************************************|
[1] "Normalizing Seurat object..."
Normalizing layer: counts
[1] "Finding variable genes..."
Finding variable features for layer counts
Calculating gene variancesPerforming log-normalization

0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
***********************************[1]* "Finding variable genes..."
Finding variable features for layer counts
***********[1] "Finding variable genes..."
Finding variable features for layer counts
***|
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
[1] "Finding variable genes..."
Finding variable features for layer counts
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
[1] "Finding variable genes..."
Finding variable features for layer counts
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
****[1]* "Finding variable genes..."
*Finding variable features for layer counts
********************************************|
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
*****[1] "Scaling data..."
*******************************Centering and scaling data matrix
************  |                                                                            *  |                                                                      |   0%*|
Calculating feature variances of standardized and clipped values  |                                                                            
  |===================================                                   |  50%  |                                                                              |======================================================================| 100%
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
*********************************Calculating feature variances of standardized and clipped values
*****************|
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
[1] "Scaling data..."
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
*****************Centering and scaling data matrix
*****  |                                                                              |                                                                      |   0%****************************|
  |                                                                              |===================================                                   |  50%[1] "Running PCA..."
[1] "Scaling data..."
  |                                                                              |======================================================================| 100%
Calculating feature variances of standardized and clipped values
Centering and scaling data matrix
  |                                                                              |                                                                      |   0%  |                                                                              |===================================                                   |  50%0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**********[1] "Running PCA..."
*************  |                                                                              |======================================================================| 100%*
**************************|
[1] "Scaling data..."
Centering and scaling data matrix
  |                                                                            [1]  |                                                                      |   0% "Running PCA..."
  |                                                                              |===================================                                   |  50%  |                                                                              |======================================================================| 100%
[1] "Scaling data..."
Centering and scaling data matrix
  |                                                                              |                                                                      |   0%  |                                                                              |===================================                                   |  50%[1] "Calculating PC distance matrix..."
Calculating feature variances of standardized and clipped values
  |                                                                              |======================================================================| 100%
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
[1] "Calculating PC distance matrix..."
[1] "Running PCA..."
[1] "Calculating PC distance matrix..."
[1][1] "Scaling data..." "Running PCA..."

[1] "Defining neighborhoods..."
Centering and scaling data matrix
  |                                                                              |                                                                      |   0%  |                                                                              |===================================                                   |  50%  |                                                                              |======================================================================| 100%
[1] "Defining neighborhoods..."
[1] "Running PCA..."
[1] "Defining neighborhoods..."
[1] "Calculating PC distance matrix..."
[1] "Computing pANN across all pK..."
[1] "pK = 0.005..."
[1] "pK = 0.01..."
[1] "Calculating PC distance matrix..."
[1] "pK = 0.02..."
[1] "pK = 0.03..."
[1] "Computing pANN across all pK..."
[1] "pK = 0.005..."
[1] "pK = 0.04..."
[1] "pK = 0.01..."
[1] "pK = 0.05..."
[1] "pK = 0.02..."
[1][1] "pK = 0.06..." "Defining neighborhoods..."

[1] "Computing pANN across all pK..."
[1] "pK = 0.005..."
[1] "pK = 0.03..."
[1] "pK = 0.07..."
[1] "pK = 0.01..."
[1] "pK = 0.08..."
[1] "pK = 0.04..."
[1] "pK = 0.02..."
[1] "pK = 0.05..."
[1] "pK = 0.09..."
[1] "pK = 0.03..."
[1] "pK = 0.06..."
[1] "pK = 0.1..."
[1] "pK = 0.07..."
[1] "pK = 0.04..."
[1] "Defining neighborhoods..."
[1] "pK = 0.11..."
[1] "pK = 0.08..."
[1] "pK = 0.05..."
[1] "pK = 0.12..."
[1] "pK = 0.06..."
[1] "pK = 0.09..."
[1] "pK = 0.13..."
[1] "pK = 0.07..."
[1] "Calculating PC distance matrix..."
[1] "pK = 0.1..."
[1] "pK = 0.14..."
[1] "pK = 0.08..."
[1] "pK = 0.11..."
[1] "pK = 0.15..."
[1] "pK = 0.09..."
[1] "pK = 0.12..."
[1] "pK = 0.16..."
[1] "pK = 0.1..."
[1] "pK = 0.13..."
[1] "pK = 0.17..."
[1] "pK = 0.11..."
[1] "pK = 0.14..."
[1] "pK = 0.18..."
[1] "Computing pANN across all pK..."
[1] "pK = 0.005..."
[1] "pK = 0.12..."
[1] "pK = 0.15..."
[1] "pK = 0.19..."
[1] "pK = 0.01..."
[1] "pK = 0.13..."
[1] "pK = 0.16..."
[1] "pK = 0.02..."
[1] "pK = 0.14..."
[1] "pK = 0.2..."
[1] "pK = 0.17..."
[1] "pK = 0.03..."
[1][1] "pK = 0.21..." "pK = 0.15..."

[1] "pK = 0.18..."
[1] "pK = 0.04..."
[1][1] "pK = 0.16..." "pK = 0.22..."

[1] "pK = 0.19..."
[1] "pK = 0.05..."
[1] "Defining neighborhoods..."
[1] "Computing pANN across all pK..."
[1] "pK = 0.005..."
[1] "pK = 0.17..."
[1] "pK = 0.23..."
[1] "pK = 0.06..."
[1][1] "pK = 0.01..." "pK = 0.2..."

[1] "pK = 0.18..."
[1] "pK = 0.24..."
[1] "pK = 0.07..."
[1] "pK = 0.02..."
[1] "pK = 0.21..."
[1] "pK = 0.08..."
[1] "pK = 0.19..."
[1] "pK = 0.25..."
[1] "pK = 0.03..."
[1] "pK = 0.22..."
[1] "pK = 0.09..."
[1] "pK = 0.2..."
[1] "pK = 0.23..."
[1] "pK = 0.04..."
[1] "pK = 0.26..."
[1] "pK = 0.1..."
[1] "pK = 0.05..."
[1] "pK = 0.21..."
[1] "pK = 0.24..."
[1][1] "pK = 0.11..." "pK = 0.27..."

[1] "pK = 0.06..."
[1] "pK = 0.22..."
[1] "pK = 0.12..."
[1] "pK = 0.28..."
[1] "pK = 0.25..."
[1] "pK = 0.07..."
[1][1] "pK = 0.23..." "pK = 0.13..."

[1] "pK = 0.29..."
[1] "pK = 0.08..."
[1] "pK = 0.26..."
[1] "pK = 0.14..."
[1] "pK = 0.24..."
[1] "pK = 0.3..."
[1] "pK = 0.09..."
[1] "pK = 0.27..."
[1] "pK = 0.15..."
[1] "pK = 0.25..."
[1] "pK = 0.1..."
[1] "pK = 0.28..."
[1] "pK = 0.16..."
[1] "pK = 0.11..."
[1] "pK = 0.29..."
[1] "pK = 0.26..."
[1] "pK = 0.17..."
[1] "pK = 0.12..."
[1] "pK = 0.3..."[1]
 "pK = 0.27..."
[1] "Computing pANN across all pK..."
[1] "pK = 0.005..."
[1] "pK = 0.13..."
[1] "pK = 0.18..."
[1] "pK = 0.28..."
[1] "pK = 0.01..."
[1] "pK = 0.14..."
[1] "pK = 0.19..."
[1] "pK = 0.29..."
[1] "pK = 0.02..."
[1] "pK = 0.15..."
[1][1] "pK = 0.2..." "pK = 0.03..."

[1] "pK = 0.3..."
[1] "pK = 0.16..."
[1] "pK = 0.21..."
[1] "pK = 0.04..."
[1] "pK = 0.17..."
[1] "pK = 0.05..."
[1] "pK = 0.22..."
[1] "pK = 0.18..."
[1] "pK = 0.06..."
[1] "pK = 0.23..."
[1] "pK = 0.07..."
[1] "pK = 0.19..."
[1] "pK = 0.24..."
[1] "pK = 0.08..."
[1] "pK = 0.2..."
[1][1] "pK = 0.25..." "pK = 0.09..."

[1] "pK = 0.21..."
[1] "pK = 0.1..."
[1] "pK = 0.26..."
[1] "pK = 0.11..."
[1] "pK = 0.22..."
[1] "pK = 0.27..."
[1] "pK = 0.12..."
[1] "pK = 0.23..."
[1] "pK = 0.13..."
[1] "pK = 0.28..."
[1] "pK = 0.24..."
[1] "pK = 0.14..."
[1] "pK = 0.29..."
[1] "pK = 0.25..."
[1] "pK = 0.15..."
[1] "pK = 0.3..."
[1] "pK = 0.16..."
[1] "pK = 0.26..."
[1] "pK = 0.17..."
[1] "pK = 0.27..."
[1] "pK = 0.18..."
[1] "pK = 0.28..."
[1] "pK = 0.19..."
[1] "pK = 0.29..."
[1] "pK = 0.2..."
[1] "pK = 0.3..."
[1] "pK = 0.21..."
[1] "pK = 0.22..."
[1] "pK = 0.23..."
[1] "pK = 0.24..."
[1] "pK = 0.25..."
[1] "pK = 0.26..."
[1] "pK = 0.27..."
[1] "pK = 0.28..."
[1] "pK = 0.29..."
[1] "pK = 0.3..."
Loading required package: KernSmooth
KernSmooth 2.23 loaded
Copyright M. P. Wand 1997-2009
Loading required package: ROCR
NULL
[1] "Creating 855 artificial doublets..."
[1] "Creating Seurat object..."
[1] "Normalizing Seurat object..."
Normalizing layer: counts
Performing log-normalization
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
[1] "Finding variable genes..."
Finding variable features for layer counts
Calculating gene variances
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Calculating feature variances of standardized and clipped values
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
[1] "Scaling data..."
Centering and scaling data matrix
  |                                                                              |                                                                      |   0%  |                                                                              |===================================                                   |  50%  |                                                                              |======================================================================| 100%
[1] "Running PCA..."
[1] "Calculating PC distance matrix..."
[1] "Computing pANN..."
[1] "Classifying doublets.."
Saving processed Seurat object to: ./out//SCPCS000023_doubletfinder.rds 
          used  (Mb) gc trigger  (Mb)  max used  (Mb)
Ncells 3348585 178.9    4975401 265.8   4975401 265.8
Vcells 5848711  44.7  113330312 864.7 117985668 900.2
Processing complete for: ../create_seurat_objects/out//SCPCS000023.rds 
Finished processing file: ../create_seurat_objects/out//SCPCS000023.rds
All files processed. Output files are in ./out/.
Job Statistics for 6189876:
           JobID       User               Start                 End    Elapsed   TotalCPU      State        NodeList 
---------------- ---------- ------------------- ------------------- ---------- ---------- ---------- --------------- 
         6189876     axk201 2024-12-30T18:12:08 2024-12-30T18:20:24   00:08:16  16:07.625  COMPLETED   r1pl-hpcf-h04 
   6189876.batch            2024-12-30T18:12:08 2024-12-30T18:20:24   00:08:16  16:07.623  COMPLETED   r1pl-hpcf-h04 
  6189876.extern            2024-12-30T18:12:08 2024-12-30T18:20:24   00:08:16  00:00.001  COMPLETED   r1pl-hpcf-h04 
Requested Resources: billing=20,cpu=20,mem=256G,node=1
Maximum CPU Memory: 8677.01M; 	CPU Efficiency: 9.76% of 02:45:20 core-walltime
